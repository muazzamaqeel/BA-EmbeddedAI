/* AUTOGENERATED DO NOT MODIFY */

/**
  ******************************************************************************
  * @file    network.c
  * @brief   NN Code autogenerated DO NOT MODIFY IT
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2023 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  */

/*
 * GIT_SHA         "e619e8606099384540d70eeaaa8091752b1bebe9"
 * GIT_BRANCH      "STAI-2.2"
 * GIT_DESCRIPTION "atonn-v1.1.1-14-ge619e8606"
 *
 * BUILD_DIR       "/c/local/jenkins_cloud/workspace/2-STEDGEAI_BuildAtonnExe_Win/git/onnx_backend/build"
 * BUILD_DATE      "25/06/2025"
 * BUILD_AUTHOR    "aitest"
 *
 * Command Line options:
 * --load-mdesc-file = "C:/ST/STEdgeAI/2.2/Utilities/configs/stm32n6"
 * --load-mpool-file = "C:/ST/STEdgeAI/2.2/Utilities/windows/targets/stm32/resources/mpools/stm32n6"
 * --cache-maintenance = true
 * --enable-virtual-mem-pools = true
 * --native-float = true
 * --json-quant-file = "C:/Users/Muazzam/Downloads/x-cube-n6-ai-people-detection-tracking-main/FD/x-cube-n6-ai-people-detection-tracking-main/st_ai_output/blazeface_front_128_quant_pc_ff_od_wider_face_OE_3_3_0_Q.json"
 * --Os = true
 * --Ocache-opt = true
 * --output-info-file = "c_info"
 * --onnx-input = "C:/Users/Muazzam/Downloads/x-cube-n6-ai-people-detection-tracking-main/FD/x-cube-n6-ai-people-detection-tracking-main/st_ai_output/blazeface_front_128_quant_pc_ff_od_wider_face_OE_3_3_0.onnx"
 * --out-dir-prefix = "C:/Users/Muazzam/Downloads/x-cube-n6-ai-people-detection-tracking-main/FD/x-cube-n6-ai-people-detection-tracking-main/st_ai_ws/neural_art__network/"
 * --mvei = true
 * --Oauto-sched = true
 *
 * auto* option expanded into:
 *   alt-scheduler = false
 */

#include "ll_aton_NN_interface.h"
#include "ll_aton.h"
#include "ll_aton_lib.h"
#include "ll_aton_version.h"
#include "ll_sw.h"

#if LL_ATON_VERSION_MAJOR != 1 || LL_ATON_VERSION_MINOR != 1 || LL_ATON_VERSION_MICRO != 1 || LL_ATON_VERSION_DEV != 14
#  warning "Possible mismatch in ll_aton library used"
#endif

#if !defined(LL_ATON_DBG_BUFFER_INFO_EXCLUDED)
#  define LL_ATON_DBG_BUFFER_INFO_EXCLUDED 0
#endif

/* global pool 7 is ? */
/* index=7 file postfix=xSPI1 name=hyperRAM offset=0x90000000  absolute_mode size=33554424 READ_WRITE THROUGHPUT=MID LATENCY=HIGH byte width=2 freq ratio=5 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=ON read_power=380 write_power=340 use4initializers=YES score=82  */
/* global pool 8 is 162.33 KB */
/* index=8 file postfix=xSPI2 name=octoFlash offset=0x71000000  absolute_mode size=117440504 READ_ONLY THROUGHPUT=MID LATENCY=HIGH byte width=1 freq ratio=6 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=ON read_power=110 write_power=400 use4initializers=YES score=50  */
/* global pool 1 is 416.00 KB */
/* index=1 file postfix=AXISRAM5 name=npuRAM5 offset=0x342e0000  absolute_mode size=458752 READ_WRITE THROUGHPUT=HIGH LATENCY=LOW byte width=8 freq ratio=1.25 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=OFF read_power=18.531 write_power=16.201 use4initializers=NO score=94  */
/* global pool 2 is 112.00 KB */
/* index=2 file postfix=AXISRAM4 name=npuRAM4 offset=0x34270000  absolute_mode size=458752 READ_WRITE THROUGHPUT=HIGH LATENCY=LOW byte width=8 freq ratio=1.25 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=OFF read_power=18.531 write_power=16.201 use4initializers=NO score=94  */
/* global pool 3 is ? */
/* index=3 file postfix=AXISRAM3 name=npuRAM3 offset=0x34200000  absolute_mode size=458752 READ_WRITE THROUGHPUT=HIGH LATENCY=LOW byte width=8 freq ratio=1.25 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=OFF read_power=18.531 write_power=16.201 use4initializers=NO score=94  */
/* global pool 0 is ? */
/* index=0 file postfix=AXISRAM6 name=npuRAM6 offset=0x34350000  absolute_mode size=458744 READ_WRITE THROUGHPUT=HIGH LATENCY=LOW byte width=8 freq ratio=1.25 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=OFF read_power=19.006 write_power=15.79 use4initializers=NO score=94  */
/* global pool 11 is 2.28 MB */
/* index=11 file postfix=AXISRAM2_AXISRAM3_AXISRAM4_AXISRAM5_AXISRAM6 name=cpuRAM2_npuRAM3_npuRAM4_npuRAM5_npuRAM6 offset=0x34100000  absolute_mode size=2883576 vpool READ_WRITE THROUGHPUT=MID LATENCY=MID byte width=8 freq ratio=2.5 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=OFF read_power=19.006 write_power=16.201 use4initializers=NO score=85  */
/* global pool 4 is ? */
/* index=4 file postfix=AXISRAM2 name=cpuRAM2 offset=0x34100000  absolute_mode size=1048576 READ_WRITE THROUGHPUT=MID LATENCY=MID byte width=8 freq ratio=2.5 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=OFF read_power=17.324 write_power=15.321 use4initializers=NO score=84  */
/* global pool 5 is ? */
/* index=5 file postfix=AXISRAM1 name=cpuRAM1 offset=0x34064000  absolute_mode size=0 READ_WRITE THROUGHPUT=MID LATENCY=MID byte width=8 freq ratio=2.5 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=OFF read_power=16.616 write_power=14.522 use4initializers=NO score=84  */
/* global pool 6 is ? */
/* index=6 file postfix=AXIFLEXMEM name=flexMEM offset=0x34000000  absolute_mode size=0 READ_WRITE THROUGHPUT=MID LATENCY=MID byte width=8 freq ratio=2.5 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=OFF read_power=9.381 write_power=8.569 use4initializers=NO score=84  */

LL_ATON_User_IO_Result_t LL_ATON_Set_User_Input_Buffer_Default(uint32_t num, void* buffer, uint32_t size)
{
  { 
    return LL_ATON_User_IO_WRONG_INDEX;
  }
}

void *LL_ATON_Get_User_Input_Buffer_Default(uint32_t num)
{
  { 
    return NULL;
  }
}

LL_ATON_User_IO_Result_t LL_ATON_Set_User_Output_Buffer_Default(uint32_t num, void* buffer, uint32_t size)
{
  { 
    return LL_ATON_User_IO_WRONG_INDEX;
  }
}

void *LL_ATON_Get_User_Output_Buffer_Default(uint32_t num)
{
  { 
    return NULL;
  }
}

bool LL_ATON_EC_Network_Init_Default(void)
{
  return true;
}

bool LL_ATON_EC_Inference_Init_Default(void)
{
  return true;
}

/* scheduling epoch=0    nodes=155 ------------------------------------------------------------------- */

/* scheduling epoch=1    nodes=1   ------------------------------------------------------------------- */

/* scheduling epoch=2    nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_2(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);


/* Unit= 27 [PROCESSOR 0] */
/* kind=QuantizeLinear node=Quantize_2 */
  Quantizelinear_sw_info quantizelinear1_sw_info = {
    /* "general.input" tensor-related info: */
    .general.input.dim.tensor_b = 1,
    .general.input.dim.tensor_h = 128,
    .general.input.dim.tensor_w = 128,
    .general.input.dim.tensor_c = 3,
    .general.input.dim.num_elem = 49152,
    .general.input.stride.b = 196608,
    .general.input.stride.h = 1536,
    .general.input.stride.w = 12,
    .general.input.stride.c = 4,
    .general.input.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) /* Equivalent hex address = 0x342e0000UL */,
    .general.input.format.is_signed = 0,
    /* "os" tensor-related info: */
    .os.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 165744))) /* Equivalent hex address = 0x71028770UL */,
    .os.format.is_signed = 1,
    .os.dim.num_elem = 1,
    /* "ozp" tensor-related info: */
    .ozp.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 166160))) /* Equivalent hex address = 0x71028910UL */,
    .ozp.format.is_signed = 1,
    .ozp.dim.num_elem = 1,
    /* "general.output" tensor-related info: */
    .general.output.dim.tensor_b = 1,
    .general.output.dim.tensor_h = 128,
    .general.output.dim.tensor_w = 128,
    .general.output.dim.tensor_c = 3,
    .general.output.dim.num_elem = 49152,
    .general.output.stride.b = 49152,
    .general.output.stride.h = 384,
    .general.output.stride.w = 3,
    .general.output.stride.c = 1,
    .general.output.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 196608))) /* Equivalent hex address = 0x34310000UL */,
    .general.output.format.is_signed = 1,
    .general.type = LL_SW_QUANTIZELINEAR,
  };

  /* Low Level SW Layer function invocation. This will exploit EmbedNets libs) */
  /* Node Quantize_2 mapped on EmbedNets (INTEGER) as QuantizeLinear | Category: Format-Converter */
  ll_sw_forward_quantizelinear(&quantizelinear1_sw_info);
  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 196608))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 245760))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 196608))) /* Equivalent hex address = 0x34310000UL */, 49152);

}


/* scheduling epoch=3    nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_3(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Sub node=Conv2D_4_suboff_0 */
  static const LL_Arithacc_InitTypeDef Conv2D_4_suboff_0_init3 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 128,
    .fHeight = 128,
    .fChannels = 3,
    .batchDepth = 3,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_4_suboff_0_init3);


  /* Dma inputs units to cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_4_suboff_0 input ports=0 range=1[196608,245760] */

  static const LL_Streng_TensorInitTypeDef Conv2D_4_suboff_0_dma_init_in_0_3 = {
    /* from memory with batch=3 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_3_out_0 */
    .offset_start = 196608,
    .offset_end = 245760,
    .offset_limit = 245824,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 49152,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_4_suboff_0_dma_init_in_0_3, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 49152 */

  /* Dma output units from cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_4_suboff_0 output ports=0 range=1[294912,344064] */

  static const LL_Streng_TensorInitTypeDef Conv2D_4_suboff_0_dma_init_out_0_3 = {
    /* to memory with batch=3 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_4_zero_off_out_1 */
    .offset_start = 294912,
    .offset_end = 344064,
    .offset_limit = 344128,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 49152,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_4_suboff_0_dma_init_out_0_3, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 49152 */

  static const LL_Switch_InitTypeDef switch_init_in_3[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_suboff_0 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_suboff_0 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
  };


  /* epoch=3 */
  LL_Switch_Init(switch_init_in_3, 2);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_3_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_3_all_units, 3);

}

static void LL_ATON_End_EpochBlock_3(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_3[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_suboff_0 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_suboff_0 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
  };


  /* epoch=3 */
  LL_Switch_Deinit(switch_deinit_in_3, 2);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_3_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_3_all_units, 3);

}


/* scheduling epoch=4    nodes=7   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_4(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_4_subm_1 */
  static const LL_Convacc_InitTypeDef Conv2D_4_subm_1_init4 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 128,
    .fHeight = 128,
    .kernelWidth = 5,
    .kernelHeight = 2,
    .nKernels = 8,
    .batchDepth = 3,
    .hstride = 2,
    .vstride = 2,
    .left_padding = 1,
    .right_padding = 2,
    .top_padding = 0,
    .bot_padding = 2,
    .left_crop = 0,
    .right_crop = 127,
    .top_crop = 2,
    .bot_crop = 127,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_4_subm_1_init4);


  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_4_subm_0 */
  static const LL_Convacc_InitTypeDef Conv2D_4_subm_0_init4 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 128,
    .fHeight = 128,
    .kernelWidth = 5,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 3,
    .hstride = 2,
    .vstride = 2,
    .left_padding = 1,
    .right_padding = 2,
    .top_padding = 1,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 127,
    .top_crop = 0,
    .bot_crop = 127,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_4_subm_0_init4);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_4_add_0 */
  static const LL_Arithacc_InitTypeDef Conv2D_4_add_0_init4 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 0,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 64,
    .fHeight = 64,
    .fChannels = 24,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 1,
    .C_scalar = 0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_4_add_0_init4);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_4_mul_scale_4 */
  static const LL_Arithacc_InitTypeDef Conv2D_4_mul_scale_4_init4 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 15,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 64,
    .fHeight = 64,
    .fChannels = 24,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 165264))) /* Equivalent hex address = 0x71028590UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_4_mul_scale_4_init4);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_4_off_bias_6 */
  static const LL_Arithacc_InitTypeDef Conv2D_4_off_bias_6_init4 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 64,
    .fHeight = 64,
    .fChannels = 24,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 18448,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 163744))) /* Equivalent hex address = 0x71027fa0UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_4_off_bias_6_init4);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Sub node=Conv2D_9_suboff_9 */
  static const LL_Arithacc_InitTypeDef Conv2D_9_suboff_9_init4 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 64,
    .fHeight = 64,
    .fChannels = 24,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_9_suboff_9_init4);


  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_9 */
  static const LL_Convacc_InitTypeDef Conv2D_9_init4 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 2,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 2,
    .raw_o = 0,
    .fWidth = 64,
    .fHeight = 64,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 63,
    .top_crop = 0,
    .bot_crop = 63,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_9_init4);


  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_4_subm_1 input ports=0 range=1[294912,344064] */

  static const LL_Streng_TensorInitTypeDef Conv2D_4_subm_1_dma_init_in_0_4 = {
    /* 128x128x3(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* ???_872 */
    .offset_start = 294912,
    .offset_end = 344064,
    .offset_limit = 344128,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 49152,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 3,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_4_subm_1_dma_init_in_0_4, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_4_subm_1 input ports=1 range=8[150480,151200] */

  static const LL_Streng_TensorInitTypeDef Conv2D_4_subm_1_dma_init_in_1_4 = {
    /* 24x5x2x3(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_4_weights_submask_0_0_3_0_24_3_2_5_360 */
    .offset_start = 150480,
    .offset_end = 151200,
    .offset_limit = 151264,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_4_subm_1_dma_init_in_1_4, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_4_subm_0 input ports=0 range=1[294912,344064] */

  static const LL_Streng_TensorInitTypeDef Conv2D_4_subm_0_dma_init_in_0_4 = {
    /* 128x128x3(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_4_zero_off_out_1 */
    .offset_start = 294912,
    .offset_end = 344064,
    .offset_limit = 344128,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 49152,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 3,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_4_subm_0_dma_init_in_0_4, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_4_subm_0 input ports=1 range=8[148496,149576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_4_subm_0_dma_init_in_1_4 = {
    /* 24x5x3x3(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_4_weights_submask_0_0_0_0_24_3_3_5_359 */
    .offset_start = 148496,
    .offset_end = 149576,
    .offset_limit = 149640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_4_subm_0_dma_init_in_1_4, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_9 input ports=1 range=8[142368,144096] */

  static const LL_Streng_TensorInitTypeDef Conv2D_9_dma_init_in_1_4 = {
    /* 24x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_9_weights_inflated_331 */
    .offset_start = 142368,
    .offset_end = 144096,
    .offset_limit = 144160,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_9_dma_init_in_1_4, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 294912 */
  /* octoFlash -> 3528 */

  /* Dma output units from cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_4_off_bias_6 output ports=0 range=1[196608,294912] */

  static const LL_Streng_TensorInitTypeDef Conv2D_4_off_bias_6_dma_init_out_0_4 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_4_off_bias_out_7 */
    .offset_start = 196608,
    .offset_end = 229376,
    .offset_limit = 294976,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 32768,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 3,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_4_off_bias_6_dma_init_out_0_4, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_9 output ports=0 range=1[0,196608] */

  static const LL_Streng_TensorInitTypeDef Conv2D_9_dma_init_out_0_4 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_9_out_0 */
    .offset_start = 0,
    .offset_end = 65536,
    .offset_limit = 196672,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 65536,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 3,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_9_dma_init_out_0_4, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 196608 */

  static const LL_Switch_InitTypeDef switch_init_in_4[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_subm_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_subm_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_subm_0 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_subm_0 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_add_0 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_add_0 IN: in unit=ARITH_ACC_V2 1 in port=1 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_mul_scale_4 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_off_bias_6 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_off_bias_6 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_9_suboff_9 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 3, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(1) = 0, LL_Switch_Init_Frames(1) = 255, }, /* Conv2D_9 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_9 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_9 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
  };


  /* epoch=4 */
  LL_Switch_Init(switch_init_in_4, 13);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_4_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_4_all_units, 14);

}

static void LL_ATON_End_EpochBlock_4(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_4[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_subm_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_subm_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_subm_0 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_subm_0 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_add_0 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_add_0 IN: in unit=ARITH_ACC_V2 1 in port=1 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_mul_scale_4 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_off_bias_6 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_4_off_bias_6 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_9_suboff_9 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 3, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(1) = 0, LL_Switch_Init_Frames(1) = 255, }, /* Conv2D_9 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_9 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_9 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
  };


  /* epoch=4 */
  LL_Switch_Deinit(switch_deinit_in_4, 13);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_4_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_4_all_units, 14);

}


/* scheduling epoch=5    nodes=2   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_5(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_9_mul_scale_13 */
  static const LL_Arithacc_InitTypeDef Conv2D_9_mul_scale_13_init5 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 15,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 64,
    .fHeight = 64,
    .fChannels = 24,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 165312))) /* Equivalent hex address = 0x710285c0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_9_mul_scale_13_init5);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_9_off_bias_15 */
  static const LL_Arithacc_InitTypeDef Conv2D_9_off_bias_15_init5 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 64,
    .fHeight = 64,
    .fChannels = 24,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 17443,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_9_off_bias_15_init5);


  /* Dma inputs units to cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_9_mul_scale_13 input ports=0 range=1[0,196608] */

  static const LL_Streng_TensorInitTypeDef Conv2D_9_mul_scale_13_dma_init_in_0_5 = {
    /* from memory with batch=8 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_9_out_0 */
    .offset_start = 0,
    .offset_end = 65536,
    .offset_limit = 196672,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 65536,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 3,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_9_mul_scale_13_dma_init_in_0_5, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 196608 */

  /* Dma output units from cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_9_off_bias_15 output ports=0 range=1[294912,393216] */

  static const LL_Streng_TensorInitTypeDef Conv2D_9_off_bias_15_dma_init_out_0_5 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_9_off_bias_out_16 */
    .offset_start = 294912,
    .offset_limit = 393280,
    .frame_count = 0,
    .fwidth = 64,
    .fheight = 64,
    .batch_depth = 8,
    .batch_offset = 24,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 98304,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 3,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_9_off_bias_15_dma_init_out_0_5, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 98304 */

  static const LL_Switch_InitTypeDef switch_init_in_5[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_9_mul_scale_13 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_9_off_bias_15 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_9_off_bias_15 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=5 */
  LL_Switch_Init(switch_init_in_5, 3);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_5_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_5_all_units, 4);

}

static void LL_ATON_End_EpochBlock_5(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_5[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_9_mul_scale_13 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_9_off_bias_15 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_9_off_bias_15 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=5 */
  LL_Switch_Deinit(switch_deinit_in_5, 3);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_5_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_5_all_units, 4);

}


/* scheduling epoch=6    nodes=3   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_6(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_12 */
  static const LL_Convacc_InitTypeDef Conv2D_12_init6 = {
    .simd = 2,
    .fsub = 2,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 2,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 2,
    .raw_o = 0,
    .fWidth = 64,
    .fHeight = 64,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 63,
    .top_crop = 0,
    .bot_crop = 63,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_12_init6);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_12_mul_scale_22 */
  static const LL_Arithacc_InitTypeDef Conv2D_12_mul_scale_22_init6 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 64,
    .fHeight = 64,
    .fChannels = 24,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 165360))) /* Equivalent hex address = 0x710285f0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_12_mul_scale_22_init6);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_12_off_bias_24 */
  static const LL_Arithacc_InitTypeDef Conv2D_12_off_bias_24_init6 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 64,
    .fHeight = 64,
    .fChannels = 24,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 32405,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 163648))) /* Equivalent hex address = 0x71027f40UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_12_off_bias_24_init6);


  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_12 input ports=0 range=1[294912,393216] */

  static const LL_Streng_TensorInitTypeDef Conv2D_12_dma_init_in_0_6 = {
    /* 64x64x24(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_12_zero_off_out_19 */
    .offset_start = 294912,
    .offset_end = 393216,
    .offset_limit = 393280,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 98304,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_12_dma_init_in_0_6, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_12 input ports=1 range=8[151872,152448] */

  static const LL_Streng_TensorInitTypeDef Conv2D_12_dma_init_in_1_6 = {
    /* 24x1x1x24(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_12_weights */
    .offset_start = 151872,
    .offset_end = 152448,
    .offset_limit = 152512,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_12_dma_init_in_1_6, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 98304 */
  /* octoFlash -> 576 */

  /* Dma output units from cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_12_off_bias_24 output ports=0 range=1[0,98304] */

  static const LL_Streng_TensorInitTypeDef Conv2D_12_off_bias_24_dma_init_out_0_6 = {
    /* to memory with batch=24 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_12_off_bias_out_25 */
    .offset_start = 0,
    .offset_end = 98304,
    .offset_limit = 98368,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 98304,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_12_off_bias_24_dma_init_out_0_6, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 98304 */

  static const LL_Switch_InitTypeDef switch_init_in_6[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_12 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_12 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_12_mul_scale_22 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_12_off_bias_24 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_12_off_bias_24 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=6 */
  LL_Switch_Init(switch_init_in_6, 5);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_6_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_6_all_units, 6);

}

static void LL_ATON_End_EpochBlock_6(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_6[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_12 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_12 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_12_mul_scale_22 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_12_off_bias_24 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_12_off_bias_24 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=6 */
  LL_Switch_Deinit(switch_deinit_in_6, 5);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_6_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_6_all_units, 6);

}


/* scheduling epoch=7    nodes=5   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_7(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Add_15 */
  static const LL_Arithacc_InitTypeDef Add_15_init7 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 13,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 2,
    .By_shift = 0,
    .C_shift = 6,
    .fWidth = 64,
    .fHeight = 64,
    .fChannels = 24,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 22651,
    .B_scalar = 25790,
    .C_scalar = -23595,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Add_15_init7);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_23_suboff_27 */
  static const LL_Arithacc_InitTypeDef Conv2D_23_suboff_27_init7 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 64,
    .fHeight = 64,
    .fChannels = 24,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_23_suboff_27_init7);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_23 */
  static const LL_Convacc_InitTypeDef Conv2D_23_init7 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 2,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 2,
    .raw_o = 0,
    .fWidth = 64,
    .fHeight = 64,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 63,
    .top_crop = 0,
    .bot_crop = 63,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_23_init7);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_23_mul_scale_31 */
  static const LL_Arithacc_InitTypeDef Conv2D_23_mul_scale_31_init7 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 14,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 64,
    .fHeight = 64,
    .fChannels = 24,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 165408))) /* Equivalent hex address = 0x71028620UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_23_mul_scale_31_init7);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_23_off_bias_33 */
  static const LL_Arithacc_InitTypeDef Conv2D_23_off_bias_33_init7 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 64,
    .fHeight = 64,
    .fChannels = 24,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 17048,
    .B_scalar = -512,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_23_off_bias_33_init7);


  /* Dma inputs units to cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Add_15 input ports=0 range=1[196608,294912] */

  static const LL_Streng_TensorInitTypeDef Add_15_dma_init_in_0_7 = {
    /* from memory with batch=8 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Relu_7_out_0 */
    .offset_start = 196608,
    .offset_end = 229376,
    .offset_limit = 294976,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 32768,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 3,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Add_15_dma_init_in_0_7, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Add_15 input ports=1 range=1[0,98304] */

  static const LL_Streng_TensorInitTypeDef Add_15_dma_init_in_1_7 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_14_out_0 */
    .offset_start = 0,
    .offset_limit = 98368,
    .frame_count = 0,
    .fwidth = 64,
    .fheight = 64,
    .batch_depth = 8,
    .batch_offset = 24,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 98304,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 3,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Add_15_dma_init_in_1_7, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_23 input ports=1 range=8[144096,145824] */

  static const LL_Streng_TensorInitTypeDef Conv2D_23_dma_init_in_1_7 = {
    /* 24x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_23_weights_inflated_333 */
    .offset_start = 144096,
    .offset_end = 145824,
    .offset_limit = 145888,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_23_dma_init_in_1_7, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 196608 */
  /* octoFlash -> 1728 */

  /* Dma output units from cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Add_15 output ports=0 range=1[98304,196608] */

  static const LL_Streng_TensorInitTypeDef Add_15_dma_init_out_0_7 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Add_15_out_0 */
    .offset_start = 98304,
    .offset_limit = 196672,
    .frame_count = 0,
    .fwidth = 64,
    .fheight = 64,
    .batch_depth = 8,
    .batch_offset = 24,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 98304,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 3,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Add_15_dma_init_out_0_7, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_23_off_bias_33 output ports=0 range=1[327680,425984] */

  static const LL_Streng_TensorInitTypeDef Conv2D_23_off_bias_33_dma_init_out_0_7 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_23_off_bias_out_34 */
    .offset_start = 327680,
    .offset_limit = 426048,
    .frame_count = 0,
    .fwidth = 64,
    .fheight = 64,
    .batch_depth = 8,
    .batch_offset = 24,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 98304,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 3,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_23_off_bias_33_dma_init_out_0_7, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 196608 */

  static const LL_Switch_InitTypeDef switch_init_in_7[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_15 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_15 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_15 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_23_suboff_27 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 3, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(1) = 0, LL_Switch_Init_Frames(1) = 255, }, /* Conv2D_23 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_23 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_23_mul_scale_31 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_23_off_bias_33 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_23_off_bias_33 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=7 */
  LL_Switch_Init(switch_init_in_7, 9);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 98304))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 196608))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 98304))) /* Equivalent hex address = 0x342f8000UL */, 98304);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_7_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_7_all_units, 10);

}

static void LL_ATON_End_EpochBlock_7(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_7[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_15 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_15 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_15 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_23_suboff_27 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 3, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(1) = 0, LL_Switch_Init_Frames(1) = 255, }, /* Conv2D_23 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_23 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_23_mul_scale_31 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_23_off_bias_33 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_23_off_bias_33 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=7 */
  LL_Switch_Deinit(switch_deinit_in_7, 9);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_7_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_7_all_units, 10);

}


/* scheduling epoch=8    nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_8(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 229376))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 327680))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 229376))) /* Equivalent hex address = 0x34318000UL */, 98304);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_19 */
  static const uint32_t Transpose_19_tensor_shape_in_8_shape_0[] = { 1, 64, 64, 24 };
  static const LL_LIB_TensorShape_TypeDef Transpose_19_tensor_shape_in_8[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 98304,
      .offset_end = 196608,
      .offset_limit = 196672,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_19_tensor_shape_in_8_shape_0,
      .batch = 24,
    }
  };

  static const uint32_t Transpose_19_tensor_axes_offsets_in_8_0[] = { 98304, 1536, 24, 1 };
  static const uint32_t* Transpose_19_tensor_axes_offsets_in_8[] = {
    Transpose_19_tensor_axes_offsets_in_8_0
  };

  static const uint32_t Transpose_19_tensor_shape_out_8_shape_0[] = { 1, 24, 64, 64 };
  static const LL_LIB_TensorShape_TypeDef Transpose_19_tensor_shape_out_8[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 229376,
      .offset_end = 327680,
      .offset_limit = 327744,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_19_tensor_shape_out_8_shape_0,
      .batch = 64,
    }
  };

  static const uint32_t Transpose_19_tensor_axes_offsets_out_8_0[] = { 98304, 4096, 64, 1 };
  static const uint32_t* Transpose_19_tensor_axes_offsets_out_8[] = {
    Transpose_19_tensor_axes_offsets_out_8_0
  };

  static const uint8_t Transpose_19_perm_to_use_array_in_8[] = { 0, 3, 2, 1 };
  static const uint8_t Transpose_19_target_pos_array_in_8[] = { 0, 3, 2, 1 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_19_tensor_shape_in_8[0], Transpose_19_tensor_axes_offsets_in_8[0], &Transpose_19_tensor_shape_out_8[0], Transpose_19_tensor_axes_offsets_out_8[0], Transpose_19_target_pos_array_in_8, Transpose_19_perm_to_use_array_in_8, 0, 9);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 229376))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 327680))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 229376))) /* Equivalent hex address = 0x34318000UL */, 98304);

}


/* scheduling epoch=9    nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_9(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Pad_20 */
  static const LL_Convacc_InitTypeDef Pad_20_init9 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = -128,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 0,
    .raw_o = 0,
    .fWidth = 64,
    .fHeight = 24,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 1,
    .batchDepth = 1,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 4,
    .left_crop = 0,
    .right_crop = 63,
    .top_crop = 0,
    .bot_crop = 23,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Pad_20_init9);


  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_26 */
  static const LL_Convacc_InitTypeDef Conv2D_26_init9 = {
    .simd = 2,
    .fsub = -32,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 64,
    .fHeight = 64,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 14,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 63,
    .top_crop = 0,
    .bot_crop = 63,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_26_init9);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_26_mul_scale_40 */
  static const LL_Arithacc_InitTypeDef Conv2D_26_mul_scale_40_init9 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 64,
    .fHeight = 64,
    .fChannels = 28,
    .batchDepth = 14,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 165040))) /* Equivalent hex address = 0x710284b0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_26_mul_scale_40_init9);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_26_off_bias_42 */
  static const LL_Arithacc_InitTypeDef Conv2D_26_off_bias_42_init9 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 64,
    .fHeight = 64,
    .fChannels = 28,
    .batchDepth = 14,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 31861,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 163200))) /* Equivalent hex address = 0x71027d80UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_26_off_bias_42_init9);


  /* Dma inputs units to cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_20 input ports=0 range=1[229376,327680] */

  static const LL_Streng_TensorInitTypeDef Pad_20_dma_init_in_0_9 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_19_out_0 */
    .offset_start = 229376,
    .offset_limit = 327744,
    .frame_count = 0,
    .fwidth = 64,
    .fheight = 24,
    .batch_depth = 1,
    .batch_offset = 64,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 1,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Pad_20_dma_init_in_0_9, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_20 input ports=1 range=8[164912,164976] */

  static const LL_Streng_TensorInitTypeDef Pad_20_dma_init_in_1_9 = {
    /* 64x1x1x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Pad_20_pad_kern_67 */
    .offset_start = 164912,
    .offset_end = 164976,
    .offset_limit = 165040,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Pad_20_dma_init_in_1_9, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_26 input ports=0 range=1[327680,425984] */

  static const LL_Streng_TensorInitTypeDef Conv2D_26_dma_init_in_0_9 = {
    /* 64x64x24(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_26_zero_off_out_37 */
    .offset_start = 327680,
    .offset_end = 425984,
    .offset_limit = 426048,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 98304,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_26_dma_init_in_0_9, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_26 input ports=1 range=8[151200,151872] */

  static const LL_Streng_TensorInitTypeDef Conv2D_26_dma_init_in_1_9 = {
    /* 28x1x1x24(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_26_weights */
    .offset_start = 151200,
    .offset_end = 151872,
    .offset_limit = 151936,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_26_dma_init_in_1_9, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 294912 */
  /* octoFlash -> 736 */

  /* Dma output units from cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_20 output ports=0 range=1[0,114688] */

  static const LL_Streng_TensorInitTypeDef Pad_20_dma_init_out_0_9 = {
    /* to memory with batch=1 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Pad_20_out_0 */
    .offset_start = 0,
    .offset_end = 1792,
    .offset_limit = 114752,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1792,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Pad_20_dma_init_out_0_9, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_26_off_bias_42 output ports=0 range=1[114688,229376] */

  static const LL_Streng_TensorInitTypeDef Conv2D_26_off_bias_42_dma_init_out_0_9 = {
    /* to memory with batch=14 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_26_off_bias_out_43 */
    .offset_start = 114688,
    .offset_end = 172032,
    .offset_limit = 229440,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 57344,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_26_off_bias_42_dma_init_out_0_9, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 229376 */

  static const LL_Switch_InitTypeDef switch_init_in_9[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_20 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_20 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_20 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_26 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_26 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_26_mul_scale_40 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_26_off_bias_42 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_26_off_bias_42 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=9 */
  LL_Switch_Init(switch_init_in_9, 8);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 114688))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) /* Equivalent hex address = 0x342e0000UL */, 114688);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_9_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_9_all_units, 10);

}

static void LL_ATON_End_EpochBlock_9(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_9[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_20 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_20 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_20 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_26 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_26 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_26_mul_scale_40 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_26_off_bias_42 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_26_off_bias_42 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=9 */
  LL_Switch_Deinit(switch_deinit_in_9, 8);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_9_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_9_all_units, 10);

}


/* scheduling epoch=10   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_10(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 229376))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 344064))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 229376))) /* Equivalent hex address = 0x34318000UL */, 114688);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_21 */
  static const uint32_t Transpose_21_tensor_shape_in_10_shape_0[] = { 1, 64, 28, 64 };
  static const LL_LIB_TensorShape_TypeDef Transpose_21_tensor_shape_in_10[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 0,
      .offset_end = 114688,
      .offset_limit = 114752,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_21_tensor_shape_in_10_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_21_tensor_axes_offsets_in_10_0[] = { 114688, 1792, 64, 1 };
  static const uint32_t* Transpose_21_tensor_axes_offsets_in_10[] = {
    Transpose_21_tensor_axes_offsets_in_10_0
  };

  static const uint32_t Transpose_21_tensor_shape_out_10_shape_0[] = { 1, 28, 64, 64 };
  static const LL_LIB_TensorShape_TypeDef Transpose_21_tensor_shape_out_10[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 229376,
      .offset_end = 344064,
      .offset_limit = 344128,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_21_tensor_shape_out_10_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_21_tensor_axes_offsets_out_10_0[] = { 114688, 4096, 64, 1 };
  static const uint32_t* Transpose_21_tensor_axes_offsets_out_10[] = {
    Transpose_21_tensor_axes_offsets_out_10_0
  };

  static const uint8_t Transpose_21_perm_to_use_array_in_10[] = { 0, 2, 1, 3 };
  static const uint8_t Transpose_21_target_pos_array_in_10[] = { 0, 2, 1, 3 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_21_tensor_shape_in_10[0], Transpose_21_tensor_axes_offsets_in_10[0], &Transpose_21_tensor_shape_out_10[0], Transpose_21_tensor_axes_offsets_out_10[0], Transpose_21_target_pos_array_in_10, Transpose_21_perm_to_use_array_in_10, 7, 8);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 229376))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 344064))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 229376))) /* Equivalent hex address = 0x34318000UL */, 114688);

}


/* scheduling epoch=11   nodes=1   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Identity_inserted_id765 */

static void LL_ATON_Start_EpochBlock_11(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Identity_inserted_id765 */
  /* node=Identity_inserted_id765 satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id765 input ports=0 range=1[229376,344064] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id765_dma_init_in_0_11 = {
    /* from memory with batch=1 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_21_out_0_inserted_in765 */
    .offset_start = 229376,
    .offset_end = 233472,
    .offset_limit = 344128,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 4096,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 28,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Identity_inserted_id765_dma_init_in_0_11, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 114688 */

  /* Dma output units from cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id765 output ports=0 range=2[0,114688] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id765_dma_init_out_0_11 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34270000UL) /* Equivalent hex address = 0x34270000UL */}, /* Transpose_21_out_0_inserted_out765 */
    .offset_start = 0,
    .offset_limit = 114752,
    .frame_count = 0,
    .fwidth = 64,
    .fheight = 64,
    .batch_depth = 1,
    .batch_offset = 28,
    .frame_offset = 1,
    .line_offset = 0,
    .loop_offset = 114688,
    .frame_loop_cnt = 28,
    .frame_tot_cnt = 28,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Identity_inserted_id765_dma_init_out_0_11, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM4 <- 114688 */

  static const LL_Switch_InitTypeDef switch_init_in_11[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id765 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
  };


  /* epoch=11 */
  LL_Switch_Init(switch_init_in_11, 1);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_11_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_11_all_units, 2);

}

static void LL_ATON_End_EpochBlock_11(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_11[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id765 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
  };


  /* epoch=11 */
  LL_Switch_Deinit(switch_deinit_in_11, 1);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_11_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_11_all_units, 2);

}


/* scheduling epoch=12   nodes=2   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_12(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Add node=Add_29 */
  static const LL_Arithacc_InitTypeDef Add_29_init12 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 13,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 2,
    .C_shift = 5,
    .fWidth = 64,
    .fHeight = 64,
    .fChannels = 28,
    .batchDepth = 14,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 21646,
    .B_scalar = 27042,
    .C_scalar = -26019,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Add_29_init12);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Sub node=Conv2D_34_suboff_45 */
  static const LL_Arithacc_InitTypeDef Conv2D_34_suboff_45_init12 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 64,
    .fHeight = 64,
    .fChannels = 28,
    .batchDepth = 14,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_34_suboff_45_init12);


  /* Dma inputs units to cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Add_29 input ports=0 range=1[114688,229376] */

  static const LL_Streng_TensorInitTypeDef Add_29_dma_init_in_0_12 = {
    /* from memory with batch=14 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_28_out_0 */
    .offset_start = 114688,
    .offset_end = 172032,
    .offset_limit = 229440,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 57344,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Add_29_dma_init_in_0_12, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Add_29 input ports=1 range=2[0,114688] */

  static const LL_Streng_TensorInitTypeDef Add_29_dma_init_in_1_12 = {
    /* memory canonical to batch=14 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34270000UL) /* Equivalent hex address = 0x34270000UL */}, /* Transpose_21_out_0 */
    .offset_start = 0,
    .offset_limit = 114752,
    .frame_count = 0,
    .fwidth = 64,
    .fheight = 64,
    .batch_depth = 14,
    .batch_offset = 28,
    .frame_offset = 14,
    .line_offset = 0,
    .loop_offset = 114688,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Add_29_dma_init_in_1_12, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 114688 */
  /* npuRAM4 -> 114688 */

  /* Dma output units from cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Add_29 output ports=0 range=1[0,114688] */

  static const LL_Streng_TensorInitTypeDef Add_29_dma_init_out_0_12 = {
    /* to memory canonical from batch=14 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Add_29_out_0 */
    .offset_start = 0,
    .offset_limit = 114752,
    .frame_count = 0,
    .fwidth = 64,
    .fheight = 64,
    .batch_depth = 14,
    .batch_offset = 28,
    .frame_offset = 14,
    .line_offset = 0,
    .loop_offset = 114688,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Add_29_dma_init_out_0_12, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_34_suboff_45 output ports=0 range=1[229376,344064] */

  static const LL_Streng_TensorInitTypeDef Conv2D_34_suboff_45_dma_init_out_0_12 = {
    /* to memory canonical from batch=14 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_34_zero_off_out_46 */
    .offset_start = 229376,
    .offset_limit = 344128,
    .frame_count = 0,
    .fwidth = 64,
    .fheight = 64,
    .batch_depth = 14,
    .batch_offset = 28,
    .frame_offset = 14,
    .line_offset = 0,
    .loop_offset = 114688,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_34_suboff_45_dma_init_out_0_12, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 229376 */

  static const LL_Switch_InitTypeDef switch_init_in_12[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_29 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_29 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_29 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_34_suboff_45 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_34_suboff_45 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=12 */
  LL_Switch_Init(switch_init_in_12, 5);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_12_all_units[] = {
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_12_all_units, 6);

}

static void LL_ATON_End_EpochBlock_12(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_12[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_29 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_29 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_29 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_34_suboff_45 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_34_suboff_45 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=12 */
  LL_Switch_Deinit(switch_deinit_in_12, 5);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_12_all_units[] = {
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_12_all_units, 6);

}


/* scheduling epoch=13   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_13(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 22 [POOL_ACC_V2 0] */
  /* kind=MaxPool node=MaxPool_40 */
  static const LL_Poolacc_InitTypeDef MaxPool_40_init13 = {
    .operation = POOL_MAX,
    .avgnopad = 0,
    .inputX = 64,
    .inputY = 64,
    .outputX = 32,
    .outputY = 32,
    .poolWinX = 2,
    .poolWinY = 2,
    .strideX = 2,
    .strideY = 2,
    .topCrop = 0,
    .bottomCrop = 63,
    .leftCrop = 0,
    .rightCrop = 63,
    .topPad = 0,
    .bottomPad = 0,
    .leftPad = 0,
    .rightPad = 0,
    .batchSize = 7,
    .shift_f = 0,
    .shift_o = 0,
    .dualLine = 1,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .inbytes_f = 1,
    .outbytes_f = 1,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .mulval = 0,
    .pad_val_en = 0,
    .pad_val = 0,
  };

  /* Unit=POOL_ACC_V2 */
  LL_Poolacc_Init(0, &MaxPool_40_init13);


  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_34 */
  static const LL_Convacc_InitTypeDef Conv2D_34_init13 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 64,
    .fHeight = 64,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 1,
    .batchDepth = 1,
    .hstride = 2,
    .vstride = 2,
    .left_padding = 0,
    .right_padding = 1,
    .top_padding = 0,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 63,
    .top_crop = 0,
    .bot_crop = 63,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_34_init13);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_34_mul_scale_49 */
  static const LL_Arithacc_InitTypeDef Conv2D_34_mul_scale_49_init13 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 14,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 28,
    .batchDepth = 1,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 165104))) /* Equivalent hex address = 0x710284f0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_34_mul_scale_49_init13);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_34_off_bias_51 */
  static const LL_Arithacc_InitTypeDef Conv2D_34_off_bias_51_init13 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 28,
    .batchDepth = 1,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 29913,
    .B_scalar = 320,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_34_off_bias_51_init13);


  /* Dma inputs units to cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=MaxPool_40 input ports=0 range=1[0,114688] */

  static const LL_Streng_TensorInitTypeDef MaxPool_40_dma_init_in_0_13 = {
    /* memory canonical to batch=7 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Relu_32_out_0 */
    .offset_start = 0,
    .offset_limit = 114752,
    .frame_count = 0,
    .fwidth = 64,
    .fheight = 64,
    .batch_depth = 7,
    .batch_offset = 28,
    .frame_offset = 7,
    .line_offset = 0,
    .loop_offset = 114688,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &MaxPool_40_dma_init_in_0_13, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_34 input ports=0 range=1[229376,344064] */

  static const LL_Streng_TensorInitTypeDef Conv2D_34_dma_init_in_0_13 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_34_zero_off_out_46 */
    .offset_start = 229376,
    .offset_limit = 344128,
    .frame_count = 0,
    .fwidth = 64,
    .fheight = 64,
    .batch_depth = 1,
    .batch_offset = 28,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 1,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 28,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_34_dma_init_in_0_13, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_34 input ports=1 range=8[157264,157516] */

  static const LL_Streng_TensorInitTypeDef Conv2D_34_dma_init_in_1_13 = {
    /* 28x3x3x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_34_weights */
    .offset_start = 157264,
    .offset_end = 157516,
    .offset_limit = 157584,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_34_dma_init_in_1_13, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 229376 */
  /* octoFlash -> 252 */

  /* Dma output units from cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=MaxPool_40 output ports=0 range=1[372736,401408] */

  static const LL_Streng_TensorInitTypeDef MaxPool_40_dma_init_out_0_13 = {
    /* to memory canonical from batch=7 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* MaxPool_40_out_0 */
    .offset_start = 372736,
    .offset_limit = 401472,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 7,
    .batch_offset = 28,
    .frame_offset = 7,
    .line_offset = 0,
    .loop_offset = 28672,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &MaxPool_40_dma_init_out_0_13, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_34_off_bias_51 output ports=0 range=1[344064,372736] */

  static const LL_Streng_TensorInitTypeDef Conv2D_34_off_bias_51_dma_init_out_0_13 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_34_off_bias_out_52 */
    .offset_start = 344064,
    .offset_limit = 372800,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 1,
    .batch_offset = 28,
    .frame_offset = 1,
    .line_offset = 0,
    .loop_offset = 28672,
    .frame_loop_cnt = 28,
    .frame_tot_cnt = 28,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_34_off_bias_51_dma_init_out_0_13, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 57344 */

  static const LL_Switch_InitTypeDef switch_init_in_13[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, POOL, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* MaxPool_40 IN: in unit=POOL_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, POOL, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* MaxPool_40 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=POOL_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_34 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_34 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_34_mul_scale_49 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_34_off_bias_51 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_34_off_bias_51 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=13 */
  LL_Switch_Init(switch_init_in_13, 7);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 372736))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 401408))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 372736))) /* Equivalent hex address = 0x3433b000UL */, 28672);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_13_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {POOL, 0} }, /* POOL_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_13_all_units, 9);

}

static void LL_ATON_End_EpochBlock_13(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_13[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, POOL, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* MaxPool_40 IN: in unit=POOL_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, POOL, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* MaxPool_40 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=POOL_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_34 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_34 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_34_mul_scale_49 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_34_off_bias_51 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_34_off_bias_51 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=13 */
  LL_Switch_Deinit(switch_deinit_in_13, 7);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_13_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {POOL, 0} }, /* POOL_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_13_all_units, 9);

}


/* scheduling epoch=14   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_14(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 65536))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 94208))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 65536))) /* Equivalent hex address = 0x342f0000UL */, 28672);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_41 */
  static const uint32_t Transpose_41_tensor_shape_in_14_shape_0[] = { 1, 32, 32, 28 };
  static const LL_LIB_TensorShape_TypeDef Transpose_41_tensor_shape_in_14[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 372736,
      .offset_end = 401408,
      .offset_limit = 401472,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_41_tensor_shape_in_14_shape_0,
      .batch = 28,
    }
  };

  static const uint32_t Transpose_41_tensor_axes_offsets_in_14_0[] = { 28672, 896, 28, 1 };
  static const uint32_t* Transpose_41_tensor_axes_offsets_in_14[] = {
    Transpose_41_tensor_axes_offsets_in_14_0
  };

  static const uint32_t Transpose_41_tensor_shape_out_14_shape_0[] = { 1, 28, 32, 32 };
  static const LL_LIB_TensorShape_TypeDef Transpose_41_tensor_shape_out_14[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 65536,
      .offset_end = 94208,
      .offset_limit = 94272,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_41_tensor_shape_out_14_shape_0,
      .batch = 32,
    }
  };

  static const uint32_t Transpose_41_tensor_axes_offsets_out_14_0[] = { 28672, 1024, 32, 1 };
  static const uint32_t* Transpose_41_tensor_axes_offsets_out_14[] = {
    Transpose_41_tensor_axes_offsets_out_14_0
  };

  static const uint8_t Transpose_41_perm_to_use_array_in_14[] = { 0, 3, 2, 1 };
  static const uint8_t Transpose_41_target_pos_array_in_14[] = { 0, 3, 2, 1 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_41_tensor_shape_in_14[0], Transpose_41_tensor_axes_offsets_in_14[0], &Transpose_41_tensor_shape_out_14[0], Transpose_41_tensor_axes_offsets_out_14[0], Transpose_41_target_pos_array_in_14, Transpose_41_perm_to_use_array_in_14, 9, 1);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 65536))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 94208))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 65536))) /* Equivalent hex address = 0x342f0000UL */, 28672);

}


/* scheduling epoch=15   nodes=5   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_15(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Pad_42 */
  static const LL_Convacc_InitTypeDef Pad_42_init15 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = -128,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 0,
    .raw_o = 0,
    .fWidth = 32,
    .fHeight = 28,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 1,
    .batchDepth = 1,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 4,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 27,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Pad_42_init15);


  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_37 */
  static const LL_Convacc_InitTypeDef Conv2D_37_init15 = {
    .simd = 2,
    .fsub = 20,
    .accumulate = 0,
    .kfilt_tot = 32,
    .kfilt_first = 0,
    .kfilt_last = 15,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 32,
    .fHeight = 32,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 14,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 31,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_37_init15);


  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_37_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_37_ca_pipe_1_init15 = {
    .simd = 2,
    .fsub = 20,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 32,
    .kfilt_first = 16,
    .kfilt_last = 31,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 32,
    .fHeight = 32,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 14,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 31,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_37_ca_pipe_1_init15);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_37_mul_scale_58 */
  static const LL_Arithacc_InitTypeDef Conv2D_37_mul_scale_58_init15 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 32,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 164720))) /* Equivalent hex address = 0x71028370UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_37_mul_scale_58_init15);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_37_off_bias_60 */
  static const LL_Arithacc_InitTypeDef Conv2D_37_off_bias_60_init15 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 32,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 28427,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 162560))) /* Equivalent hex address = 0x71027b00UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_37_off_bias_60_init15);


  /* Dma inputs units to cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_42 input ports=0 range=1[65536,94208] */

  static const LL_Streng_TensorInitTypeDef Pad_42_dma_init_in_0_15 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_41_out_0 */
    .offset_start = 65536,
    .offset_limit = 94272,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 28,
    .batch_depth = 1,
    .batch_offset = 32,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 1,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Pad_42_dma_init_in_0_15, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_42 input ports=1 range=8[165520,165552] */

  static const LL_Streng_TensorInitTypeDef Pad_42_dma_init_in_1_15 = {
    /* 32x1x1x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Pad_42_pad_kern_137 */
    .offset_start = 165520,
    .offset_end = 165552,
    .offset_limit = 165616,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Pad_42_dma_init_in_1_15, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_37 input ports=0 range=1[344064,372736] */

  static const LL_Streng_TensorInitTypeDef Conv2D_37_dma_init_in_0_15 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_37_zero_off_out_55 */
    .offset_start = 344064,
    .offset_limit = 372800,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 14,
    .batch_offset = 28,
    .frame_offset = 28,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_37_dma_init_in_0_15, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_37 input ports=1 range=8[149584,150480] */

  static const LL_Streng_TensorInitTypeDef Conv2D_37_dma_init_in_1_15 = {
    /* 32x1x1x28(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_37_weights */
    .offset_start = 149584,
    .offset_end = 150480,
    .offset_limit = 150544,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_37_dma_init_in_1_15, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_37_ca_pipe_1 input ports=0 range=1[344064,372736] */

  static const LL_Streng_TensorInitTypeDef Conv2D_37_ca_pipe_1_dma_init_in_0_15 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_37_zero_off_out_55_copy_in_111 ca pipe offset=1 */
    .offset_start = 344078,
    .offset_limit = 372800,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 14,
    .batch_offset = 28,
    .frame_offset = 28,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_37_ca_pipe_1_dma_init_in_0_15, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 86016 */
  /* octoFlash -> 928 */

  /* Dma output units from cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_42 output ports=0 range=1[32768,65536] */

  static const LL_Streng_TensorInitTypeDef Pad_42_dma_init_out_0_15 = {
    /* to memory with batch=1 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Pad_42_out_0 */
    .offset_start = 32768,
    .offset_end = 33792,
    .offset_limit = 65600,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1024,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Pad_42_dma_init_out_0_15, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_37_off_bias_60 output ports=0 range=1[0,32768] */

  static const LL_Streng_TensorInitTypeDef Conv2D_37_off_bias_60_dma_init_out_0_15 = {
    /* to memory with batch=16 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_37_off_bias_out_61 */
    .offset_start = 0,
    .offset_end = 16384,
    .offset_limit = 32832,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 16384,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_37_off_bias_60_dma_init_out_0_15, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 65536 */

  static const LL_Switch_InitTypeDef switch_init_in_15[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_42 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_42 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_42 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_37 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_37 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_37_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_37_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_37_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_37_mul_scale_58 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_37_off_bias_60 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_37_off_bias_60 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=15 */
  LL_Switch_Init(switch_init_in_15, 11);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32768))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 65536))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32768))) /* Equivalent hex address = 0x342e8000UL */, 32768);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_15_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_15_all_units, 12);

}

static void LL_ATON_End_EpochBlock_15(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_15[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_42 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_42 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_42 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_37 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_37 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_37_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_37_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_37_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_37_mul_scale_58 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_37_off_bias_60 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_37_off_bias_60 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=15 */
  LL_Switch_Deinit(switch_deinit_in_15, 11);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_15_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_15_all_units, 12);

}


/* scheduling epoch=16   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_16(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 65536))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 98304))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 65536))) /* Equivalent hex address = 0x342f0000UL */, 32768);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_43 */
  static const uint32_t Transpose_43_tensor_shape_in_16_shape_0[] = { 1, 32, 32, 32 };
  static const LL_LIB_TensorShape_TypeDef Transpose_43_tensor_shape_in_16[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 32768,
      .offset_end = 65536,
      .offset_limit = 65600,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_43_tensor_shape_in_16_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_43_tensor_axes_offsets_in_16_0[] = { 32768, 1024, 32, 1 };
  static const uint32_t* Transpose_43_tensor_axes_offsets_in_16[] = {
    Transpose_43_tensor_axes_offsets_in_16_0
  };

  static const uint32_t Transpose_43_tensor_shape_out_16_shape_0[] = { 1, 32, 32, 32 };
  static const LL_LIB_TensorShape_TypeDef Transpose_43_tensor_shape_out_16[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 65536,
      .offset_end = 98304,
      .offset_limit = 98368,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_43_tensor_shape_out_16_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_43_tensor_axes_offsets_out_16_0[] = { 32768, 1024, 32, 1 };
  static const uint32_t* Transpose_43_tensor_axes_offsets_out_16[] = {
    Transpose_43_tensor_axes_offsets_out_16_0
  };

  static const uint8_t Transpose_43_perm_to_use_array_in_16[] = { 0, 2, 1, 3 };
  static const uint8_t Transpose_43_target_pos_array_in_16[] = { 0, 2, 1, 3 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_43_tensor_shape_in_16[0], Transpose_43_tensor_axes_offsets_in_16[0], &Transpose_43_tensor_shape_out_16[0], Transpose_43_tensor_axes_offsets_out_16[0], Transpose_43_target_pos_array_in_16, Transpose_43_perm_to_use_array_in_16, 8, 1);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 65536))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 98304))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 65536))) /* Equivalent hex address = 0x342f0000UL */, 32768);

}


/* scheduling epoch=17   nodes=1   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Identity_inserted_id770 */

static void LL_ATON_Start_EpochBlock_17(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Identity_inserted_id770 */
  /* node=Identity_inserted_id770 satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id770 input ports=0 range=1[65536,98304] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id770_dma_init_in_0_17 = {
    /* from memory with batch=1 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_43_out_0_inserted_in770 */
    .offset_start = 65536,
    .offset_end = 66560,
    .offset_limit = 98368,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1024,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Identity_inserted_id770_dma_init_in_0_17, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 32768 */

  /* Dma output units from cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id770 output ports=0 range=1[32768,65536] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id770_dma_init_out_0_17 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_43_out_0_inserted_out770 */
    .offset_start = 32768,
    .offset_limit = 65600,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 1,
    .batch_offset = 32,
    .frame_offset = 1,
    .line_offset = 0,
    .loop_offset = 32768,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Identity_inserted_id770_dma_init_out_0_17, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 32768 */

  static const LL_Switch_InitTypeDef switch_init_in_17[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id770 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
  };


  /* epoch=17 */
  LL_Switch_Init(switch_init_in_17, 1);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_17_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_17_all_units, 2);

}

static void LL_ATON_End_EpochBlock_17(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_17[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id770 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
  };


  /* epoch=17 */
  LL_Switch_Deinit(switch_deinit_in_17, 1);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_17_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_17_all_units, 2);

}


/* scheduling epoch=18   nodes=2   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_18(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Add_44 */
  static const LL_Arithacc_InitTypeDef Add_44_init18 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 1,
    .C_shift = 4,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 32,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 29705,
    .B_scalar = 20060,
    .C_scalar = -24840,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Add_44_init18);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_52_suboff_63 */
  static const LL_Arithacc_InitTypeDef Conv2D_52_suboff_63_init18 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 32,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_52_suboff_63_init18);


  /* Dma inputs units to cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Add_44 input ports=0 range=1[0,32768] */

  static const LL_Streng_TensorInitTypeDef Add_44_dma_init_in_0_18 = {
    /* from memory with batch=16 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_39_out_0 */
    .offset_start = 0,
    .offset_end = 16384,
    .offset_limit = 32832,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 16384,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Add_44_dma_init_in_0_18, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Add_44 input ports=1 range=1[32768,65536] */

  static const LL_Streng_TensorInitTypeDef Add_44_dma_init_in_1_18 = {
    /* memory canonical to batch=16 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_43_out_0 */
    .offset_start = 32768,
    .offset_limit = 65600,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 16,
    .batch_offset = 32,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 32768,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Add_44_dma_init_in_1_18, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 65536 */

  /* Dma output units from cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Add_44 output ports=0 range=1[65536,98304] */

  static const LL_Streng_TensorInitTypeDef Add_44_dma_init_out_0_18 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Add_44_out_0 */
    .offset_start = 65536,
    .offset_limit = 98368,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 16,
    .batch_offset = 32,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 32768,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Add_44_dma_init_out_0_18, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_52_suboff_63 output ports=0 range=1[98304,131072] */

  static const LL_Streng_TensorInitTypeDef Conv2D_52_suboff_63_dma_init_out_0_18 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_52_zero_off_out_64 */
    .offset_start = 98304,
    .offset_limit = 131136,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 16,
    .batch_offset = 32,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 32768,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_52_suboff_63_dma_init_out_0_18, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 65536 */

  static const LL_Switch_InitTypeDef switch_init_in_18[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_44 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_44 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_44 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_suboff_63 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_suboff_63 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=18 */
  LL_Switch_Init(switch_init_in_18, 5);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 65536))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 98304))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 65536))) /* Equivalent hex address = 0x342f0000UL */, 32768);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_18_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_18_all_units, 6);

}

static void LL_ATON_End_EpochBlock_18(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_18[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_44 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_44 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_44 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_suboff_63 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_suboff_63 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=18 */
  LL_Switch_Deinit(switch_deinit_in_18, 5);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_18_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_18_all_units, 6);

}


/* scheduling epoch=19   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_19(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 131072))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 163840))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 131072))) /* Equivalent hex address = 0x34300000UL */, 32768);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_48 */
  static const uint32_t Transpose_48_tensor_shape_in_19_shape_0[] = { 1, 32, 32, 32 };
  static const LL_LIB_TensorShape_TypeDef Transpose_48_tensor_shape_in_19[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 65536,
      .offset_end = 98304,
      .offset_limit = 98368,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_48_tensor_shape_in_19_shape_0,
      .batch = 32,
    }
  };

  static const uint32_t Transpose_48_tensor_axes_offsets_in_19_0[] = { 32768, 1024, 32, 1 };
  static const uint32_t* Transpose_48_tensor_axes_offsets_in_19[] = {
    Transpose_48_tensor_axes_offsets_in_19_0
  };

  static const uint32_t Transpose_48_tensor_shape_out_19_shape_0[] = { 1, 32, 32, 32 };
  static const LL_LIB_TensorShape_TypeDef Transpose_48_tensor_shape_out_19[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 131072,
      .offset_end = 163840,
      .offset_limit = 163904,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_48_tensor_shape_out_19_shape_0,
      .batch = 32,
    }
  };

  static const uint32_t Transpose_48_tensor_axes_offsets_out_19_0[] = { 32768, 1024, 32, 1 };
  static const uint32_t* Transpose_48_tensor_axes_offsets_out_19[] = {
    Transpose_48_tensor_axes_offsets_out_19_0
  };

  static const uint8_t Transpose_48_perm_to_use_array_in_19[] = { 0, 3, 2, 1 };
  static const uint8_t Transpose_48_target_pos_array_in_19[] = { 0, 3, 2, 1 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_48_tensor_shape_in_19[0], Transpose_48_tensor_axes_offsets_in_19[0], &Transpose_48_tensor_shape_out_19[0], Transpose_48_tensor_axes_offsets_out_19[0], Transpose_48_target_pos_array_in_19, Transpose_48_perm_to_use_array_in_19, 6, 7);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 131072))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 163840))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 131072))) /* Equivalent hex address = 0x34300000UL */, 32768);

}


/* scheduling epoch=20   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_20(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_52 */
  static const LL_Convacc_InitTypeDef Conv2D_52_init20 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 32,
    .fHeight = 32,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 31,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_52_init20);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_52_mul_scale_67 */
  static const LL_Arithacc_InitTypeDef Conv2D_52_mul_scale_67_init20 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 32,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 164784))) /* Equivalent hex address = 0x710283b0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_52_mul_scale_67_init20);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_52_off_bias_69 */
  static const LL_Arithacc_InitTypeDef Conv2D_52_off_bias_69_init20 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 32,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 23308,
    .B_scalar = -352,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_52_off_bias_69_init20);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Pad_49 */
  static const LL_Convacc_InitTypeDef Pad_49_init20 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = -128,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 0,
    .raw_o = 0,
    .fWidth = 32,
    .fHeight = 32,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 1,
    .batchDepth = 1,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 4,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 31,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Pad_49_init20);


  /* Dma inputs units to cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_52 input ports=0 range=1[98304,131072] */

  static const LL_Streng_TensorInitTypeDef Conv2D_52_dma_init_in_0_20 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_52_zero_off_out_64 */
    .offset_start = 98304,
    .offset_limit = 131136,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 8,
    .batch_offset = 32,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_52_dma_init_in_0_20, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_52 input ports=1 range=8[138048,140352] */

  static const LL_Streng_TensorInitTypeDef Conv2D_52_dma_init_in_1_20 = {
    /* 32x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_52_weights_inflated_336 */
    .offset_start = 138048,
    .offset_end = 140352,
    .offset_limit = 140416,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_52_dma_init_in_1_20, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_49 input ports=0 range=1[131072,163840] */

  static const LL_Streng_TensorInitTypeDef Pad_49_dma_init_in_0_20 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_48_out_0 */
    .offset_start = 131072,
    .offset_limit = 163904,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 1,
    .batch_offset = 32,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 1,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Pad_49_dma_init_in_0_20, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_49 input ports=1 range=8[165488,165520] */

  static const LL_Streng_TensorInitTypeDef Pad_49_dma_init_in_1_20 = {
    /* 32x1x1x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Pad_49_pad_kern_150 */
    .offset_start = 165488,
    .offset_end = 165520,
    .offset_limit = 165584,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Pad_49_dma_init_in_1_20, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 65536 */
  /* octoFlash -> 2336 */

  /* Dma output units from cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_52_off_bias_69 output ports=0 range=1[163840,196608] */

  static const LL_Streng_TensorInitTypeDef Conv2D_52_off_bias_69_dma_init_out_0_20 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_52_off_bias_out_70 */
    .offset_start = 163840,
    .offset_limit = 196672,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 8,
    .batch_offset = 32,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 32768,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_52_off_bias_69_dma_init_out_0_20, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_49 output ports=0 range=1[0,36864] */

  static const LL_Streng_TensorInitTypeDef Pad_49_dma_init_out_0_20 = {
    /* to memory with batch=1 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Pad_49_out_0 */
    .offset_start = 0,
    .offset_end = 1152,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1152,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Pad_49_dma_init_out_0_20, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 69632 */

  static const LL_Switch_InitTypeDef switch_init_in_20[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_mul_scale_67 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_off_bias_69 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_off_bias_69 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_49 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_49 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_49 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
  };


  /* epoch=20 */
  LL_Switch_Init(switch_init_in_20, 8);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 36864))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) /* Equivalent hex address = 0x342e0000UL */, 36864);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_20_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_20_all_units, 10);

}

static void LL_ATON_End_EpochBlock_20(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_20[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_mul_scale_67 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_off_bias_69 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_off_bias_69 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_49 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_49 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_49 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
  };


  /* epoch=20 */
  LL_Switch_Deinit(switch_deinit_in_20, 8);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_20_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_20_all_units, 10);

}


/* scheduling epoch=21   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_21(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 36864))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 73728))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 36864))) /* Equivalent hex address = 0x342e9000UL */, 36864);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_50 */
  static const uint32_t Transpose_50_tensor_shape_in_21_shape_0[] = { 1, 32, 36, 32 };
  static const LL_LIB_TensorShape_TypeDef Transpose_50_tensor_shape_in_21[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 0,
      .offset_end = 36864,
      .offset_limit = 36928,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_50_tensor_shape_in_21_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_50_tensor_axes_offsets_in_21_0[] = { 36864, 1152, 32, 1 };
  static const uint32_t* Transpose_50_tensor_axes_offsets_in_21[] = {
    Transpose_50_tensor_axes_offsets_in_21_0
  };

  static const uint32_t Transpose_50_tensor_shape_out_21_shape_0[] = { 1, 36, 32, 32 };
  static const LL_LIB_TensorShape_TypeDef Transpose_50_tensor_shape_out_21[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 36864,
      .offset_end = 73728,
      .offset_limit = 73792,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_50_tensor_shape_out_21_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_50_tensor_axes_offsets_out_21_0[] = { 36864, 1024, 32, 1 };
  static const uint32_t* Transpose_50_tensor_axes_offsets_out_21[] = {
    Transpose_50_tensor_axes_offsets_out_21_0
  };

  static const uint8_t Transpose_50_perm_to_use_array_in_21[] = { 0, 2, 1, 3 };
  static const uint8_t Transpose_50_target_pos_array_in_21[] = { 0, 2, 1, 3 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_50_tensor_shape_in_21[0], Transpose_50_tensor_axes_offsets_in_21[0], &Transpose_50_tensor_shape_out_21[0], Transpose_50_tensor_axes_offsets_out_21[0], Transpose_50_target_pos_array_in_21, Transpose_50_perm_to_use_array_in_21, 4, 5);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 36864))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 73728))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 36864))) /* Equivalent hex address = 0x342e9000UL */, 36864);

}


/* scheduling epoch=22   nodes=5   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Identity_inserted_id775 */

static void LL_ATON_Start_EpochBlock_22(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Identity_inserted_id775 */
  /* node=Identity_inserted_id775 satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_55 */
  static const LL_Convacc_InitTypeDef Conv2D_55_init22 = {
    .simd = 2,
    .fsub = -22,
    .accumulate = 0,
    .kfilt_tot = 36,
    .kfilt_first = 0,
    .kfilt_last = 17,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 32,
    .fHeight = 32,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 18,
    .batchDepth = 16,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 31,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_55_init22);


  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_55_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_55_ca_pipe_1_init22 = {
    .simd = 2,
    .fsub = -22,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 36,
    .kfilt_first = 18,
    .kfilt_last = 35,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 32,
    .fHeight = 32,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 18,
    .batchDepth = 16,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 31,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_55_ca_pipe_1_init22);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_55_mul_scale_76 */
  static const LL_Arithacc_InitTypeDef Conv2D_55_mul_scale_76_init22 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 36,
    .batchDepth = 18,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 164496))) /* Equivalent hex address = 0x71028290UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_55_mul_scale_76_init22);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_55_off_bias_78 */
  static const LL_Arithacc_InitTypeDef Conv2D_55_off_bias_78_init22 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 36,
    .batchDepth = 18,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 30142,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 161984))) /* Equivalent hex address = 0x710278c0UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_55_off_bias_78_init22);


  /* Dma inputs units to cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id775 input ports=0 range=1[36864,73728] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id775_dma_init_in_0_22 = {
    /* from memory with batch=1 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_50_out_0_inserted_in775 */
    .offset_start = 36864,
    .offset_end = 37888,
    .offset_limit = 73792,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1024,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 36,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Identity_inserted_id775_dma_init_in_0_22, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_55 input ports=0 range=1[163840,196608] */

  static const LL_Streng_TensorInitTypeDef Conv2D_55_dma_init_in_0_22 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_55_zero_off_out_73 */
    .offset_start = 163840,
    .offset_limit = 196672,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 16,
    .batch_offset = 32,
    .frame_offset = 32,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_55_dma_init_in_0_22, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_55 input ports=1 range=8[147344,148496] */

  static const LL_Streng_TensorInitTypeDef Conv2D_55_dma_init_in_1_22 = {
    /* 36x1x1x32(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_55_weights */
    .offset_start = 147344,
    .offset_end = 148496,
    .offset_limit = 148560,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_55_dma_init_in_1_22, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_55_ca_pipe_1 input ports=0 range=1[163840,196608] */

  static const LL_Streng_TensorInitTypeDef Conv2D_55_ca_pipe_1_dma_init_in_0_22 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_55_zero_off_out_73_copy_in_113 ca pipe offset=1 */
    .offset_start = 163856,
    .offset_limit = 196672,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 16,
    .batch_offset = 32,
    .frame_offset = 32,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_55_ca_pipe_1_dma_init_in_0_22, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 102400 */
  /* octoFlash -> 1152 */

  /* Dma output units from cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id775 output ports=0 range=1[73728,110592] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id775_dma_init_out_0_22 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_50_out_0_inserted_out775 */
    .offset_start = 73728,
    .offset_limit = 110656,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 1,
    .batch_offset = 36,
    .frame_offset = 1,
    .line_offset = 0,
    .loop_offset = 36864,
    .frame_loop_cnt = 36,
    .frame_tot_cnt = 36,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Identity_inserted_id775_dma_init_out_0_22, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_55_off_bias_78 output ports=0 range=1[0,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_55_off_bias_78_dma_init_out_0_22 = {
    /* to memory with batch=18 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_55_off_bias_out_79 */
    .offset_start = 0,
    .offset_end = 18432,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 18432,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_55_off_bias_78_dma_init_out_0_22, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 73728 */

  static const LL_Switch_InitTypeDef switch_init_in_22[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id775 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_55 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_55 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_55_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_55_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_55_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_55_mul_scale_76 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_55_off_bias_78 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_55_off_bias_78 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=22 */
  LL_Switch_Init(switch_init_in_22, 9);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_22_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_22_all_units, 10);

}

static void LL_ATON_End_EpochBlock_22(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_22[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id775 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_55 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_55 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_55_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_55_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_55_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_55_mul_scale_76 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_55_off_bias_78 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_55_off_bias_78 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=22 */
  LL_Switch_Deinit(switch_deinit_in_22, 9);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_22_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_22_all_units, 10);

}


/* scheduling epoch=23   nodes=2   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_23(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Add node=Add_58 */
  static const LL_Arithacc_InitTypeDef Add_58_init23 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 13,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 1,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 36,
    .batchDepth = 18,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 20143,
    .B_scalar = 23561,
    .C_scalar = -3944,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Add_58_init23);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Sub node=Conv2D_66_suboff_81 */
  static const LL_Arithacc_InitTypeDef Conv2D_66_suboff_81_init23 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 36,
    .batchDepth = 18,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_66_suboff_81_init23);


  /* Dma inputs units to cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Add_58 input ports=0 range=1[0,36864] */

  static const LL_Streng_TensorInitTypeDef Add_58_dma_init_in_0_23 = {
    /* from memory with batch=18 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_57_out_0 */
    .offset_start = 0,
    .offset_end = 18432,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 18432,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Add_58_dma_init_in_0_23, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Add_58 input ports=1 range=1[73728,110592] */

  static const LL_Streng_TensorInitTypeDef Add_58_dma_init_in_1_23 = {
    /* memory canonical to batch=18 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_50_out_0 */
    .offset_start = 73728,
    .offset_limit = 110656,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 18,
    .batch_offset = 36,
    .frame_offset = 18,
    .line_offset = 0,
    .loop_offset = 36864,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Add_58_dma_init_in_1_23, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 73728 */

  /* Dma output units from cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Add_58 output ports=0 range=1[36864,73728] */

  static const LL_Streng_TensorInitTypeDef Add_58_dma_init_out_0_23 = {
    /* to memory canonical from batch=18 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Add_58_out_0 */
    .offset_start = 36864,
    .offset_limit = 73792,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 18,
    .batch_offset = 36,
    .frame_offset = 18,
    .line_offset = 0,
    .loop_offset = 36864,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Add_58_dma_init_out_0_23, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_66_suboff_81 output ports=0 range=1[110592,147456] */

  static const LL_Streng_TensorInitTypeDef Conv2D_66_suboff_81_dma_init_out_0_23 = {
    /* to memory canonical from batch=18 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_66_zero_off_out_82 */
    .offset_start = 110592,
    .offset_limit = 147520,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 18,
    .batch_offset = 36,
    .frame_offset = 18,
    .line_offset = 0,
    .loop_offset = 36864,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_66_suboff_81_dma_init_out_0_23, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 73728 */

  static const LL_Switch_InitTypeDef switch_init_in_23[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_58 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_58 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_58 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_suboff_81 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_suboff_81 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=23 */
  LL_Switch_Init(switch_init_in_23, 5);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 36864))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 73728))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 36864))) /* Equivalent hex address = 0x342e9000UL */, 36864);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_23_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_23_all_units, 6);

}

static void LL_ATON_End_EpochBlock_23(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_23[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_58 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_58 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_58 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_suboff_81 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_suboff_81 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=23 */
  LL_Switch_Deinit(switch_deinit_in_23, 5);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_23_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_23_all_units, 6);

}


/* scheduling epoch=24   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_24(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 73728))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 110592))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 73728))) /* Equivalent hex address = 0x342f2000UL */, 36864);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_62 */
  static const uint32_t Transpose_62_tensor_shape_in_24_shape_0[] = { 1, 32, 32, 36 };
  static const LL_LIB_TensorShape_TypeDef Transpose_62_tensor_shape_in_24[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 36864,
      .offset_end = 73728,
      .offset_limit = 73792,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_62_tensor_shape_in_24_shape_0,
      .batch = 36,
    }
  };

  static const uint32_t Transpose_62_tensor_axes_offsets_in_24_0[] = { 36864, 1152, 36, 1 };
  static const uint32_t* Transpose_62_tensor_axes_offsets_in_24[] = {
    Transpose_62_tensor_axes_offsets_in_24_0
  };

  static const uint32_t Transpose_62_tensor_shape_out_24_shape_0[] = { 1, 36, 32, 32 };
  static const LL_LIB_TensorShape_TypeDef Transpose_62_tensor_shape_out_24[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 73728,
      .offset_end = 110592,
      .offset_limit = 110656,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_62_tensor_shape_out_24_shape_0,
      .batch = 32,
    }
  };

  static const uint32_t Transpose_62_tensor_axes_offsets_out_24_0[] = { 36864, 1024, 32, 1 };
  static const uint32_t* Transpose_62_tensor_axes_offsets_out_24[] = {
    Transpose_62_tensor_axes_offsets_out_24_0
  };

  static const uint8_t Transpose_62_perm_to_use_array_in_24[] = { 0, 3, 2, 1 };
  static const uint8_t Transpose_62_target_pos_array_in_24[] = { 0, 3, 2, 1 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_62_tensor_shape_in_24[0], Transpose_62_tensor_axes_offsets_in_24[0], &Transpose_62_tensor_shape_out_24[0], Transpose_62_tensor_axes_offsets_out_24[0], Transpose_62_target_pos_array_in_24, Transpose_62_perm_to_use_array_in_24, 0, 1);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 73728))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 110592))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 73728))) /* Equivalent hex address = 0x342f2000UL */, 36864);

}


/* scheduling epoch=25   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_25(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_66 */
  static const LL_Convacc_InitTypeDef Conv2D_66_init25 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 32,
    .fHeight = 32,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 1,
    .batchDepth = 1,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 31,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_66_init25);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_66_mul_scale_85 */
  static const LL_Arithacc_InitTypeDef Conv2D_66_mul_scale_85_init25 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 14,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 36,
    .batchDepth = 1,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 164576))) /* Equivalent hex address = 0x710282e0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_66_mul_scale_85_init25);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_66_off_bias_87 */
  static const LL_Arithacc_InitTypeDef Conv2D_66_off_bias_87_init25 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 36,
    .batchDepth = 1,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 27716,
    .B_scalar = 320,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_66_off_bias_87_init25);


  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Pad_63 */
  static const LL_Convacc_InitTypeDef Pad_63_init25 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = -128,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 0,
    .raw_o = 0,
    .fWidth = 32,
    .fHeight = 36,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 1,
    .batchDepth = 1,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 6,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 35,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Pad_63_init25);


  /* Dma inputs units to cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_66 input ports=0 range=1[110592,147456] */

  static const LL_Streng_TensorInitTypeDef Conv2D_66_dma_init_in_0_25 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_66_zero_off_out_82 */
    .offset_start = 110592,
    .offset_limit = 147520,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 1,
    .batch_offset = 36,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 1,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 36,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_66_dma_init_in_0_25, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_66 input ports=1 range=8[156064,156388] */

  static const LL_Streng_TensorInitTypeDef Conv2D_66_dma_init_in_1_25 = {
    /* 36x3x3x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_66_weights */
    .offset_start = 156064,
    .offset_end = 156388,
    .offset_limit = 156456,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_66_dma_init_in_1_25, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_63 input ports=0 range=1[73728,110592] */

  static const LL_Streng_TensorInitTypeDef Pad_63_dma_init_in_0_25 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_62_out_0 */
    .offset_start = 73728,
    .offset_limit = 110656,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 36,
    .batch_depth = 1,
    .batch_offset = 32,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 1,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Pad_63_dma_init_in_0_25, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_63 input ports=1 range=8[165456,165488] */

  static const LL_Streng_TensorInitTypeDef Pad_63_dma_init_in_1_25 = {
    /* 32x1x1x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Pad_63_pad_kern_191 */
    .offset_start = 165456,
    .offset_end = 165488,
    .offset_limit = 165552,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Pad_63_dma_init_in_1_25, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 73728 */
  /* octoFlash -> 356 */

  /* Dma output units from cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_66_off_bias_87 output ports=0 range=1[172032,208896] */

  static const LL_Streng_TensorInitTypeDef Conv2D_66_off_bias_87_dma_init_out_0_25 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_66_off_bias_out_88 */
    .offset_start = 172032,
    .offset_limit = 208960,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 1,
    .batch_offset = 36,
    .frame_offset = 1,
    .line_offset = 0,
    .loop_offset = 36864,
    .frame_loop_cnt = 36,
    .frame_tot_cnt = 36,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_66_off_bias_87_dma_init_out_0_25, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_63 output ports=0 range=1[0,43008] */

  static const LL_Streng_TensorInitTypeDef Pad_63_dma_init_out_0_25 = {
    /* to memory with batch=1 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Pad_63_out_0 */
    .offset_start = 0,
    .offset_end = 1344,
    .offset_limit = 43072,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1344,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Pad_63_dma_init_out_0_25, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 79872 */

  static const LL_Switch_InitTypeDef switch_init_in_25[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_mul_scale_85 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_off_bias_87 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_off_bias_87 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_63 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_63 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_63 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
  };


  /* epoch=25 */
  LL_Switch_Init(switch_init_in_25, 8);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 43008))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) /* Equivalent hex address = 0x342e0000UL */, 43008);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_25_all_units[] = {
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_25_all_units, 10);

}

static void LL_ATON_End_EpochBlock_25(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_25[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_mul_scale_85 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_off_bias_87 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_off_bias_87 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_63 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_63 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_63 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
  };


  /* epoch=25 */
  LL_Switch_Deinit(switch_deinit_in_25, 8);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_25_all_units[] = {
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_25_all_units, 10);

}


/* scheduling epoch=26   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_26(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 43008))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 86016))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 43008))) /* Equivalent hex address = 0x342ea800UL */, 43008);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_64 */
  static const uint32_t Transpose_64_tensor_shape_in_26_shape_0[] = { 1, 32, 42, 32 };
  static const LL_LIB_TensorShape_TypeDef Transpose_64_tensor_shape_in_26[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 0,
      .offset_end = 43008,
      .offset_limit = 43072,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_64_tensor_shape_in_26_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_64_tensor_axes_offsets_in_26_0[] = { 43008, 1344, 32, 1 };
  static const uint32_t* Transpose_64_tensor_axes_offsets_in_26[] = {
    Transpose_64_tensor_axes_offsets_in_26_0
  };

  static const uint32_t Transpose_64_tensor_shape_out_26_shape_0[] = { 1, 42, 32, 32 };
  static const LL_LIB_TensorShape_TypeDef Transpose_64_tensor_shape_out_26[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 43008,
      .offset_end = 86016,
      .offset_limit = 86080,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_64_tensor_shape_out_26_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_64_tensor_axes_offsets_out_26_0[] = { 43008, 1024, 32, 1 };
  static const uint32_t* Transpose_64_tensor_axes_offsets_out_26[] = {
    Transpose_64_tensor_axes_offsets_out_26_0
  };

  static const uint8_t Transpose_64_perm_to_use_array_in_26[] = { 0, 2, 1, 3 };
  static const uint8_t Transpose_64_target_pos_array_in_26[] = { 0, 2, 1, 3 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_64_tensor_shape_in_26[0], Transpose_64_tensor_axes_offsets_in_26[0], &Transpose_64_tensor_shape_out_26[0], Transpose_64_tensor_axes_offsets_out_26[0], Transpose_64_target_pos_array_in_26, Transpose_64_perm_to_use_array_in_26, 8, 9);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 43008))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 86016))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 43008))) /* Equivalent hex address = 0x342ea800UL */, 43008);

}


/* scheduling epoch=27   nodes=5   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Identity_inserted_id780 */

static void LL_ATON_Start_EpochBlock_27(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Identity_inserted_id780 */
  /* node=Identity_inserted_id780 satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_69 */
  static const LL_Convacc_InitTypeDef Conv2D_69_init27 = {
    .simd = 2,
    .fsub = 20,
    .accumulate = 0,
    .kfilt_tot = 42,
    .kfilt_first = 0,
    .kfilt_last = 20,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 32,
    .fHeight = 32,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 21,
    .batchDepth = 18,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 31,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_69_init27);


  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_69_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_69_ca_pipe_1_init27 = {
    .simd = 2,
    .fsub = 20,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 42,
    .kfilt_first = 21,
    .kfilt_last = 41,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 32,
    .fHeight = 32,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 21,
    .batchDepth = 18,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 31,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_69_ca_pipe_1_init27);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_69_mul_scale_94 */
  static const LL_Arithacc_InitTypeDef Conv2D_69_mul_scale_94_init27 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 42,
    .batchDepth = 21,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 164224))) /* Equivalent hex address = 0x71028180UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_69_mul_scale_94_init27);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_69_off_bias_96 */
  static const LL_Arithacc_InitTypeDef Conv2D_69_off_bias_96_init27 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 42,
    .batchDepth = 21,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 18483,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 161328))) /* Equivalent hex address = 0x71027630UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_69_off_bias_96_init27);


  /* Dma inputs units to cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id780 input ports=0 range=1[43008,86016] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id780_dma_init_in_0_27 = {
    /* from memory with batch=1 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_64_out_0_inserted_in780 */
    .offset_start = 43008,
    .offset_end = 44032,
    .offset_limit = 86080,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1024,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 42,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Identity_inserted_id780_dma_init_in_0_27, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_69 input ports=0 range=1[172032,208896] */

  static const LL_Streng_TensorInitTypeDef Conv2D_69_dma_init_in_0_27 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_69_zero_off_out_91 */
    .offset_start = 172032,
    .offset_limit = 208960,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 18,
    .batch_offset = 36,
    .frame_offset = 36,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_69_dma_init_in_0_27, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_69 input ports=1 range=8[145824,147336] */

  static const LL_Streng_TensorInitTypeDef Conv2D_69_dma_init_in_1_27 = {
    /* 42x1x1x36(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_69_weights */
    .offset_start = 145824,
    .offset_end = 147336,
    .offset_limit = 147400,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_69_dma_init_in_1_27, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_69_ca_pipe_1 input ports=0 range=1[172032,208896] */

  static const LL_Streng_TensorInitTypeDef Conv2D_69_ca_pipe_1_dma_init_in_0_27 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_69_zero_off_out_91_copy_in_115 ca pipe offset=1 */
    .offset_start = 172050,
    .offset_limit = 208960,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 18,
    .batch_offset = 36,
    .frame_offset = 36,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_69_ca_pipe_1_dma_init_in_0_27, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 116736 */
  /* octoFlash -> 1512 */

  /* Dma output units from cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id780 output ports=0 range=1[129024,172032] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id780_dma_init_out_0_27 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_64_out_0_inserted_out780 */
    .offset_start = 129024,
    .offset_limit = 172096,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 1,
    .batch_offset = 42,
    .frame_offset = 1,
    .line_offset = 0,
    .loop_offset = 43008,
    .frame_loop_cnt = 42,
    .frame_tot_cnt = 42,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Identity_inserted_id780_dma_init_out_0_27, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_69_off_bias_96 output ports=0 range=1[86016,129024] */

  static const LL_Streng_TensorInitTypeDef Conv2D_69_off_bias_96_dma_init_out_0_27 = {
    /* to memory with batch=21 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_69_off_bias_out_97 */
    .offset_start = 86016,
    .offset_end = 107520,
    .offset_limit = 129088,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 21504,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_69_off_bias_96_dma_init_out_0_27, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 86016 */

  static const LL_Switch_InitTypeDef switch_init_in_27[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id780 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_69 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_69 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_69_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_69_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_69_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_69_mul_scale_94 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_69_off_bias_96 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_69_off_bias_96 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=27 */
  LL_Switch_Init(switch_init_in_27, 9);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_27_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_27_all_units, 10);

}

static void LL_ATON_End_EpochBlock_27(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_27[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id780 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_69 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_69 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_69_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_69_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_69_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_69_mul_scale_94 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_69_off_bias_96 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_69_off_bias_96 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=27 */
  LL_Switch_Deinit(switch_deinit_in_27, 9);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_27_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_27_all_units, 10);

}


/* scheduling epoch=28   nodes=2   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_28(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Add_72 */
  static const LL_Arithacc_InitTypeDef Add_72_init28 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 13,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 1,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 42,
    .batchDepth = 21,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16836,
    .B_scalar = 16794,
    .C_scalar = -24287,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Add_72_init28);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_77_suboff_99 */
  static const LL_Arithacc_InitTypeDef Conv2D_77_suboff_99_init28 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 32,
    .fChannels = 42,
    .batchDepth = 21,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_77_suboff_99_init28);


  /* Dma inputs units to cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Add_72 input ports=0 range=1[86016,129024] */

  static const LL_Streng_TensorInitTypeDef Add_72_dma_init_in_0_28 = {
    /* from memory with batch=21 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_71_out_0 */
    .offset_start = 86016,
    .offset_end = 107520,
    .offset_limit = 129088,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 21504,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Add_72_dma_init_in_0_28, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Add_72 input ports=1 range=1[129024,172032] */

  static const LL_Streng_TensorInitTypeDef Add_72_dma_init_in_1_28 = {
    /* memory canonical to batch=21 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_64_out_0 */
    .offset_start = 129024,
    .offset_limit = 172096,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 21,
    .batch_offset = 42,
    .frame_offset = 21,
    .line_offset = 0,
    .loop_offset = 43008,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Add_72_dma_init_in_1_28, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 86016 */

  /* Dma output units from cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Add_72 output ports=0 range=1[0,43008] */

  static const LL_Streng_TensorInitTypeDef Add_72_dma_init_out_0_28 = {
    /* to memory canonical from batch=21 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Add_72_out_0 */
    .offset_start = 0,
    .offset_limit = 43072,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 21,
    .batch_offset = 42,
    .frame_offset = 21,
    .line_offset = 0,
    .loop_offset = 43008,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Add_72_dma_init_out_0_28, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_77_suboff_99 output ports=0 range=1[43008,86016] */

  static const LL_Streng_TensorInitTypeDef Conv2D_77_suboff_99_dma_init_out_0_28 = {
    /* to memory canonical from batch=21 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_77_zero_off_out_100 */
    .offset_start = 43008,
    .offset_limit = 86080,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 21,
    .batch_offset = 42,
    .frame_offset = 21,
    .line_offset = 0,
    .loop_offset = 43008,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_77_suboff_99_dma_init_out_0_28, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 86016 */

  static const LL_Switch_InitTypeDef switch_init_in_28[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_72 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_72 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_72 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_suboff_99 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_suboff_99 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=28 */
  LL_Switch_Init(switch_init_in_28, 5);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_28_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_28_all_units, 6);

}

static void LL_ATON_End_EpochBlock_28(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_28[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_72 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_72 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_72 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_suboff_99 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_suboff_99 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=28 */
  LL_Switch_Deinit(switch_deinit_in_28, 5);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_28_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_28_all_units, 6);

}


/* scheduling epoch=29   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_29(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 23 [POOL_ACC_V2 1] */
  /* kind=MaxPool node=MaxPool_83 */
  static const LL_Poolacc_InitTypeDef MaxPool_83_init29 = {
    .operation = POOL_MAX,
    .avgnopad = 0,
    .inputX = 32,
    .inputY = 32,
    .outputX = 16,
    .outputY = 16,
    .poolWinX = 2,
    .poolWinY = 2,
    .strideX = 2,
    .strideY = 2,
    .topCrop = 0,
    .bottomCrop = 31,
    .leftCrop = 0,
    .rightCrop = 31,
    .topPad = 0,
    .bottomPad = 0,
    .leftPad = 0,
    .rightPad = 0,
    .batchSize = 7,
    .shift_f = 0,
    .shift_o = 0,
    .dualLine = 1,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .inbytes_f = 1,
    .outbytes_f = 1,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .mulval = 0,
    .pad_val_en = 0,
    .pad_val = 0,
  };

  /* Unit=POOL_ACC_V2 */
  LL_Poolacc_Init(1, &MaxPool_83_init29);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_77 */
  static const LL_Convacc_InitTypeDef Conv2D_77_init29 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 32,
    .fHeight = 32,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 1,
    .batchDepth = 1,
    .hstride = 2,
    .vstride = 2,
    .left_padding = 0,
    .right_padding = 1,
    .top_padding = 0,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 31,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_77_init29);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_77_mul_scale_103 */
  static const LL_Arithacc_InitTypeDef Conv2D_77_mul_scale_103_init29 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 14,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 42,
    .batchDepth = 1,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 164320))) /* Equivalent hex address = 0x710281e0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_77_mul_scale_103_init29);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_77_off_bias_105 */
  static const LL_Arithacc_InitTypeDef Conv2D_77_off_bias_105_init29 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 42,
    .batchDepth = 1,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 21511,
    .B_scalar = -272,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_77_off_bias_105_init29);


  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=MaxPool_83 input ports=0 range=1[0,43008] */

  static const LL_Streng_TensorInitTypeDef MaxPool_83_dma_init_in_0_29 = {
    /* memory canonical to batch=7 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Relu_75_out_0 */
    .offset_start = 0,
    .offset_limit = 43072,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 7,
    .batch_offset = 42,
    .frame_offset = 7,
    .line_offset = 0,
    .loop_offset = 43008,
    .frame_loop_cnt = 6,
    .frame_tot_cnt = 6,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &MaxPool_83_dma_init_in_0_29, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_77 input ports=0 range=1[43008,86016] */

  static const LL_Streng_TensorInitTypeDef Conv2D_77_dma_init_in_0_29 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_77_zero_off_out_100 */
    .offset_start = 43008,
    .offset_limit = 86080,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 32,
    .batch_depth = 1,
    .batch_offset = 42,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 1,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 42,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_77_dma_init_in_0_29, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_77 input ports=1 range=8[155328,155706] */

  static const LL_Streng_TensorInitTypeDef Conv2D_77_dma_init_in_1_29 = {
    /* 42x3x3x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_77_weights */
    .offset_start = 155328,
    .offset_end = 155706,
    .offset_limit = 155776,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_77_dma_init_in_1_29, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 86016 */
  /* octoFlash -> 378 */

  /* Dma output units from cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=MaxPool_83 output ports=0 range=1[96768,107520] */

  static const LL_Streng_TensorInitTypeDef MaxPool_83_dma_init_out_0_29 = {
    /* to memory canonical from batch=7 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* MaxPool_83_out_0 */
    .offset_start = 96768,
    .offset_limit = 107584,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 7,
    .batch_offset = 42,
    .frame_offset = 7,
    .line_offset = 0,
    .loop_offset = 10752,
    .frame_loop_cnt = 6,
    .frame_tot_cnt = 6,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &MaxPool_83_dma_init_out_0_29, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_77_off_bias_105 output ports=0 range=1[86016,96768] */

  static const LL_Streng_TensorInitTypeDef Conv2D_77_off_bias_105_dma_init_out_0_29 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_77_off_bias_out_106 */
    .offset_start = 86016,
    .offset_limit = 96832,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 1,
    .batch_offset = 42,
    .frame_offset = 1,
    .line_offset = 0,
    .loop_offset = 10752,
    .frame_loop_cnt = 42,
    .frame_tot_cnt = 42,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_77_off_bias_105_dma_init_out_0_29, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 21504 */

  static const LL_Switch_InitTypeDef switch_init_in_29[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, POOL, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* MaxPool_83 IN: in unit=POOL_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, POOL, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* MaxPool_83 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=POOL_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_mul_scale_103 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_off_bias_105 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_off_bias_105 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=29 */
  LL_Switch_Init(switch_init_in_29, 7);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 96768))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 107520))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 96768))) /* Equivalent hex address = 0x342f7a00UL */, 10752);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_29_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {POOL, 1} }, /* POOL_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_29_all_units, 9);

}

static void LL_ATON_End_EpochBlock_29(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_29[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, POOL, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* MaxPool_83 IN: in unit=POOL_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, POOL, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* MaxPool_83 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=POOL_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_mul_scale_103 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_off_bias_105 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_off_bias_105 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=29 */
  LL_Switch_Deinit(switch_deinit_in_29, 7);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_29_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {POOL, 1} }, /* POOL_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_29_all_units, 9);

}


/* scheduling epoch=30   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_30(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 24576))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 35328))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 24576))) /* Equivalent hex address = 0x342e6000UL */, 10752);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_84 */
  static const uint32_t Transpose_84_tensor_shape_in_30_shape_0[] = { 1, 16, 16, 42 };
  static const LL_LIB_TensorShape_TypeDef Transpose_84_tensor_shape_in_30[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 96768,
      .offset_end = 107520,
      .offset_limit = 107584,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_84_tensor_shape_in_30_shape_0,
      .batch = 42,
    }
  };

  static const uint32_t Transpose_84_tensor_axes_offsets_in_30_0[] = { 10752, 672, 42, 1 };
  static const uint32_t* Transpose_84_tensor_axes_offsets_in_30[] = {
    Transpose_84_tensor_axes_offsets_in_30_0
  };

  static const uint32_t Transpose_84_tensor_shape_out_30_shape_0[] = { 1, 42, 16, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_84_tensor_shape_out_30[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 24576,
      .offset_end = 35328,
      .offset_limit = 35392,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_84_tensor_shape_out_30_shape_0,
      .batch = 16,
    }
  };

  static const uint32_t Transpose_84_tensor_axes_offsets_out_30_0[] = { 10752, 256, 16, 1 };
  static const uint32_t* Transpose_84_tensor_axes_offsets_out_30[] = {
    Transpose_84_tensor_axes_offsets_out_30_0
  };

  static const uint8_t Transpose_84_perm_to_use_array_in_30[] = { 0, 3, 2, 1 };
  static const uint8_t Transpose_84_target_pos_array_in_30[] = { 0, 3, 2, 1 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_84_tensor_shape_in_30[0], Transpose_84_tensor_axes_offsets_in_30[0], &Transpose_84_tensor_shape_out_30[0], Transpose_84_tensor_axes_offsets_out_30[0], Transpose_84_target_pos_array_in_30, Transpose_84_perm_to_use_array_in_30, 5, 6);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 24576))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 35328))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 24576))) /* Equivalent hex address = 0x342e6000UL */, 10752);

}


/* scheduling epoch=31   nodes=5   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_31(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Pad_85 */
  static const LL_Convacc_InitTypeDef Pad_85_init31 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = -128,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 0,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 42,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 1,
    .batchDepth = 1,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 6,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 41,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Pad_85_init31);


  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_80 */
  static const LL_Convacc_InitTypeDef Conv2D_80_init31 = {
    .simd = 2,
    .fsub = -17,
    .accumulate = 0,
    .kfilt_tot = 48,
    .kfilt_first = 0,
    .kfilt_last = 23,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 4,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 21,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_80_init31);


  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_80_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_80_ca_pipe_1_init31 = {
    .simd = 2,
    .fsub = -17,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 48,
    .kfilt_first = 24,
    .kfilt_last = 47,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 4,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 21,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_80_ca_pipe_1_init31);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_80_mul_scale_112 */
  static const LL_Arithacc_InitTypeDef Conv2D_80_mul_scale_112_init31 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 48,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 163936))) /* Equivalent hex address = 0x71028060UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_80_mul_scale_112_init31);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_80_off_bias_114 */
  static const LL_Arithacc_InitTypeDef Conv2D_80_off_bias_114_init31 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 48,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16867,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 157744))) /* Equivalent hex address = 0x71026830UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_80_off_bias_114_init31);


  /* Dma inputs units to cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_85 input ports=0 range=1[24576,35328] */

  static const LL_Streng_TensorInitTypeDef Pad_85_dma_init_in_0_31 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_84_out_0 */
    .offset_start = 24576,
    .offset_limit = 35392,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 42,
    .batch_depth = 1,
    .batch_offset = 16,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 1,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Pad_85_dma_init_in_0_31, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_85 input ports=1 range=8[165664,165680] */

  static const LL_Streng_TensorInitTypeDef Pad_85_dma_init_in_1_31 = {
    /* 16x1x1x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Pad_85_pad_kern_261 */
    .offset_start = 165664,
    .offset_end = 165680,
    .offset_limit = 165744,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Pad_85_dma_init_in_1_31, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_80 input ports=0 range=1[86016,96768] */

  static const LL_Streng_TensorInitTypeDef Conv2D_80_dma_init_in_0_31 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_80_zero_off_out_109 */
    .offset_start = 86016,
    .offset_limit = 96832,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 21,
    .batch_offset = 42,
    .frame_offset = 42,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_80_dma_init_in_0_31, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_80 input ports=1 range=8[140352,142368] */

  static const LL_Streng_TensorInitTypeDef Conv2D_80_dma_init_in_1_31 = {
    /* 48x1x1x42(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_80_weights */
    .offset_start = 140352,
    .offset_end = 142368,
    .offset_limit = 142432,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_80_dma_init_in_1_31, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_80_ca_pipe_1 input ports=0 range=1[86016,96768] */

  static const LL_Streng_TensorInitTypeDef Conv2D_80_ca_pipe_1_dma_init_in_0_31 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_80_zero_off_out_109_copy_in_117 ca pipe offset=1 */
    .offset_start = 86037,
    .offset_limit = 96832,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 21,
    .batch_offset = 42,
    .frame_offset = 42,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_80_ca_pipe_1_dma_init_in_0_31, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 32256 */
  /* octoFlash -> 2032 */

  /* Dma output units from cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_85 output ports=0 range=1[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Pad_85_dma_init_out_0_31 = {
    /* to memory with batch=1 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Pad_85_out_0 */
    .offset_start = 12288,
    .offset_end = 13056,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 768,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Pad_85_dma_init_out_0_31, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_80_off_bias_114 output ports=0 range=1[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_80_off_bias_114_dma_init_out_0_31 = {
    /* to memory with batch=24 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_80_off_bias_out_115 */
    .offset_start = 0,
    .offset_end = 6144,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 6144,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_80_off_bias_114_dma_init_out_0_31, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 24576 */

  static const LL_Switch_InitTypeDef switch_init_in_31[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_85 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_85 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_85 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_mul_scale_112 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_off_bias_114 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_off_bias_114 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=31 */
  LL_Switch_Init(switch_init_in_31, 11);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 12288))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 24576))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 12288))) /* Equivalent hex address = 0x342e3000UL */, 12288);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_31_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_31_all_units, 12);

}

static void LL_ATON_End_EpochBlock_31(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_31[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_85 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_85 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_85 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_mul_scale_112 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_off_bias_114 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_off_bias_114 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=31 */
  LL_Switch_Deinit(switch_deinit_in_31, 11);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_31_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_31_all_units, 12);

}


/* scheduling epoch=32   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_32(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 24576))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 36864))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 24576))) /* Equivalent hex address = 0x342e6000UL */, 12288);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_86 */
  static const uint32_t Transpose_86_tensor_shape_in_32_shape_0[] = { 1, 16, 48, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_86_tensor_shape_in_32[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 12288,
      .offset_end = 24576,
      .offset_limit = 24640,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_86_tensor_shape_in_32_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_86_tensor_axes_offsets_in_32_0[] = { 12288, 768, 16, 1 };
  static const uint32_t* Transpose_86_tensor_axes_offsets_in_32[] = {
    Transpose_86_tensor_axes_offsets_in_32_0
  };

  static const uint32_t Transpose_86_tensor_shape_out_32_shape_0[] = { 1, 48, 16, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_86_tensor_shape_out_32[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 24576,
      .offset_end = 36864,
      .offset_limit = 36928,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_86_tensor_shape_out_32_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_86_tensor_axes_offsets_out_32_0[] = { 12288, 256, 16, 1 };
  static const uint32_t* Transpose_86_tensor_axes_offsets_out_32[] = {
    Transpose_86_tensor_axes_offsets_out_32_0
  };

  static const uint8_t Transpose_86_perm_to_use_array_in_32[] = { 0, 2, 1, 3 };
  static const uint8_t Transpose_86_target_pos_array_in_32[] = { 0, 2, 1, 3 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_86_tensor_shape_in_32[0], Transpose_86_tensor_axes_offsets_in_32[0], &Transpose_86_tensor_shape_out_32[0], Transpose_86_tensor_axes_offsets_out_32[0], Transpose_86_target_pos_array_in_32, Transpose_86_perm_to_use_array_in_32, 4, 5);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 24576))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 36864))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 24576))) /* Equivalent hex address = 0x342e6000UL */, 12288);

}


/* scheduling epoch=33   nodes=1   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Identity_inserted_id785 */

static void LL_ATON_Start_EpochBlock_33(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Identity_inserted_id785 */
  /* node=Identity_inserted_id785 satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id785 input ports=0 range=1[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id785_dma_init_in_0_33 = {
    /* from memory with batch=1 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_86_out_0_inserted_in785 */
    .offset_start = 24576,
    .offset_end = 24832,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 48,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Identity_inserted_id785_dma_init_in_0_33, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 12288 */

  /* Dma output units from cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id785 output ports=0 range=1[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id785_dma_init_out_0_33 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_86_out_0_inserted_out785 */
    .offset_start = 12288,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 1,
    .batch_offset = 48,
    .frame_offset = 1,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 48,
    .frame_tot_cnt = 48,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Identity_inserted_id785_dma_init_out_0_33, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_33[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id785 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
  };


  /* epoch=33 */
  LL_Switch_Init(switch_init_in_33, 1);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_33_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_33_all_units, 2);

}

static void LL_ATON_End_EpochBlock_33(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_33[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id785 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
  };


  /* epoch=33 */
  LL_Switch_Deinit(switch_deinit_in_33, 1);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_33_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_33_all_units, 2);

}


/* scheduling epoch=34   nodes=2   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_34(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Add node=Add_87 */
  static const LL_Arithacc_InitTypeDef Add_87_init34 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 1,
    .C_shift = 3,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 48,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 26699,
    .B_scalar = 23711,
    .C_scalar = 24330,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Add_87_init34);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Sub node=Conv2D_95_suboff_117 */
  static const LL_Arithacc_InitTypeDef Conv2D_95_suboff_117_init34 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 48,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_95_suboff_117_init34);


  /* Dma inputs units to cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Add_87 input ports=0 range=1[0,12288] */

  static const LL_Streng_TensorInitTypeDef Add_87_dma_init_in_0_34 = {
    /* from memory with batch=24 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_82_out_0 */
    .offset_start = 0,
    .offset_end = 6144,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 6144,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Add_87_dma_init_in_0_34, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Add_87 input ports=1 range=1[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Add_87_dma_init_in_1_34 = {
    /* memory canonical to batch=24 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_86_out_0 */
    .offset_start = 12288,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 24,
    .batch_offset = 48,
    .frame_offset = 24,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Add_87_dma_init_in_1_34, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 24576 */

  /* Dma output units from cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Add_87 output ports=0 range=1[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Add_87_dma_init_out_0_34 = {
    /* to memory canonical from batch=24 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Add_87_out_0 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 24,
    .batch_offset = 48,
    .frame_offset = 24,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Add_87_dma_init_out_0_34, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_95_suboff_117 output ports=0 range=1[36864,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_95_suboff_117_dma_init_out_0_34 = {
    /* to memory canonical from batch=24 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_95_zero_off_out_118 */
    .offset_start = 36864,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 24,
    .batch_offset = 48,
    .frame_offset = 24,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_95_suboff_117_dma_init_out_0_34, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 24576 */

  static const LL_Switch_InitTypeDef switch_init_in_34[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_87 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_87 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_87 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_95_suboff_117 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_95_suboff_117 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=34 */
  LL_Switch_Init(switch_init_in_34, 5);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 24576))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 36864))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 24576))) /* Equivalent hex address = 0x342e6000UL */, 12288);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_34_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_34_all_units, 6);

}

static void LL_ATON_End_EpochBlock_34(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_34[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_87 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_87 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_87 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_95_suboff_117 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_95_suboff_117 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=34 */
  LL_Switch_Deinit(switch_deinit_in_34, 5);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_34_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_34_all_units, 6);

}


/* scheduling epoch=35   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_35(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 49152))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 61440))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 49152))) /* Equivalent hex address = 0x342ec000UL */, 12288);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_91 */
  static const uint32_t Transpose_91_tensor_shape_in_35_shape_0[] = { 1, 16, 16, 48 };
  static const LL_LIB_TensorShape_TypeDef Transpose_91_tensor_shape_in_35[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 24576,
      .offset_end = 36864,
      .offset_limit = 36928,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_91_tensor_shape_in_35_shape_0,
      .batch = 48,
    }
  };

  static const uint32_t Transpose_91_tensor_axes_offsets_in_35_0[] = { 12288, 768, 48, 1 };
  static const uint32_t* Transpose_91_tensor_axes_offsets_in_35[] = {
    Transpose_91_tensor_axes_offsets_in_35_0
  };

  static const uint32_t Transpose_91_tensor_shape_out_35_shape_0[] = { 1, 48, 16, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_91_tensor_shape_out_35[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 49152,
      .offset_end = 61440,
      .offset_limit = 61504,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_91_tensor_shape_out_35_shape_0,
      .batch = 16,
    }
  };

  static const uint32_t Transpose_91_tensor_axes_offsets_out_35_0[] = { 12288, 256, 16, 1 };
  static const uint32_t* Transpose_91_tensor_axes_offsets_out_35[] = {
    Transpose_91_tensor_axes_offsets_out_35_0
  };

  static const uint8_t Transpose_91_perm_to_use_array_in_35[] = { 0, 3, 2, 1 };
  static const uint8_t Transpose_91_target_pos_array_in_35[] = { 0, 3, 2, 1 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_91_tensor_shape_in_35[0], Transpose_91_tensor_axes_offsets_in_35[0], &Transpose_91_tensor_shape_out_35[0], Transpose_91_tensor_axes_offsets_out_35[0], Transpose_91_target_pos_array_in_35, Transpose_91_perm_to_use_array_in_35, 8, 9);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 49152))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 61440))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 49152))) /* Equivalent hex address = 0x342ec000UL */, 12288);

}


/* scheduling epoch=36   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_36(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Pad_92 */
  static const LL_Convacc_InitTypeDef Pad_92_init36 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = -128,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 0,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 48,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 1,
    .batchDepth = 1,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 8,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 47,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Pad_92_init36);


  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_95 */
  static const LL_Convacc_InitTypeDef Conv2D_95_init36 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_95_init36);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_95_mul_scale_121 */
  static const LL_Arithacc_InitTypeDef Conv2D_95_mul_scale_121_init36 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 48,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 164032))) /* Equivalent hex address = 0x710280c0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_95_mul_scale_121_init36);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_95_off_bias_123 */
  static const LL_Arithacc_InitTypeDef Conv2D_95_off_bias_123_init36 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 48,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 25699,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_95_off_bias_123_init36);


  /* Dma inputs units to cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_92 input ports=0 range=1[49152,61440] */

  static const LL_Streng_TensorInitTypeDef Pad_92_dma_init_in_0_36 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_91_out_0 */
    .offset_start = 49152,
    .offset_limit = 61504,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 48,
    .batch_depth = 1,
    .batch_offset = 16,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 1,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Pad_92_dma_init_in_0_36, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_92 input ports=1 range=8[165648,165664] */

  static const LL_Streng_TensorInitTypeDef Pad_92_dma_init_in_1_36 = {
    /* 16x1x1x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Pad_92_pad_kern_274 */
    .offset_start = 165648,
    .offset_end = 165664,
    .offset_limit = 165728,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Pad_92_dma_init_in_1_36, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_95 input ports=0 range=1[36864,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_95_dma_init_in_0_36 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_95_zero_off_out_118 */
    .offset_start = 36864,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 8,
    .batch_offset = 48,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 6,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_95_dma_init_in_0_36, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_95 input ports=1 range=8[129088,132544] */

  static const LL_Streng_TensorInitTypeDef Conv2D_95_dma_init_in_1_36 = {
    /* 48x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_95_weights_inflated_340 */
    .offset_start = 129088,
    .offset_end = 132544,
    .offset_limit = 132608,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_95_dma_init_in_1_36, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 24576 */
  /* octoFlash -> 3472 */

  /* Dma output units from cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_92 output ports=0 range=1[0,14336] */

  static const LL_Streng_TensorInitTypeDef Pad_92_dma_init_out_0_36 = {
    /* to memory with batch=1 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Pad_92_out_0 */
    .offset_start = 0,
    .offset_end = 896,
    .offset_limit = 14400,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 896,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Pad_92_dma_init_out_0_36, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_95_off_bias_123 output ports=0 range=1[61440,73728] */

  static const LL_Streng_TensorInitTypeDef Conv2D_95_off_bias_123_dma_init_out_0_36 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_95_off_bias_out_124 */
    .offset_start = 61440,
    .offset_limit = 73792,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 8,
    .batch_offset = 48,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 6,
    .frame_tot_cnt = 6,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_95_off_bias_123_dma_init_out_0_36, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 26624 */

  static const LL_Switch_InitTypeDef switch_init_in_36[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_92 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_92 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_92 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_95 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_95 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_95_mul_scale_121 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_95_off_bias_123 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_95_off_bias_123 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=36 */
  LL_Switch_Init(switch_init_in_36, 8);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 14336))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) /* Equivalent hex address = 0x342e0000UL */, 14336);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_36_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_36_all_units, 10);

}

static void LL_ATON_End_EpochBlock_36(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_36[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_92 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_92 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_92 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_95 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_95 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_95_mul_scale_121 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_95_off_bias_123 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_95_off_bias_123 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=36 */
  LL_Switch_Deinit(switch_deinit_in_36, 8);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_36_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_36_all_units, 10);

}


/* scheduling epoch=37   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_37(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 14336))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 28672))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 14336))) /* Equivalent hex address = 0x342e3800UL */, 14336);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_93 */
  static const uint32_t Transpose_93_tensor_shape_in_37_shape_0[] = { 1, 16, 56, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_93_tensor_shape_in_37[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 0,
      .offset_end = 14336,
      .offset_limit = 14400,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_93_tensor_shape_in_37_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_93_tensor_axes_offsets_in_37_0[] = { 14336, 896, 16, 1 };
  static const uint32_t* Transpose_93_tensor_axes_offsets_in_37[] = {
    Transpose_93_tensor_axes_offsets_in_37_0
  };

  static const uint32_t Transpose_93_tensor_shape_out_37_shape_0[] = { 1, 56, 16, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_93_tensor_shape_out_37[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 14336,
      .offset_end = 28672,
      .offset_limit = 28736,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_93_tensor_shape_out_37_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_93_tensor_axes_offsets_out_37_0[] = { 14336, 256, 16, 1 };
  static const uint32_t* Transpose_93_tensor_axes_offsets_out_37[] = {
    Transpose_93_tensor_axes_offsets_out_37_0
  };

  static const uint8_t Transpose_93_perm_to_use_array_in_37[] = { 0, 2, 1, 3 };
  static const uint8_t Transpose_93_target_pos_array_in_37[] = { 0, 2, 1, 3 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_93_tensor_shape_in_37[0], Transpose_93_tensor_axes_offsets_in_37[0], &Transpose_93_tensor_shape_out_37[0], Transpose_93_tensor_axes_offsets_out_37[0], Transpose_93_target_pos_array_in_37, Transpose_93_perm_to_use_array_in_37, 3, 7);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 14336))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 28672))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 14336))) /* Equivalent hex address = 0x342e3800UL */, 14336);

}


/* scheduling epoch=38   nodes=4   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Identity_inserted_id789 */

static void LL_ATON_Start_EpochBlock_38(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Identity_inserted_id789 */
  /* node=Identity_inserted_id789 satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_98 */
  static const LL_Convacc_InitTypeDef Conv2D_98_init38 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 3,
    .shift_f = 0,
    .shift_a = 4,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 4,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 14,
    .batchDepth = 48,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_98_init38);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_98_mul_scale_127 */
  static const LL_Arithacc_InitTypeDef Conv2D_98_mul_scale_127_init38 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 56,
    .batchDepth = 14,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 163424))) /* Equivalent hex address = 0x71027e60UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_98_mul_scale_127_init38);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_98_off_bias_129 */
  static const LL_Arithacc_InitTypeDef Conv2D_98_off_bias_129_init38 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 56,
    .batchDepth = 14,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 28736,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 157520))) /* Equivalent hex address = 0x71026750UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_98_off_bias_129_init38);


  /* Dma inputs units to cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id789 input ports=0 range=1[14336,28672] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id789_dma_init_in_0_38 = {
    /* from memory with batch=1 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_93_out_0_inserted_in789 */
    .offset_start = 14336,
    .offset_end = 14592,
    .offset_limit = 28736,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 56,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Identity_inserted_id789_dma_init_in_0_38, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_98 input ports=0 range=1[61440,73728] */

  static const LL_Streng_TensorInitTypeDef Conv2D_98_dma_init_in_0_38 = {
    /* 16x16x48(8 bits) */
    .dir = 0,
    .raw = 1,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_97_out_0 */
    .offset_start = 61440,
    .offset_end = 73728,
    .offset_limit = 73792,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_98_dma_init_in_0_38, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_98 input ports=1 range=8[135360,138048] */

  static const LL_Streng_TensorInitTypeDef Conv2D_98_dma_init_in_1_38 = {
    /* 56x1x1x48(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_98_weights */
    .offset_start = 135360,
    .offset_end = 138048,
    .offset_limit = 138112,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_98_dma_init_in_1_38, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 63488 */
  /* octoFlash -> 2688 */

  /* Dma output units from cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id789 output ports=0 range=1[28672,43008] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id789_dma_init_out_0_38 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_93_out_0_inserted_out789 */
    .offset_start = 28672,
    .offset_limit = 43072,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 1,
    .batch_offset = 56,
    .frame_offset = 1,
    .line_offset = 0,
    .loop_offset = 14336,
    .frame_loop_cnt = 56,
    .frame_tot_cnt = 56,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Identity_inserted_id789_dma_init_out_0_38, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_98_off_bias_129 output ports=0 range=1[0,14336] */

  static const LL_Streng_TensorInitTypeDef Conv2D_98_off_bias_129_dma_init_out_0_38 = {
    /* to memory with batch=14 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_98_off_bias_out_130 */
    .offset_start = 0,
    .offset_end = 3584,
    .offset_limit = 14400,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 3584,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_98_off_bias_129_dma_init_out_0_38, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 28672 */

  static const LL_Switch_InitTypeDef switch_init_in_38[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id789 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_98 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_98 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_98_mul_scale_127 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_98_off_bias_129 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_98_off_bias_129 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=38 */
  LL_Switch_Init(switch_init_in_38, 6);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_38_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_38_all_units, 8);

}

static void LL_ATON_End_EpochBlock_38(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_38[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id789 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_98 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_98 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_98_mul_scale_127 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_98_off_bias_129 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_98_off_bias_129 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=38 */
  LL_Switch_Deinit(switch_deinit_in_38, 6);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_38_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_38_all_units, 8);

}


/* scheduling epoch=39   nodes=2   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_39(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Add_101 */
  static const LL_Arithacc_InitTypeDef Add_101_init39 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 1,
    .C_shift = 4,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 56,
    .batchDepth = 14,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 28135,
    .B_scalar = 29415,
    .C_scalar = 23516,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Add_101_init39);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_109_suboff_132 */
  static const LL_Arithacc_InitTypeDef Conv2D_109_suboff_132_init39 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 56,
    .batchDepth = 14,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_109_suboff_132_init39);


  /* Dma inputs units to cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Add_101 input ports=0 range=1[0,14336] */

  static const LL_Streng_TensorInitTypeDef Add_101_dma_init_in_0_39 = {
    /* from memory with batch=14 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_100_out_0 */
    .offset_start = 0,
    .offset_end = 3584,
    .offset_limit = 14400,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 3584,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Add_101_dma_init_in_0_39, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Add_101 input ports=1 range=1[28672,43008] */

  static const LL_Streng_TensorInitTypeDef Add_101_dma_init_in_1_39 = {
    /* memory canonical to batch=14 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_93_out_0 */
    .offset_start = 28672,
    .offset_limit = 43072,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 14,
    .batch_offset = 56,
    .frame_offset = 14,
    .line_offset = 0,
    .loop_offset = 14336,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Add_101_dma_init_in_1_39, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 28672 */

  /* Dma output units from cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Add_101 output ports=0 range=1[14336,28672] */

  static const LL_Streng_TensorInitTypeDef Add_101_dma_init_out_0_39 = {
    /* to memory canonical from batch=14 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Add_101_out_0 */
    .offset_start = 14336,
    .offset_limit = 28736,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 14,
    .batch_offset = 56,
    .frame_offset = 14,
    .line_offset = 0,
    .loop_offset = 14336,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Add_101_dma_init_out_0_39, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_109_suboff_132 output ports=0 range=1[43008,57344] */

  static const LL_Streng_TensorInitTypeDef Conv2D_109_suboff_132_dma_init_out_0_39 = {
    /* to memory canonical from batch=14 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_109_zero_off_out_133 */
    .offset_start = 43008,
    .offset_limit = 57408,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 14,
    .batch_offset = 56,
    .frame_offset = 14,
    .line_offset = 0,
    .loop_offset = 14336,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_109_suboff_132_dma_init_out_0_39, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 28672 */

  static const LL_Switch_InitTypeDef switch_init_in_39[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_101 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_101 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_101 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_109_suboff_132 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_109_suboff_132 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=39 */
  LL_Switch_Init(switch_init_in_39, 5);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 14336))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 28672))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 14336))) /* Equivalent hex address = 0x342e3800UL */, 14336);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_39_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_39_all_units, 6);

}

static void LL_ATON_End_EpochBlock_39(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_39[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_101 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_101 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_101 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_109_suboff_132 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_109_suboff_132 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=39 */
  LL_Switch_Deinit(switch_deinit_in_39, 5);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_39_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_39_all_units, 6);

}


/* scheduling epoch=40   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_40(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 28672))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 43008))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 28672))) /* Equivalent hex address = 0x342e7000UL */, 14336);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_105 */
  static const uint32_t Transpose_105_tensor_shape_in_40_shape_0[] = { 1, 16, 16, 56 };
  static const LL_LIB_TensorShape_TypeDef Transpose_105_tensor_shape_in_40[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 14336,
      .offset_end = 28672,
      .offset_limit = 28736,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_105_tensor_shape_in_40_shape_0,
      .batch = 56,
    }
  };

  static const uint32_t Transpose_105_tensor_axes_offsets_in_40_0[] = { 14336, 896, 56, 1 };
  static const uint32_t* Transpose_105_tensor_axes_offsets_in_40[] = {
    Transpose_105_tensor_axes_offsets_in_40_0
  };

  static const uint32_t Transpose_105_tensor_shape_out_40_shape_0[] = { 1, 56, 16, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_105_tensor_shape_out_40[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 28672,
      .offset_end = 43008,
      .offset_limit = 43072,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_105_tensor_shape_out_40_shape_0,
      .batch = 16,
    }
  };

  static const uint32_t Transpose_105_tensor_axes_offsets_out_40_0[] = { 14336, 256, 16, 1 };
  static const uint32_t* Transpose_105_tensor_axes_offsets_out_40[] = {
    Transpose_105_tensor_axes_offsets_out_40_0
  };

  static const uint8_t Transpose_105_perm_to_use_array_in_40[] = { 0, 3, 2, 1 };
  static const uint8_t Transpose_105_target_pos_array_in_40[] = { 0, 3, 2, 1 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_105_tensor_shape_in_40[0], Transpose_105_tensor_axes_offsets_in_40[0], &Transpose_105_tensor_shape_out_40[0], Transpose_105_tensor_axes_offsets_out_40[0], Transpose_105_target_pos_array_in_40, Transpose_105_perm_to_use_array_in_40, 7, 0);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 28672))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 43008))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 28672))) /* Equivalent hex address = 0x342e7000UL */, 14336);

}


/* scheduling epoch=41   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_41(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Pad_106 */
  static const LL_Convacc_InitTypeDef Pad_106_init41 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = -128,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 0,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 56,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 1,
    .batchDepth = 1,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 8,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 55,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Pad_106_init41);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_109 */
  static const LL_Convacc_InitTypeDef Conv2D_109_init41 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_109_init41);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_109_mul_scale_136 */
  static const LL_Arithacc_InitTypeDef Conv2D_109_mul_scale_136_init41 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 56,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 163536))) /* Equivalent hex address = 0x71027ed0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_109_mul_scale_136_init41);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_109_off_bias_138 */
  static const LL_Arithacc_InitTypeDef Conv2D_109_off_bias_138_init41 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 56,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 22711,
    .B_scalar = 96,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_109_off_bias_138_init41);


  /* Dma inputs units to cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_106 input ports=0 range=1[28672,43008] */

  static const LL_Streng_TensorInitTypeDef Pad_106_dma_init_in_0_41 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_105_out_0 */
    .offset_start = 28672,
    .offset_limit = 43072,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 56,
    .batch_depth = 1,
    .batch_offset = 16,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 1,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Pad_106_dma_init_in_0_41, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_106 input ports=1 range=8[165632,165648] */

  static const LL_Streng_TensorInitTypeDef Pad_106_dma_init_in_1_41 = {
    /* 16x1x1x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Pad_106_pad_kern_313 */
    .offset_start = 165632,
    .offset_end = 165648,
    .offset_limit = 165712,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Pad_106_dma_init_in_1_41, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_109 input ports=0 range=1[43008,57344] */

  static const LL_Streng_TensorInitTypeDef Conv2D_109_dma_init_in_0_41 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_109_zero_off_out_133 */
    .offset_start = 43008,
    .offset_limit = 57408,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 8,
    .batch_offset = 56,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 7,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_109_dma_init_in_0_41, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_109 input ports=1 range=8[121472,125504] */

  static const LL_Streng_TensorInitTypeDef Conv2D_109_dma_init_in_1_41 = {
    /* 56x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_109_weights_inflated_342 */
    .offset_start = 121472,
    .offset_end = 125504,
    .offset_limit = 125568,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_109_dma_init_in_1_41, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 28672 */
  /* octoFlash -> 4048 */

  /* Dma output units from cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_106 output ports=0 range=1[0,16384] */

  static const LL_Streng_TensorInitTypeDef Pad_106_dma_init_out_0_41 = {
    /* to memory with batch=1 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Pad_106_out_0 */
    .offset_start = 0,
    .offset_end = 1024,
    .offset_limit = 16448,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1024,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Pad_106_dma_init_out_0_41, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_109_off_bias_138 output ports=0 range=1[57344,71680] */

  static const LL_Streng_TensorInitTypeDef Conv2D_109_off_bias_138_dma_init_out_0_41 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_109_off_bias_out_139 */
    .offset_start = 57344,
    .offset_limit = 71744,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 8,
    .batch_offset = 56,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 14336,
    .frame_loop_cnt = 7,
    .frame_tot_cnt = 7,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_109_off_bias_138_dma_init_out_0_41, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 30720 */

  static const LL_Switch_InitTypeDef switch_init_in_41[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_106 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_106 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_106 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_109 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_109 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_109_mul_scale_136 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_109_off_bias_138 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_109_off_bias_138 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=41 */
  LL_Switch_Init(switch_init_in_41, 8);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 16384))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) /* Equivalent hex address = 0x342e0000UL */, 16384);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_41_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_41_all_units, 10);

}

static void LL_ATON_End_EpochBlock_41(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_41[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_106 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_106 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_106 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_109 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_109 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_109_mul_scale_136 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_109_off_bias_138 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_109_off_bias_138 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=41 */
  LL_Switch_Deinit(switch_deinit_in_41, 8);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_41_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_41_all_units, 10);

}


/* scheduling epoch=42   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_42(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 16384))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32768))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 16384))) /* Equivalent hex address = 0x342e4000UL */, 16384);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_107 */
  static const uint32_t Transpose_107_tensor_shape_in_42_shape_0[] = { 1, 16, 64, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_107_tensor_shape_in_42[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 0,
      .offset_end = 16384,
      .offset_limit = 16448,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_107_tensor_shape_in_42_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_107_tensor_axes_offsets_in_42_0[] = { 16384, 1024, 16, 1 };
  static const uint32_t* Transpose_107_tensor_axes_offsets_in_42[] = {
    Transpose_107_tensor_axes_offsets_in_42_0
  };

  static const uint32_t Transpose_107_tensor_shape_out_42_shape_0[] = { 1, 64, 16, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_107_tensor_shape_out_42[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 16384,
      .offset_end = 32768,
      .offset_limit = 32832,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_107_tensor_shape_out_42_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_107_tensor_axes_offsets_out_42_0[] = { 16384, 256, 16, 1 };
  static const uint32_t* Transpose_107_tensor_axes_offsets_out_42[] = {
    Transpose_107_tensor_axes_offsets_out_42_0
  };

  static const uint8_t Transpose_107_perm_to_use_array_in_42[] = { 0, 2, 1, 3 };
  static const uint8_t Transpose_107_target_pos_array_in_42[] = { 0, 2, 1, 3 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_107_tensor_shape_in_42[0], Transpose_107_tensor_axes_offsets_in_42[0], &Transpose_107_tensor_shape_out_42[0], Transpose_107_tensor_axes_offsets_out_42[0], Transpose_107_target_pos_array_in_42, Transpose_107_perm_to_use_array_in_42, 5, 6);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 16384))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32768))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 16384))) /* Equivalent hex address = 0x342e4000UL */, 16384);

}


/* scheduling epoch=43   nodes=7   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Identity_inserted_id796 */

static void LL_ATON_Start_EpochBlock_43(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Identity_inserted_id796 */
  /* node=Identity_inserted_id796 satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_112 */
  static const LL_Convacc_InitTypeDef Conv2D_112_init43 = {
    .simd = 2,
    .fsub = 6,
    .accumulate = 0,
    .kfilt_tot = 64,
    .kfilt_first = 0,
    .kfilt_last = 15,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 14,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_112_init43);


  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_112_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_112_ca_pipe_1_init43 = {
    .simd = 2,
    .fsub = 6,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 64,
    .kfilt_first = 16,
    .kfilt_last = 31,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 14,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_112_ca_pipe_1_init43);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_112_ca_pipe_2 */
  static const LL_Convacc_InitTypeDef Conv2D_112_ca_pipe_2_init43 = {
    .simd = 2,
    .fsub = 6,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 64,
    .kfilt_first = 32,
    .kfilt_last = 47,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 14,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_112_ca_pipe_2_init43);


  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_112_ca_pipe_3 */
  static const LL_Convacc_InitTypeDef Conv2D_112_ca_pipe_3_init43 = {
    .simd = 2,
    .fsub = 6,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 64,
    .kfilt_first = 48,
    .kfilt_last = 63,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 14,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_112_ca_pipe_3_init43);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_112_mul_scale_145 */
  static const LL_Arithacc_InitTypeDef Conv2D_112_mul_scale_145_init43 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 64,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 162944))) /* Equivalent hex address = 0x71027c80UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_112_mul_scale_145_init43);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_112_off_bias_147 */
  static const LL_Arithacc_InitTypeDef Conv2D_112_off_bias_147_init43 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 64,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 23228,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 157008))) /* Equivalent hex address = 0x71026550UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_112_off_bias_147_init43);


  /* Dma inputs units to cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id796 input ports=0 range=1[16384,32768] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id796_dma_init_in_0_43 = {
    /* from memory with batch=1 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_107_out_0_inserted_in796 */
    .offset_start = 16384,
    .offset_end = 16640,
    .offset_limit = 32832,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Identity_inserted_id796_dma_init_in_0_43, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_112 input ports=0 range=1[57344,71680] */

  static const LL_Streng_TensorInitTypeDef Conv2D_112_dma_init_in_0_43 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_112_zero_off_out_142 */
    .offset_start = 57344,
    .offset_limit = 71744,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 14,
    .batch_offset = 56,
    .frame_offset = 56,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_112_dma_init_in_0_43, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_112 input ports=1 range=8[125504,129088] */

  static const LL_Streng_TensorInitTypeDef Conv2D_112_dma_init_in_1_43 = {
    /* 64x1x1x56(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_112_weights */
    .offset_start = 125504,
    .offset_end = 129088,
    .offset_limit = 129152,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_112_dma_init_in_1_43, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_112_ca_pipe_1 input ports=0 range=1[57344,71680] */

  static const LL_Streng_TensorInitTypeDef Conv2D_112_ca_pipe_1_dma_init_in_0_43 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_112_zero_off_out_142_copy_in_120 ca pipe offset=1 */
    .offset_start = 57358,
    .offset_limit = 71744,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 14,
    .batch_offset = 56,
    .frame_offset = 56,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_112_ca_pipe_1_dma_init_in_0_43, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_112_ca_pipe_2 input ports=0 range=1[57344,71680] */

  static const LL_Streng_TensorInitTypeDef Conv2D_112_ca_pipe_2_dma_init_in_0_43 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_112_zero_off_out_142_copy_in_121 ca pipe offset=2 */
    .offset_start = 57372,
    .offset_limit = 71744,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 14,
    .batch_offset = 56,
    .frame_offset = 56,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_112_ca_pipe_2_dma_init_in_0_43, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_112_ca_pipe_3 input ports=0 range=1[57344,71680] */

  static const LL_Streng_TensorInitTypeDef Conv2D_112_ca_pipe_3_dma_init_in_0_43 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_112_zero_off_out_142_copy_in_122 ca pipe offset=3 */
    .offset_start = 57386,
    .offset_limit = 71744,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 14,
    .batch_offset = 56,
    .frame_offset = 56,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_112_ca_pipe_3_dma_init_in_0_43, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 73728 */
  /* octoFlash -> 3584 */

  /* Dma output units from cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id796 output ports=0 range=1[32768,49152] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id796_dma_init_out_0_43 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_107_out_0_inserted_out796 */
    .offset_start = 32768,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 1,
    .batch_offset = 64,
    .frame_offset = 1,
    .line_offset = 0,
    .loop_offset = 16384,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Identity_inserted_id796_dma_init_out_0_43, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_112_off_bias_147 output ports=0 range=1[0,16384] */

  static const LL_Streng_TensorInitTypeDef Conv2D_112_off_bias_147_dma_init_out_0_43 = {
    /* to memory with batch=16 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_112_off_bias_out_148 */
    .offset_start = 0,
    .offset_end = 4096,
    .offset_limit = 16448,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 4096,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_112_off_bias_147_dma_init_out_0_43, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 32768 */

  static const LL_Switch_InitTypeDef switch_init_in_43[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id796 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_mul_scale_145 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_off_bias_147 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_off_bias_147 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=43 */
  LL_Switch_Init(switch_init_in_43, 15);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_43_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_43_all_units, 14);

}

static void LL_ATON_End_EpochBlock_43(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_43[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id796 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_mul_scale_145 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_off_bias_147 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_112_off_bias_147 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=43 */
  LL_Switch_Deinit(switch_deinit_in_43, 15);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_43_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_43_all_units, 14);

}


/* scheduling epoch=44   nodes=2   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_44(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Add node=Add_115 */
  static const LL_Arithacc_InitTypeDef Add_115_init44 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 13,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 2,
    .C_shift = 2,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 64,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 17016,
    .B_scalar = 32037,
    .C_scalar = -22861,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Add_115_init44);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Sub node=Conv2D_123_suboff_150 */
  static const LL_Arithacc_InitTypeDef Conv2D_123_suboff_150_init44 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 64,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_123_suboff_150_init44);


  /* Dma inputs units to cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Add_115 input ports=0 range=1[0,16384] */

  static const LL_Streng_TensorInitTypeDef Add_115_dma_init_in_0_44 = {
    /* from memory with batch=16 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_114_out_0 */
    .offset_start = 0,
    .offset_end = 4096,
    .offset_limit = 16448,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 4096,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Add_115_dma_init_in_0_44, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Add_115 input ports=1 range=1[32768,49152] */

  static const LL_Streng_TensorInitTypeDef Add_115_dma_init_in_1_44 = {
    /* memory canonical to batch=16 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_107_out_0 */
    .offset_start = 32768,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 16,
    .batch_offset = 64,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 16384,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Add_115_dma_init_in_1_44, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 32768 */

  /* Dma output units from cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Add_115 output ports=0 range=1[16384,32768] */

  static const LL_Streng_TensorInitTypeDef Add_115_dma_init_out_0_44 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Add_115_out_0 */
    .offset_start = 16384,
    .offset_limit = 32832,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 16,
    .batch_offset = 64,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 16384,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Add_115_dma_init_out_0_44, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_123_suboff_150 output ports=0 range=1[71680,88064] */

  static const LL_Streng_TensorInitTypeDef Conv2D_123_suboff_150_dma_init_out_0_44 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_123_zero_off_out_151 */
    .offset_start = 71680,
    .offset_limit = 88128,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 16,
    .batch_offset = 64,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 16384,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_123_suboff_150_dma_init_out_0_44, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 32768 */

  static const LL_Switch_InitTypeDef switch_init_in_44[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_115 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_115 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_115 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_123_suboff_150 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_123_suboff_150 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=44 */
  LL_Switch_Init(switch_init_in_44, 5);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 16384))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32768))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 16384))) /* Equivalent hex address = 0x342e4000UL */, 16384);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_44_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_44_all_units, 6);

}

static void LL_ATON_End_EpochBlock_44(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_44[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_115 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_115 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_115 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_123_suboff_150 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_123_suboff_150 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=44 */
  LL_Switch_Deinit(switch_deinit_in_44, 5);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_44_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_44_all_units, 6);

}


/* scheduling epoch=45   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_45(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32768))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 49152))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32768))) /* Equivalent hex address = 0x342e8000UL */, 16384);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_119 */
  static const uint32_t Transpose_119_tensor_shape_in_45_shape_0[] = { 1, 16, 16, 64 };
  static const LL_LIB_TensorShape_TypeDef Transpose_119_tensor_shape_in_45[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 16384,
      .offset_end = 32768,
      .offset_limit = 32832,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_119_tensor_shape_in_45_shape_0,
      .batch = 64,
    }
  };

  static const uint32_t Transpose_119_tensor_axes_offsets_in_45_0[] = { 16384, 1024, 64, 1 };
  static const uint32_t* Transpose_119_tensor_axes_offsets_in_45[] = {
    Transpose_119_tensor_axes_offsets_in_45_0
  };

  static const uint32_t Transpose_119_tensor_shape_out_45_shape_0[] = { 1, 64, 16, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_119_tensor_shape_out_45[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 32768,
      .offset_end = 49152,
      .offset_limit = 49216,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_119_tensor_shape_out_45_shape_0,
      .batch = 16,
    }
  };

  static const uint32_t Transpose_119_tensor_axes_offsets_out_45_0[] = { 16384, 256, 16, 1 };
  static const uint32_t* Transpose_119_tensor_axes_offsets_out_45[] = {
    Transpose_119_tensor_axes_offsets_out_45_0
  };

  static const uint8_t Transpose_119_perm_to_use_array_in_45[] = { 0, 3, 2, 1 };
  static const uint8_t Transpose_119_target_pos_array_in_45[] = { 0, 3, 2, 1 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_119_tensor_shape_in_45[0], Transpose_119_tensor_axes_offsets_in_45[0], &Transpose_119_tensor_shape_out_45[0], Transpose_119_tensor_axes_offsets_out_45[0], Transpose_119_target_pos_array_in_45, Transpose_119_perm_to_use_array_in_45, 2, 3);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32768))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 49152))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32768))) /* Equivalent hex address = 0x342e8000UL */, 16384);

}


/* scheduling epoch=46   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_46(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Pad_120 */
  static const LL_Convacc_InitTypeDef Pad_120_init46 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = -128,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 0,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 64,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 1,
    .batchDepth = 1,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 8,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 63,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Pad_120_init46);


  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_123 */
  static const LL_Convacc_InitTypeDef Conv2D_123_init46 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_123_init46);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_123_mul_scale_154 */
  static const LL_Arithacc_InitTypeDef Conv2D_123_mul_scale_154_init46 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 64,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 163072))) /* Equivalent hex address = 0x71027d00UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_123_mul_scale_154_init46);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_123_off_bias_156 */
  static const LL_Arithacc_InitTypeDef Conv2D_123_off_bias_156_init46 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 64,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 18412,
    .B_scalar = 432,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_123_off_bias_156_init46);


  /* Dma inputs units to cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_120 input ports=0 range=1[32768,49152] */

  static const LL_Streng_TensorInitTypeDef Pad_120_dma_init_in_0_46 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_119_out_0 */
    .offset_start = 32768,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 64,
    .batch_depth = 1,
    .batch_offset = 16,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 1,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Pad_120_dma_init_in_0_46, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_120 input ports=1 range=8[165616,165632] */

  static const LL_Streng_TensorInitTypeDef Pad_120_dma_init_in_1_46 = {
    /* 16x1x1x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Pad_120_pad_kern_354 */
    .offset_start = 165616,
    .offset_end = 165632,
    .offset_limit = 165696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Pad_120_dma_init_in_1_46, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_123 input ports=0 range=1[71680,88064] */

  static const LL_Streng_TensorInitTypeDef Conv2D_123_dma_init_in_0_46 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_123_zero_off_out_151 */
    .offset_start = 71680,
    .offset_limit = 88128,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 8,
    .batch_offset = 64,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 8,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_123_dma_init_in_0_46, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_123 input ports=1 range=8[112256,116864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_123_dma_init_in_1_46 = {
    /* 64x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_123_weights_inflated_344 */
    .offset_start = 112256,
    .offset_end = 116864,
    .offset_limit = 116928,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_123_dma_init_in_1_46, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 32768 */
  /* octoFlash -> 4624 */

  /* Dma output units from cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_120 output ports=0 range=1[0,18432] */

  static const LL_Streng_TensorInitTypeDef Pad_120_dma_init_out_0_46 = {
    /* to memory with batch=1 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Pad_120_out_0 */
    .offset_start = 0,
    .offset_end = 1152,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1152,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Pad_120_dma_init_out_0_46, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_123_off_bias_156 output ports=0 range=1[55296,71680] */

  static const LL_Streng_TensorInitTypeDef Conv2D_123_off_bias_156_dma_init_out_0_46 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_123_off_bias_out_157 */
    .offset_start = 55296,
    .offset_limit = 71744,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 8,
    .batch_offset = 64,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 16384,
    .frame_loop_cnt = 8,
    .frame_tot_cnt = 8,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_123_off_bias_156_dma_init_out_0_46, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 34816 */

  static const LL_Switch_InitTypeDef switch_init_in_46[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_120 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_120 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_120 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_123 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_123 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_123_mul_scale_154 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_123_off_bias_156 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_123_off_bias_156 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=46 */
  LL_Switch_Init(switch_init_in_46, 8);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 18432))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) /* Equivalent hex address = 0x342e0000UL */, 18432);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_46_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_46_all_units, 10);

}

static void LL_ATON_End_EpochBlock_46(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_46[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_120 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_120 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_120 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_123 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_123 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_123_mul_scale_154 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_123_off_bias_156 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_123_off_bias_156 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=46 */
  LL_Switch_Deinit(switch_deinit_in_46, 8);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_46_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_46_all_units, 10);

}


/* scheduling epoch=47   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_47(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 18432))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 36864))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 18432))) /* Equivalent hex address = 0x342e4800UL */, 18432);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_121 */
  static const uint32_t Transpose_121_tensor_shape_in_47_shape_0[] = { 1, 16, 72, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_121_tensor_shape_in_47[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 0,
      .offset_end = 18432,
      .offset_limit = 18496,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_121_tensor_shape_in_47_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_121_tensor_axes_offsets_in_47_0[] = { 18432, 1152, 16, 1 };
  static const uint32_t* Transpose_121_tensor_axes_offsets_in_47[] = {
    Transpose_121_tensor_axes_offsets_in_47_0
  };

  static const uint32_t Transpose_121_tensor_shape_out_47_shape_0[] = { 1, 72, 16, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_121_tensor_shape_out_47[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 18432,
      .offset_end = 36864,
      .offset_limit = 36928,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_121_tensor_shape_out_47_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_121_tensor_axes_offsets_out_47_0[] = { 18432, 256, 16, 1 };
  static const uint32_t* Transpose_121_tensor_axes_offsets_out_47[] = {
    Transpose_121_tensor_axes_offsets_out_47_0
  };

  static const uint8_t Transpose_121_perm_to_use_array_in_47[] = { 0, 2, 1, 3 };
  static const uint8_t Transpose_121_target_pos_array_in_47[] = { 0, 2, 1, 3 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_121_tensor_shape_in_47[0], Transpose_121_tensor_axes_offsets_in_47[0], &Transpose_121_tensor_shape_out_47[0], Transpose_121_tensor_axes_offsets_out_47[0], Transpose_121_target_pos_array_in_47, Transpose_121_perm_to_use_array_in_47, 5, 6);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 18432))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 36864))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 18432))) /* Equivalent hex address = 0x342e4800UL */, 18432);

}


/* scheduling epoch=48   nodes=7   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Identity_inserted_id803 */

static void LL_ATON_Start_EpochBlock_48(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Identity_inserted_id803 */
  /* node=Identity_inserted_id803 satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_126 */
  static const LL_Convacc_InitTypeDef Conv2D_126_init48 = {
    .simd = 2,
    .fsub = 27,
    .accumulate = 0,
    .kfilt_tot = 96,
    .kfilt_first = 0,
    .kfilt_last = 23,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 4,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 16,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_126_init48);


  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_126_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_126_ca_pipe_1_init48 = {
    .simd = 2,
    .fsub = 27,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 24,
    .kfilt_last = 47,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 16,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_126_ca_pipe_1_init48);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_126_ca_pipe_2 */
  static const LL_Convacc_InitTypeDef Conv2D_126_ca_pipe_2_init48 = {
    .simd = 2,
    .fsub = 27,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 48,
    .kfilt_last = 71,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 16,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_126_ca_pipe_2_init48);


  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_126_ca_pipe_3 */
  static const LL_Convacc_InitTypeDef Conv2D_126_ca_pipe_3_init48 = {
    .simd = 2,
    .fsub = 27,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 72,
    .kfilt_last = 95,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 4,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 16,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_126_ca_pipe_3_init48);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_126_mul_scale_163 */
  static const LL_Arithacc_InitTypeDef Conv2D_126_mul_scale_163_init48 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 9,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 72,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 162272))) /* Equivalent hex address = 0x710279e0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_126_mul_scale_163_init48);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_126_off_bias_165 */
  static const LL_Arithacc_InitTypeDef Conv2D_126_off_bias_165_init48 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 72,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 29707,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 156720))) /* Equivalent hex address = 0x71026430UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_126_off_bias_165_init48);


  /* Dma inputs units to cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id803 input ports=0 range=1[18432,36864] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id803_dma_init_in_0_48 = {
    /* from memory with batch=1 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_121_out_0_inserted_in803 */
    .offset_start = 18432,
    .offset_end = 18688,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 72,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Identity_inserted_id803_dma_init_in_0_48, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_126 input ports=0 range=1[55296,71680] */

  static const LL_Streng_TensorInitTypeDef Conv2D_126_dma_init_in_0_48 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_126_zero_off_out_160 */
    .offset_start = 55296,
    .offset_limit = 71744,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 16,
    .batch_offset = 64,
    .frame_offset = 64,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 3,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_126_dma_init_in_0_48, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_126 input ports=1 range=8[116864,121472] */

  static const LL_Streng_TensorInitTypeDef Conv2D_126_dma_init_in_1_48 = {
    /* 72x1x1x64(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_126_weights */
    .offset_start = 116864,
    .offset_end = 121472,
    .offset_limit = 121536,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_126_dma_init_in_1_48, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_126_ca_pipe_1 input ports=0 range=1[55296,71680] */

  static const LL_Streng_TensorInitTypeDef Conv2D_126_ca_pipe_1_dma_init_in_0_48 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_126_zero_off_out_160_copy_in_124 ca pipe offset=1 */
    .offset_start = 55312,
    .offset_limit = 71744,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 16,
    .batch_offset = 64,
    .frame_offset = 64,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 3,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_126_ca_pipe_1_dma_init_in_0_48, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_126_ca_pipe_2 input ports=0 range=1[55296,71680] */

  static const LL_Streng_TensorInitTypeDef Conv2D_126_ca_pipe_2_dma_init_in_0_48 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_126_zero_off_out_160_copy_in_125 ca pipe offset=2 */
    .offset_start = 55328,
    .offset_limit = 71744,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 16,
    .batch_offset = 64,
    .frame_offset = 64,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 3,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_126_ca_pipe_2_dma_init_in_0_48, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_126_ca_pipe_3 input ports=0 range=1[55296,71680] */

  static const LL_Streng_TensorInitTypeDef Conv2D_126_ca_pipe_3_dma_init_in_0_48 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_126_zero_off_out_160_copy_in_126 ca pipe offset=3 */
    .offset_start = 55344,
    .offset_limit = 71744,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 16,
    .batch_offset = 64,
    .frame_offset = 64,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 3,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_126_ca_pipe_3_dma_init_in_0_48, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 67584 */
  /* octoFlash -> 4608 */

  /* Dma output units from cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id803 output ports=0 range=1[36864,55296] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id803_dma_init_out_0_48 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_121_out_0_inserted_out803 */
    .offset_start = 36864,
    .offset_limit = 55360,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 1,
    .batch_offset = 72,
    .frame_offset = 1,
    .line_offset = 0,
    .loop_offset = 18432,
    .frame_loop_cnt = 72,
    .frame_tot_cnt = 72,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Identity_inserted_id803_dma_init_out_0_48, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_126_off_bias_165 output ports=0 range=1[0,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_126_off_bias_165_dma_init_out_0_48 = {
    /* to memory with batch=24 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_126_off_bias_out_166 */
    .offset_start = 0,
    .offset_end = 6144,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 6144,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 3,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_126_off_bias_165_dma_init_out_0_48, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 36864 */

  static const LL_Switch_InitTypeDef switch_init_in_48[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id803 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_mul_scale_163 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_off_bias_165 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_off_bias_165 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=48 */
  LL_Switch_Init(switch_init_in_48, 15);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_48_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_48_all_units, 14);

}

static void LL_ATON_End_EpochBlock_48(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_48[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id803 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_mul_scale_163 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_off_bias_165 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_126_off_bias_165 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=48 */
  LL_Switch_Deinit(switch_deinit_in_48, 15);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_48_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_48_all_units, 14);

}


/* scheduling epoch=49   nodes=2   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_49(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Add_129 */
  static const LL_Arithacc_InitTypeDef Add_129_init49 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 13,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 1,
    .C_shift = 3,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 72,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 18566,
    .B_scalar = 22863,
    .C_scalar = 19343,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Add_129_init49);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_137_suboff_168 */
  static const LL_Arithacc_InitTypeDef Conv2D_137_suboff_168_init49 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 72,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_137_suboff_168_init49);


  /* Dma inputs units to cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Add_129 input ports=0 range=1[0,18432] */

  static const LL_Streng_TensorInitTypeDef Add_129_dma_init_in_0_49 = {
    /* from memory with batch=24 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_128_out_0 */
    .offset_start = 0,
    .offset_end = 6144,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 6144,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 3,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Add_129_dma_init_in_0_49, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Add_129 input ports=1 range=1[36864,55296] */

  static const LL_Streng_TensorInitTypeDef Add_129_dma_init_in_1_49 = {
    /* memory canonical to batch=24 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_121_out_0 */
    .offset_start = 36864,
    .offset_limit = 55360,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 24,
    .batch_offset = 72,
    .frame_offset = 24,
    .line_offset = 0,
    .loop_offset = 18432,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 3,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Add_129_dma_init_in_1_49, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 36864 */

  /* Dma output units from cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Add_129 output ports=0 range=1[18432,36864] */

  static const LL_Streng_TensorInitTypeDef Add_129_dma_init_out_0_49 = {
    /* to memory canonical from batch=24 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Add_129_out_0 */
    .offset_start = 18432,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 24,
    .batch_offset = 72,
    .frame_offset = 24,
    .line_offset = 0,
    .loop_offset = 18432,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 3,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Add_129_dma_init_out_0_49, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_137_suboff_168 output ports=0 range=1[55296,73728] */

  static const LL_Streng_TensorInitTypeDef Conv2D_137_suboff_168_dma_init_out_0_49 = {
    /* to memory canonical from batch=24 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_137_zero_off_out_169 */
    .offset_start = 55296,
    .offset_limit = 73792,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 24,
    .batch_offset = 72,
    .frame_offset = 24,
    .line_offset = 0,
    .loop_offset = 18432,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 3,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_137_suboff_168_dma_init_out_0_49, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 36864 */

  static const LL_Switch_InitTypeDef switch_init_in_49[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_129 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_129 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_129 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_137_suboff_168 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_137_suboff_168 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=49 */
  LL_Switch_Init(switch_init_in_49, 5);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 18432))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 36864))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 18432))) /* Equivalent hex address = 0x342e4800UL */, 18432);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_49_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_49_all_units, 6);

}

static void LL_ATON_End_EpochBlock_49(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_49[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_129 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_129 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_129 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_137_suboff_168 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_137_suboff_168 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=49 */
  LL_Switch_Deinit(switch_deinit_in_49, 5);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_49_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_49_all_units, 6);

}


/* scheduling epoch=50   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_50(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 36864))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 55296))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 36864))) /* Equivalent hex address = 0x342e9000UL */, 18432);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_133 */
  static const uint32_t Transpose_133_tensor_shape_in_50_shape_0[] = { 1, 16, 16, 72 };
  static const LL_LIB_TensorShape_TypeDef Transpose_133_tensor_shape_in_50[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 18432,
      .offset_end = 36864,
      .offset_limit = 36928,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_133_tensor_shape_in_50_shape_0,
      .batch = 72,
    }
  };

  static const uint32_t Transpose_133_tensor_axes_offsets_in_50_0[] = { 18432, 1152, 72, 1 };
  static const uint32_t* Transpose_133_tensor_axes_offsets_in_50[] = {
    Transpose_133_tensor_axes_offsets_in_50_0
  };

  static const uint32_t Transpose_133_tensor_shape_out_50_shape_0[] = { 1, 72, 16, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_133_tensor_shape_out_50[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 36864,
      .offset_end = 55296,
      .offset_limit = 55360,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_133_tensor_shape_out_50_shape_0,
      .batch = 16,
    }
  };

  static const uint32_t Transpose_133_tensor_axes_offsets_out_50_0[] = { 18432, 256, 16, 1 };
  static const uint32_t* Transpose_133_tensor_axes_offsets_out_50[] = {
    Transpose_133_tensor_axes_offsets_out_50_0
  };

  static const uint8_t Transpose_133_perm_to_use_array_in_50[] = { 0, 3, 2, 1 };
  static const uint8_t Transpose_133_target_pos_array_in_50[] = { 0, 3, 2, 1 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_133_tensor_shape_in_50[0], Transpose_133_tensor_axes_offsets_in_50[0], &Transpose_133_tensor_shape_out_50[0], Transpose_133_tensor_axes_offsets_out_50[0], Transpose_133_target_pos_array_in_50, Transpose_133_perm_to_use_array_in_50, 2, 3);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 36864))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 55296))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 36864))) /* Equivalent hex address = 0x342e9000UL */, 18432);

}


/* scheduling epoch=51   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_51(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Pad_134 */
  static const LL_Convacc_InitTypeDef Pad_134_init51 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = -128,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 0,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 72,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 1,
    .batchDepth = 1,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 8,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 71,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Pad_134_init51);


  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_137 */
  static const LL_Convacc_InitTypeDef Conv2D_137_init51 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_137_init51);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_137_mul_scale_172 */
  static const LL_Arithacc_InitTypeDef Conv2D_137_mul_scale_172_init51 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 72,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 162416))) /* Equivalent hex address = 0x71027a70UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_137_mul_scale_172_init51);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_137_off_bias_174 */
  static const LL_Arithacc_InitTypeDef Conv2D_137_off_bias_174_init51 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 72,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 17651,
    .B_scalar = -192,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_137_off_bias_174_init51);


  /* Dma inputs units to cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_134 input ports=0 range=1[36864,55296] */

  static const LL_Streng_TensorInitTypeDef Pad_134_dma_init_in_0_51 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_133_out_0 */
    .offset_start = 36864,
    .offset_limit = 55360,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 72,
    .batch_depth = 1,
    .batch_offset = 16,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 1,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Pad_134_dma_init_in_0_51, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_134 input ports=1 range=8[165600,165616] */

  static const LL_Streng_TensorInitTypeDef Pad_134_dma_init_in_1_51 = {
    /* 16x1x1x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Pad_134_pad_kern_395 */
    .offset_start = 165600,
    .offset_end = 165616,
    .offset_limit = 165680,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Pad_134_dma_init_in_1_51, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_137 input ports=0 range=1[55296,73728] */

  static const LL_Streng_TensorInitTypeDef Conv2D_137_dma_init_in_0_51 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_137_zero_off_out_169 */
    .offset_start = 55296,
    .offset_limit = 73792,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 8,
    .batch_offset = 72,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 9,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_137_dma_init_in_0_51, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_137 input ports=1 range=8[107072,112256] */

  static const LL_Streng_TensorInitTypeDef Conv2D_137_dma_init_in_1_51 = {
    /* 72x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_137_weights_inflated_346 */
    .offset_start = 107072,
    .offset_end = 112256,
    .offset_limit = 112320,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_137_dma_init_in_1_51, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 36864 */
  /* octoFlash -> 5200 */

  /* Dma output units from cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_134 output ports=0 range=1[0,20480] */

  static const LL_Streng_TensorInitTypeDef Pad_134_dma_init_out_0_51 = {
    /* to memory with batch=1 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Pad_134_out_0 */
    .offset_start = 0,
    .offset_end = 1280,
    .offset_limit = 20544,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1280,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Pad_134_dma_init_out_0_51, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_137_off_bias_174 output ports=0 range=1[73728,92160] */

  static const LL_Streng_TensorInitTypeDef Conv2D_137_off_bias_174_dma_init_out_0_51 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_137_off_bias_out_175 */
    .offset_start = 73728,
    .offset_limit = 92224,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 8,
    .batch_offset = 72,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 18432,
    .frame_loop_cnt = 9,
    .frame_tot_cnt = 9,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_137_off_bias_174_dma_init_out_0_51, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 38912 */

  static const LL_Switch_InitTypeDef switch_init_in_51[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_134 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_134 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_134 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_137 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_137 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_137_mul_scale_172 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_137_off_bias_174 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_137_off_bias_174 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=51 */
  LL_Switch_Init(switch_init_in_51, 8);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 20480))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) /* Equivalent hex address = 0x342e0000UL */, 20480);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_51_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_51_all_units, 10);

}

static void LL_ATON_End_EpochBlock_51(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_51[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_134 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_134 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_134 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_137 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_137 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_137_mul_scale_172 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_137_off_bias_174 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_137_off_bias_174 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=51 */
  LL_Switch_Deinit(switch_deinit_in_51, 8);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_51_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_51_all_units, 10);

}


/* scheduling epoch=52   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_52(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 20480))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 40960))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 20480))) /* Equivalent hex address = 0x342e5000UL */, 20480);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_135 */
  static const uint32_t Transpose_135_tensor_shape_in_52_shape_0[] = { 1, 16, 80, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_135_tensor_shape_in_52[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 0,
      .offset_end = 20480,
      .offset_limit = 20544,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_135_tensor_shape_in_52_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_135_tensor_axes_offsets_in_52_0[] = { 20480, 1280, 16, 1 };
  static const uint32_t* Transpose_135_tensor_axes_offsets_in_52[] = {
    Transpose_135_tensor_axes_offsets_in_52_0
  };

  static const uint32_t Transpose_135_tensor_shape_out_52_shape_0[] = { 1, 80, 16, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_135_tensor_shape_out_52[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 20480,
      .offset_end = 40960,
      .offset_limit = 41024,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_135_tensor_shape_out_52_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_135_tensor_axes_offsets_out_52_0[] = { 20480, 256, 16, 1 };
  static const uint32_t* Transpose_135_tensor_axes_offsets_out_52[] = {
    Transpose_135_tensor_axes_offsets_out_52_0
  };

  static const uint8_t Transpose_135_perm_to_use_array_in_52[] = { 0, 2, 1, 3 };
  static const uint8_t Transpose_135_target_pos_array_in_52[] = { 0, 2, 1, 3 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_135_tensor_shape_in_52[0], Transpose_135_tensor_axes_offsets_in_52[0], &Transpose_135_tensor_shape_out_52[0], Transpose_135_tensor_axes_offsets_out_52[0], Transpose_135_target_pos_array_in_52, Transpose_135_perm_to_use_array_in_52, 5, 6);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 20480))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 40960))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 20480))) /* Equivalent hex address = 0x342e5000UL */, 20480);

}


/* scheduling epoch=53   nodes=6   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Identity_inserted_id809 */

static void LL_ATON_Start_EpochBlock_53(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Identity_inserted_id809 */
  /* node=Identity_inserted_id809 satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_140 */
  static const LL_Convacc_InitTypeDef Conv2D_140_init53 = {
    .simd = 2,
    .fsub = -12,
    .accumulate = 0,
    .kfilt_tot = 60,
    .kfilt_first = 0,
    .kfilt_last = 19,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 4,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 20,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_140_init53);


  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_140_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_140_ca_pipe_1_init53 = {
    .simd = 2,
    .fsub = -12,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 60,
    .kfilt_first = 20,
    .kfilt_last = 39,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 20,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_140_ca_pipe_1_init53);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_140_ca_pipe_2 */
  static const LL_Convacc_InitTypeDef Conv2D_140_ca_pipe_2_init53 = {
    .simd = 2,
    .fsub = -12,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 60,
    .kfilt_first = 40,
    .kfilt_last = 59,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 4,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 20,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_140_ca_pipe_2_init53);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_140_mul_scale_181 */
  static const LL_Arithacc_InitTypeDef Conv2D_140_mul_scale_181_init53 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 80,
    .batchDepth = 20,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 161664))) /* Equivalent hex address = 0x71027780UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_140_mul_scale_181_init53);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_140_off_bias_183 */
  static const LL_Arithacc_InitTypeDef Conv2D_140_off_bias_183_init53 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 80,
    .batchDepth = 20,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 25129,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 156400))) /* Equivalent hex address = 0x710262f0UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_140_off_bias_183_init53);


  /* Dma inputs units to cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id809 input ports=0 range=1[20480,40960] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id809_dma_init_in_0_53 = {
    /* from memory with batch=1 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_135_out_0_inserted_in809 */
    .offset_start = 20480,
    .offset_end = 20736,
    .offset_limit = 41024,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 80,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Identity_inserted_id809_dma_init_in_0_53, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_140 input ports=0 range=1[73728,92160] */

  static const LL_Streng_TensorInitTypeDef Conv2D_140_dma_init_in_0_53 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_140_zero_off_out_178 */
    .offset_start = 73728,
    .offset_limit = 92224,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 24,
    .batch_offset = 72,
    .frame_offset = 72,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_140_dma_init_in_0_53, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_140 input ports=1 range=8[95552,101312] */

  static const LL_Streng_TensorInitTypeDef Conv2D_140_dma_init_in_1_53 = {
    /* 80x1x1x72(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_140_weights */
    .offset_start = 95552,
    .offset_end = 101312,
    .offset_limit = 101376,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_140_dma_init_in_1_53, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_140_ca_pipe_1 input ports=0 range=1[73728,92160] */

  static const LL_Streng_TensorInitTypeDef Conv2D_140_ca_pipe_1_dma_init_in_0_53 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_140_zero_off_out_178_copy_in_128 ca pipe offset=1 */
    .offset_start = 73752,
    .offset_limit = 92224,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 24,
    .batch_offset = 72,
    .frame_offset = 72,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_140_ca_pipe_1_dma_init_in_0_53, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_140_ca_pipe_2 input ports=0 range=1[73728,92160] */

  static const LL_Streng_TensorInitTypeDef Conv2D_140_ca_pipe_2_dma_init_in_0_53 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_140_zero_off_out_178_copy_in_129 ca pipe offset=2 */
    .offset_start = 73776,
    .offset_limit = 92224,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 24,
    .batch_offset = 72,
    .frame_offset = 72,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_140_ca_pipe_2_dma_init_in_0_53, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 94208 */
  /* octoFlash -> 5760 */

  /* Dma output units from cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id809 output ports=0 range=1[40960,61440] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id809_dma_init_out_0_53 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_135_out_0_inserted_out809 */
    .offset_start = 40960,
    .offset_limit = 61504,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 1,
    .batch_offset = 80,
    .frame_offset = 1,
    .line_offset = 0,
    .loop_offset = 20480,
    .frame_loop_cnt = 80,
    .frame_tot_cnt = 80,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Identity_inserted_id809_dma_init_out_0_53, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_140_off_bias_183 output ports=0 range=1[0,20480] */

  static const LL_Streng_TensorInitTypeDef Conv2D_140_off_bias_183_dma_init_out_0_53 = {
    /* to memory with batch=20 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_140_off_bias_out_184 */
    .offset_start = 0,
    .offset_end = 5120,
    .offset_limit = 20544,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 5120,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_140_off_bias_183_dma_init_out_0_53, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 40960 */

  static const LL_Switch_InitTypeDef switch_init_in_53[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id809 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_mul_scale_181 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_off_bias_183 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_off_bias_183 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=53 */
  LL_Switch_Init(switch_init_in_53, 12);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_53_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_53_all_units, 12);

}

static void LL_ATON_End_EpochBlock_53(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_53[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id809 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_mul_scale_181 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_off_bias_183 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_140_off_bias_183 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=53 */
  LL_Switch_Deinit(switch_deinit_in_53, 12);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_53_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_53_all_units, 12);

}


/* scheduling epoch=54   nodes=2   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_54(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Add node=Add_143 */
  static const LL_Arithacc_InitTypeDef Add_143_init54 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 13,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 2,
    .C_shift = 4,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 80,
    .batchDepth = 20,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 18142,
    .B_scalar = 27086,
    .C_scalar = -24972,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Add_143_init54);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Sub node=Conv2D_151_suboff_186 */
  static const LL_Arithacc_InitTypeDef Conv2D_151_suboff_186_init54 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 80,
    .batchDepth = 20,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_151_suboff_186_init54);


  /* Dma inputs units to cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Add_143 input ports=0 range=1[0,20480] */

  static const LL_Streng_TensorInitTypeDef Add_143_dma_init_in_0_54 = {
    /* from memory with batch=20 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_142_out_0 */
    .offset_start = 0,
    .offset_end = 5120,
    .offset_limit = 20544,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 5120,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Add_143_dma_init_in_0_54, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Add_143 input ports=1 range=1[40960,61440] */

  static const LL_Streng_TensorInitTypeDef Add_143_dma_init_in_1_54 = {
    /* memory canonical to batch=20 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_135_out_0 */
    .offset_start = 40960,
    .offset_limit = 61504,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 20,
    .batch_offset = 80,
    .frame_offset = 20,
    .line_offset = 0,
    .loop_offset = 20480,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Add_143_dma_init_in_1_54, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 40960 */

  /* Dma output units from cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Add_143 output ports=0 range=1[20480,40960] */

  static const LL_Streng_TensorInitTypeDef Add_143_dma_init_out_0_54 = {
    /* to memory canonical from batch=20 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Add_143_out_0 */
    .offset_start = 20480,
    .offset_limit = 41024,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 20,
    .batch_offset = 80,
    .frame_offset = 20,
    .line_offset = 0,
    .loop_offset = 20480,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Add_143_dma_init_out_0_54, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_151_suboff_186 output ports=0 range=1[61440,81920] */

  static const LL_Streng_TensorInitTypeDef Conv2D_151_suboff_186_dma_init_out_0_54 = {
    /* to memory canonical from batch=20 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_151_zero_off_out_187 */
    .offset_start = 61440,
    .offset_limit = 81984,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 20,
    .batch_offset = 80,
    .frame_offset = 20,
    .line_offset = 0,
    .loop_offset = 20480,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_151_suboff_186_dma_init_out_0_54, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 40960 */

  static const LL_Switch_InitTypeDef switch_init_in_54[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_143 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_143 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_143 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_151_suboff_186 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_151_suboff_186 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=54 */
  LL_Switch_Init(switch_init_in_54, 5);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 20480))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 40960))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 20480))) /* Equivalent hex address = 0x342e5000UL */, 20480);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_54_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_54_all_units, 6);

}

static void LL_ATON_End_EpochBlock_54(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_54[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_143 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_143 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_143 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_151_suboff_186 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_151_suboff_186 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=54 */
  LL_Switch_Deinit(switch_deinit_in_54, 5);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_54_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_54_all_units, 6);

}


/* scheduling epoch=55   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_55(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 40960))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 61440))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 40960))) /* Equivalent hex address = 0x342ea000UL */, 20480);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_147 */
  static const uint32_t Transpose_147_tensor_shape_in_55_shape_0[] = { 1, 16, 16, 80 };
  static const LL_LIB_TensorShape_TypeDef Transpose_147_tensor_shape_in_55[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 20480,
      .offset_end = 40960,
      .offset_limit = 41024,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_147_tensor_shape_in_55_shape_0,
      .batch = 80,
    }
  };

  static const uint32_t Transpose_147_tensor_axes_offsets_in_55_0[] = { 20480, 1280, 80, 1 };
  static const uint32_t* Transpose_147_tensor_axes_offsets_in_55[] = {
    Transpose_147_tensor_axes_offsets_in_55_0
  };

  static const uint32_t Transpose_147_tensor_shape_out_55_shape_0[] = { 1, 80, 16, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_147_tensor_shape_out_55[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 40960,
      .offset_end = 61440,
      .offset_limit = 61504,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_147_tensor_shape_out_55_shape_0,
      .batch = 16,
    }
  };

  static const uint32_t Transpose_147_tensor_axes_offsets_out_55_0[] = { 20480, 256, 16, 1 };
  static const uint32_t* Transpose_147_tensor_axes_offsets_out_55[] = {
    Transpose_147_tensor_axes_offsets_out_55_0
  };

  static const uint8_t Transpose_147_perm_to_use_array_in_55[] = { 0, 3, 2, 1 };
  static const uint8_t Transpose_147_target_pos_array_in_55[] = { 0, 3, 2, 1 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_147_tensor_shape_in_55[0], Transpose_147_tensor_axes_offsets_in_55[0], &Transpose_147_tensor_shape_out_55[0], Transpose_147_tensor_axes_offsets_out_55[0], Transpose_147_target_pos_array_in_55, Transpose_147_perm_to_use_array_in_55, 1, 2);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 40960))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 61440))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 40960))) /* Equivalent hex address = 0x342ea000UL */, 20480);

}


/* scheduling epoch=56   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_56(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_151 */
  static const LL_Convacc_InitTypeDef Conv2D_151_init56 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_151_init56);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_151_mul_scale_190 */
  static const LL_Arithacc_InitTypeDef Conv2D_151_mul_scale_190_init56 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 14,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 80,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 161824))) /* Equivalent hex address = 0x71027820UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_151_mul_scale_190_init56);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_151_off_bias_192 */
  static const LL_Arithacc_InitTypeDef Conv2D_151_off_bias_192_init56 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 80,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 21954,
    .B_scalar = -608,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_151_off_bias_192_init56);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Pad_148 */
  static const LL_Convacc_InitTypeDef Pad_148_init56 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = -128,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 0,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 80,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 1,
    .batchDepth = 1,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 8,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 79,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Pad_148_init56);


  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_151 input ports=0 range=1[61440,81920] */

  static const LL_Streng_TensorInitTypeDef Conv2D_151_dma_init_in_0_56 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_151_zero_off_out_187 */
    .offset_start = 61440,
    .offset_limit = 81984,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 8,
    .batch_offset = 80,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 10,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_151_dma_init_in_0_56, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_151 input ports=1 range=8[101312,107072] */

  static const LL_Streng_TensorInitTypeDef Conv2D_151_dma_init_in_1_56 = {
    /* 80x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_151_weights_inflated_348 */
    .offset_start = 101312,
    .offset_end = 107072,
    .offset_limit = 107136,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_151_dma_init_in_1_56, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_148 input ports=0 range=1[40960,61440] */

  static const LL_Streng_TensorInitTypeDef Pad_148_dma_init_in_0_56 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_147_out_0 */
    .offset_start = 40960,
    .offset_limit = 61504,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 80,
    .batch_depth = 1,
    .batch_offset = 16,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 1,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Pad_148_dma_init_in_0_56, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_148 input ports=1 range=8[165584,165600] */

  static const LL_Streng_TensorInitTypeDef Pad_148_dma_init_in_1_56 = {
    /* 16x1x1x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Pad_148_pad_kern_436 */
    .offset_start = 165584,
    .offset_end = 165600,
    .offset_limit = 165664,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Pad_148_dma_init_in_1_56, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 40960 */
  /* octoFlash -> 5776 */

  /* Dma output units from cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_151_off_bias_192 output ports=0 range=1[112640,133120] */

  static const LL_Streng_TensorInitTypeDef Conv2D_151_off_bias_192_dma_init_out_0_56 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_151_off_bias_out_193 */
    .offset_start = 112640,
    .offset_limit = 133184,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 8,
    .batch_offset = 80,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 20480,
    .frame_loop_cnt = 10,
    .frame_tot_cnt = 10,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_151_off_bias_192_dma_init_out_0_56, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_148 output ports=0 range=1[0,22528] */

  static const LL_Streng_TensorInitTypeDef Pad_148_dma_init_out_0_56 = {
    /* to memory with batch=1 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Pad_148_out_0 */
    .offset_start = 0,
    .offset_end = 1408,
    .offset_limit = 22592,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1408,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Pad_148_dma_init_out_0_56, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 43008 */

  static const LL_Switch_InitTypeDef switch_init_in_56[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_151 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_151 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_151_mul_scale_190 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_151_off_bias_192 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_151_off_bias_192 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_148 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_148 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_148 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
  };


  /* epoch=56 */
  LL_Switch_Init(switch_init_in_56, 8);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 22528))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) /* Equivalent hex address = 0x342e0000UL */, 22528);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_56_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_56_all_units, 10);

}

static void LL_ATON_End_EpochBlock_56(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_56[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_151 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_151 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_151_mul_scale_190 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_151_off_bias_192 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_151_off_bias_192 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_148 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_148 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_148 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
  };


  /* epoch=56 */
  LL_Switch_Deinit(switch_deinit_in_56, 8);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_56_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_56_all_units, 10);

}


/* scheduling epoch=57   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_57(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 22528))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 45056))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 22528))) /* Equivalent hex address = 0x342e5800UL */, 22528);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_149 */
  static const uint32_t Transpose_149_tensor_shape_in_57_shape_0[] = { 1, 16, 88, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_149_tensor_shape_in_57[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 0,
      .offset_end = 22528,
      .offset_limit = 22592,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_149_tensor_shape_in_57_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_149_tensor_axes_offsets_in_57_0[] = { 22528, 1408, 16, 1 };
  static const uint32_t* Transpose_149_tensor_axes_offsets_in_57[] = {
    Transpose_149_tensor_axes_offsets_in_57_0
  };

  static const uint32_t Transpose_149_tensor_shape_out_57_shape_0[] = { 1, 88, 16, 16 };
  static const LL_LIB_TensorShape_TypeDef Transpose_149_tensor_shape_out_57[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 22528,
      .offset_end = 45056,
      .offset_limit = 45120,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_149_tensor_shape_out_57_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_149_tensor_axes_offsets_out_57_0[] = { 22528, 256, 16, 1 };
  static const uint32_t* Transpose_149_tensor_axes_offsets_out_57[] = {
    Transpose_149_tensor_axes_offsets_out_57_0
  };

  static const uint8_t Transpose_149_perm_to_use_array_in_57[] = { 0, 2, 1, 3 };
  static const uint8_t Transpose_149_target_pos_array_in_57[] = { 0, 2, 1, 3 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_149_tensor_shape_in_57[0], Transpose_149_tensor_axes_offsets_in_57[0], &Transpose_149_tensor_shape_out_57[0], Transpose_149_tensor_axes_offsets_out_57[0], Transpose_149_target_pos_array_in_57, Transpose_149_perm_to_use_array_in_57, 6, 9);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 22528))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 45056))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 22528))) /* Equivalent hex address = 0x342e5800UL */, 22528);

}


/* scheduling epoch=58   nodes=7   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Identity_inserted_id816 */

static void LL_ATON_Start_EpochBlock_58(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Identity_inserted_id816 */
  /* node=Identity_inserted_id816 satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_154 */
  static const LL_Convacc_InitTypeDef Conv2D_154_init58 = {
    .simd = 2,
    .fsub = -38,
    .accumulate = 0,
    .kfilt_tot = 88,
    .kfilt_first = 0,
    .kfilt_last = 21,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 22,
    .batchDepth = 20,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_154_init58);


  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_154_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_154_ca_pipe_1_init58 = {
    .simd = 2,
    .fsub = -38,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 88,
    .kfilt_first = 22,
    .kfilt_last = 43,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 22,
    .batchDepth = 20,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_154_ca_pipe_1_init58);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_154_ca_pipe_2 */
  static const LL_Convacc_InitTypeDef Conv2D_154_ca_pipe_2_init58 = {
    .simd = 2,
    .fsub = -38,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 88,
    .kfilt_first = 44,
    .kfilt_last = 65,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 22,
    .batchDepth = 20,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_154_ca_pipe_2_init58);


  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_154_ca_pipe_3 */
  static const LL_Convacc_InitTypeDef Conv2D_154_ca_pipe_3_init58 = {
    .simd = 2,
    .fsub = -38,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 88,
    .kfilt_first = 66,
    .kfilt_last = 87,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 22,
    .batchDepth = 20,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_154_ca_pipe_3_init58);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_154_mul_scale_199 */
  static const LL_Arithacc_InitTypeDef Conv2D_154_mul_scale_199_init58 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 88,
    .batchDepth = 22,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 160800))) /* Equivalent hex address = 0x71027420UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_154_mul_scale_199_init58);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_154_off_bias_201 */
  static const LL_Arithacc_InitTypeDef Conv2D_154_off_bias_201_init58 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 88,
    .batchDepth = 22,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 28657,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 155712))) /* Equivalent hex address = 0x71026040UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_154_off_bias_201_init58);


  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id816 input ports=0 range=1[22528,45056] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id816_dma_init_in_0_58 = {
    /* from memory with batch=1 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_149_out_0_inserted_in816 */
    .offset_start = 22528,
    .offset_end = 22784,
    .offset_limit = 45120,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 88,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Identity_inserted_id816_dma_init_in_0_58, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_154 input ports=0 range=1[112640,133120] */

  static const LL_Streng_TensorInitTypeDef Conv2D_154_dma_init_in_0_58 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_154_zero_off_out_196 */
    .offset_start = 112640,
    .offset_limit = 133184,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 20,
    .batch_offset = 80,
    .frame_offset = 80,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_154_dma_init_in_0_58, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_154 input ports=1 range=8[54528,61568] */

  static const LL_Streng_TensorInitTypeDef Conv2D_154_dma_init_in_1_58 = {
    /* 88x1x1x80(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_154_weights */
    .offset_start = 54528,
    .offset_end = 61568,
    .offset_limit = 61632,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_154_dma_init_in_1_58, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_154_ca_pipe_1 input ports=0 range=1[112640,133120] */

  static const LL_Streng_TensorInitTypeDef Conv2D_154_ca_pipe_1_dma_init_in_0_58 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_154_zero_off_out_196_copy_in_131 ca pipe offset=1 */
    .offset_start = 112660,
    .offset_limit = 133184,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 20,
    .batch_offset = 80,
    .frame_offset = 80,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_154_ca_pipe_1_dma_init_in_0_58, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_154_ca_pipe_2 input ports=0 range=1[112640,133120] */

  static const LL_Streng_TensorInitTypeDef Conv2D_154_ca_pipe_2_dma_init_in_0_58 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_154_zero_off_out_196_copy_in_132 ca pipe offset=2 */
    .offset_start = 112680,
    .offset_limit = 133184,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 20,
    .batch_offset = 80,
    .frame_offset = 80,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_154_ca_pipe_2_dma_init_in_0_58, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_154_ca_pipe_3 input ports=0 range=1[112640,133120] */

  static const LL_Streng_TensorInitTypeDef Conv2D_154_ca_pipe_3_dma_init_in_0_58 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_154_zero_off_out_196_copy_in_133 ca pipe offset=3 */
    .offset_start = 112700,
    .offset_limit = 133184,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 20,
    .batch_offset = 80,
    .frame_offset = 80,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_154_ca_pipe_3_dma_init_in_0_58, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 104448 */
  /* octoFlash -> 7040 */

  /* Dma output units from cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id816 output ports=0 range=1[90112,112640] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id816_dma_init_out_0_58 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_149_out_0_inserted_out816 */
    .offset_start = 90112,
    .offset_limit = 112704,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 1,
    .batch_offset = 88,
    .frame_offset = 1,
    .line_offset = 0,
    .loop_offset = 22528,
    .frame_loop_cnt = 88,
    .frame_tot_cnt = 88,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Identity_inserted_id816_dma_init_out_0_58, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_154_off_bias_201 output ports=0 range=1[67584,90112] */

  static const LL_Streng_TensorInitTypeDef Conv2D_154_off_bias_201_dma_init_out_0_58 = {
    /* to memory with batch=22 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_154_off_bias_out_202 */
    .offset_start = 67584,
    .offset_end = 73216,
    .offset_limit = 90176,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 5632,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_154_off_bias_201_dma_init_out_0_58, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 45056 */

  static const LL_Switch_InitTypeDef switch_init_in_58[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id816 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_mul_scale_199 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_off_bias_201 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_off_bias_201 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=58 */
  LL_Switch_Init(switch_init_in_58, 15);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_58_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_58_all_units, 14);

}

static void LL_ATON_End_EpochBlock_58(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_58[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id816 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_mul_scale_199 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_off_bias_201 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_154_off_bias_201 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=58 */
  LL_Switch_Deinit(switch_deinit_in_58, 15);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_58_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_58_all_units, 14);

}


/* scheduling epoch=59   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_59(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Add_157 */
  static const LL_Arithacc_InitTypeDef Add_157_init59 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 13,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 1,
    .C_shift = 4,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 88,
    .batchDepth = 22,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 22461,
    .B_scalar = 23132,
    .C_scalar = -20738,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Add_157_init59);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_162_suboff_204 */
  static const LL_Arithacc_InitTypeDef Conv2D_162_suboff_204_init59 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 88,
    .batchDepth = 22,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_162_suboff_204_init59);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Sub node=Conv2D_247_suboff_321 */
  static const LL_Arithacc_InitTypeDef Conv2D_247_suboff_321_init59 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 88,
    .batchDepth = 22,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_247_suboff_321_init59);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Sub node=Conv2D_238_suboff_312 */
  static const LL_Arithacc_InitTypeDef Conv2D_238_suboff_312_init59 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 88,
    .batchDepth = 22,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_238_suboff_312_init59);


  /* Dma inputs units to cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Add_157 input ports=0 range=1[67584,90112] */

  static const LL_Streng_TensorInitTypeDef Add_157_dma_init_in_0_59 = {
    /* from memory with batch=22 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_156_out_0 */
    .offset_start = 67584,
    .offset_end = 73216,
    .offset_limit = 90176,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 5632,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Add_157_dma_init_in_0_59, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Add_157 input ports=1 range=1[90112,112640] */

  static const LL_Streng_TensorInitTypeDef Add_157_dma_init_in_1_59 = {
    /* memory canonical to batch=22 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_149_out_0 */
    .offset_start = 90112,
    .offset_limit = 112704,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 22,
    .batch_offset = 88,
    .frame_offset = 22,
    .line_offset = 0,
    .loop_offset = 22528,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Add_157_dma_init_in_1_59, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 45056 */

  /* Dma output units from cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Add_157 output ports=0 range=1[0,22528] */

  static const LL_Streng_TensorInitTypeDef Add_157_dma_init_out_0_59 = {
    /* to memory canonical from batch=22 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Add_157_out_0 */
    .offset_start = 0,
    .offset_limit = 22592,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 22,
    .batch_offset = 88,
    .frame_offset = 22,
    .line_offset = 0,
    .loop_offset = 22528,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Add_157_dma_init_out_0_59, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_162_suboff_204 output ports=0 range=1[112640,135168] */

  static const LL_Streng_TensorInitTypeDef Conv2D_162_suboff_204_dma_init_out_0_59 = {
    /* to memory canonical from batch=22 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_162_zero_off_out_205 */
    .offset_start = 112640,
    .offset_limit = 135232,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 22,
    .batch_offset = 88,
    .frame_offset = 22,
    .line_offset = 0,
    .loop_offset = 22528,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_162_suboff_204_dma_init_out_0_59, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_247_suboff_321 output ports=0 range=1[22528,45056] */

  static const LL_Streng_TensorInitTypeDef Conv2D_247_suboff_321_dma_init_out_0_59 = {
    /* to memory with batch=22 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_247_zero_off_out_322 */
    .offset_start = 22528,
    .offset_end = 28160,
    .offset_limit = 45120,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 5632,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_247_suboff_321_dma_init_out_0_59, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_238_suboff_312 output ports=0 range=1[45056,67584] */

  static const LL_Streng_TensorInitTypeDef Conv2D_238_suboff_312_dma_init_out_0_59 = {
    /* to memory with batch=22 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_238_zero_off_out_313 */
    .offset_start = 45056,
    .offset_end = 50688,
    .offset_limit = 67648,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 5632,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_238_suboff_312_dma_init_out_0_59, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 90112 */

  static const LL_Switch_InitTypeDef switch_init_in_59[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_157 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_157 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_157 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_162_suboff_204 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_162_suboff_204 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_suboff_321 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_suboff_321 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_suboff_312 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_suboff_312 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=59 */
  LL_Switch_Init(switch_init_in_59, 9);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_59_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_59_all_units, 10);

}

static void LL_ATON_End_EpochBlock_59(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_59[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_157 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_157 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_157 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_162_suboff_204 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_162_suboff_204 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_suboff_321 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_suboff_321 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_suboff_312 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_suboff_312 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=59 */
  LL_Switch_Deinit(switch_deinit_in_59, 9);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_59_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_59_all_units, 10);

}


/* scheduling epoch=60   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_60(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 22 [POOL_ACC_V2 0] */
  /* kind=MaxPool node=MaxPool_168 */
  static const LL_Poolacc_InitTypeDef MaxPool_168_init60 = {
    .operation = POOL_MAX,
    .avgnopad = 0,
    .inputX = 16,
    .inputY = 16,
    .outputX = 8,
    .outputY = 8,
    .poolWinX = 2,
    .poolWinY = 2,
    .strideX = 2,
    .strideY = 2,
    .topCrop = 0,
    .bottomCrop = 15,
    .leftCrop = 0,
    .rightCrop = 15,
    .topPad = 0,
    .bottomPad = 0,
    .leftPad = 0,
    .rightPad = 0,
    .batchSize = 8,
    .shift_f = 0,
    .shift_o = 0,
    .dualLine = 1,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .inbytes_f = 1,
    .outbytes_f = 1,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .mulval = 0,
    .pad_val_en = 0,
    .pad_val = 0,
  };

  /* Unit=POOL_ACC_V2 */
  LL_Poolacc_Init(0, &MaxPool_168_init60);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_162 */
  static const LL_Convacc_InitTypeDef Conv2D_162_init60 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 2,
    .vstride = 2,
    .left_padding = 0,
    .right_padding = 1,
    .top_padding = 0,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_162_init60);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_162_mul_scale_208 */
  static const LL_Arithacc_InitTypeDef Conv2D_162_mul_scale_208_init60 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 15,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 88,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 160976))) /* Equivalent hex address = 0x710274d0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_162_mul_scale_208_init60);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_162_off_bias_210 */
  static const LL_Arithacc_InitTypeDef Conv2D_162_off_bias_210_init60 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 88,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 27616,
    .B_scalar = -416,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_162_off_bias_210_init60);


  /* Dma inputs units to cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=MaxPool_168 input ports=0 range=1[0,22528] */

  static const LL_Streng_TensorInitTypeDef MaxPool_168_dma_init_in_0_60 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Relu_160_out_0 */
    .offset_start = 0,
    .offset_limit = 22592,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 8,
    .batch_offset = 88,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 22528,
    .frame_loop_cnt = 11,
    .frame_tot_cnt = 11,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &MaxPool_168_dma_init_in_0_60, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_162 input ports=0 range=1[112640,135168] */

  static const LL_Streng_TensorInitTypeDef Conv2D_162_dma_init_in_0_60 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_162_zero_off_out_205 */
    .offset_start = 112640,
    .offset_limit = 135232,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 8,
    .batch_offset = 88,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 11,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_162_dma_init_in_0_60, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_162 input ports=1 range=8[89216,95552] */

  static const LL_Streng_TensorInitTypeDef Conv2D_162_dma_init_in_1_60 = {
    /* 88x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_162_weights_inflated_350 */
    .offset_start = 89216,
    .offset_end = 95552,
    .offset_limit = 95616,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_162_dma_init_in_1_60, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 45056 */
  /* octoFlash -> 6336 */

  /* Dma output units from cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=MaxPool_168 output ports=0 range=1[67584,73216] */

  static const LL_Streng_TensorInitTypeDef MaxPool_168_dma_init_out_0_60 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* MaxPool_168_out_0 */
    .offset_start = 67584,
    .offset_limit = 73280,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 8,
    .batch_offset = 88,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 5632,
    .frame_loop_cnt = 11,
    .frame_tot_cnt = 11,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &MaxPool_168_dma_init_out_0_60, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_162_off_bias_210 output ports=0 range=1[77824,83456] */

  static const LL_Streng_TensorInitTypeDef Conv2D_162_off_bias_210_dma_init_out_0_60 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_162_off_bias_out_211 */
    .offset_start = 77824,
    .offset_limit = 83520,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 8,
    .batch_offset = 88,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 5632,
    .frame_loop_cnt = 11,
    .frame_tot_cnt = 11,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_162_off_bias_210_dma_init_out_0_60, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 11264 */

  static const LL_Switch_InitTypeDef switch_init_in_60[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, POOL, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* MaxPool_168 IN: in unit=POOL_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, POOL, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* MaxPool_168 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=POOL_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_162 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_162 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_162_mul_scale_208 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_162_off_bias_210 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_162_off_bias_210 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=60 */
  LL_Switch_Init(switch_init_in_60, 7);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 67584))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 73216))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 67584))) /* Equivalent hex address = 0x342f0800UL */, 5632);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_60_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {POOL, 0} }, /* POOL_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_60_all_units, 9);

}

static void LL_ATON_End_EpochBlock_60(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_60[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, POOL, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* MaxPool_168 IN: in unit=POOL_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, POOL, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* MaxPool_168 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=POOL_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_162 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_162 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_162_mul_scale_208 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_162_off_bias_210 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_162_off_bias_210 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=60 */
  LL_Switch_Deinit(switch_deinit_in_60, 7);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_60_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {POOL, 0} }, /* POOL_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_60_all_units, 9);

}


/* scheduling epoch=61   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_61(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 83456))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 89088))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 83456))) /* Equivalent hex address = 0x342f4600UL */, 5632);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_169 */
  static const uint32_t Transpose_169_tensor_shape_in_61_shape_0[] = { 1, 8, 8, 88 };
  static const LL_LIB_TensorShape_TypeDef Transpose_169_tensor_shape_in_61[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 67584,
      .offset_end = 73216,
      .offset_limit = 73280,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_169_tensor_shape_in_61_shape_0,
      .batch = 88,
    }
  };

  static const uint32_t Transpose_169_tensor_axes_offsets_in_61_0[] = { 5632, 704, 88, 1 };
  static const uint32_t* Transpose_169_tensor_axes_offsets_in_61[] = {
    Transpose_169_tensor_axes_offsets_in_61_0
  };

  static const uint32_t Transpose_169_tensor_shape_out_61_shape_0[] = { 1, 88, 8, 8 };
  static const LL_LIB_TensorShape_TypeDef Transpose_169_tensor_shape_out_61[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 83456,
      .offset_end = 89088,
      .offset_limit = 89152,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_169_tensor_shape_out_61_shape_0,
      .batch = 8,
    }
  };

  static const uint32_t Transpose_169_tensor_axes_offsets_out_61_0[] = { 5632, 64, 8, 1 };
  static const uint32_t* Transpose_169_tensor_axes_offsets_out_61[] = {
    Transpose_169_tensor_axes_offsets_out_61_0
  };

  static const uint8_t Transpose_169_perm_to_use_array_in_61[] = { 0, 3, 2, 1 };
  static const uint8_t Transpose_169_target_pos_array_in_61[] = { 0, 3, 2, 1 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_169_tensor_shape_in_61[0], Transpose_169_tensor_axes_offsets_in_61[0], &Transpose_169_tensor_shape_out_61[0], Transpose_169_tensor_axes_offsets_out_61[0], Transpose_169_target_pos_array_in_61, Transpose_169_perm_to_use_array_in_61, 1, 2);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 83456))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 89088))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 83456))) /* Equivalent hex address = 0x342f4600UL */, 5632);

}


/* scheduling epoch=62   nodes=8   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_62(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_247 */
  static const LL_Convacc_InitTypeDef Conv2D_247_init62 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .kfilt_tot = 8,
    .kfilt_first = 0,
    .kfilt_last = 1,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 4,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 2,
    .batchDepth = 22,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_247_init62);


  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_247_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_247_ca_pipe_1_init62 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 8,
    .kfilt_first = 2,
    .kfilt_last = 3,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 2,
    .batchDepth = 22,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_247_ca_pipe_1_init62);


  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_247_ca_pipe_2 */
  static const LL_Convacc_InitTypeDef Conv2D_247_ca_pipe_2_init62 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 8,
    .kfilt_first = 4,
    .kfilt_last = 5,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 2,
    .batchDepth = 22,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_247_ca_pipe_2_init62);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_247_ca_pipe_3 */
  static const LL_Convacc_InitTypeDef Conv2D_247_ca_pipe_3_init62 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 8,
    .kfilt_first = 6,
    .kfilt_last = 7,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 4,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 2,
    .batchDepth = 22,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_247_ca_pipe_3_init62);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_247_mul_scale_325 */
  static const LL_Arithacc_InitTypeDef Conv2D_247_mul_scale_325_init62 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 2,
    .batchDepth = 2,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 165728))) /* Equivalent hex address = 0x71028760UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_247_mul_scale_325_init62);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_247_off_bias_327 */
  static const LL_Arithacc_InitTypeDef Conv2D_247_off_bias_327_init62 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 2,
    .batchDepth = 2,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 27723,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 165696))) /* Equivalent hex address = 0x71028740UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_247_off_bias_327_init62);


  /* Dma inputs units to cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_247 input ports=0 range=1[22528,45056] */

  static const LL_Streng_TensorInitTypeDef Conv2D_247_dma_init_in_0_62 = {
    /* 16x16x22(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_247_zero_off_out_322 */
    .offset_start = 22528,
    .offset_end = 28160,
    .offset_limit = 45120,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 22528,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_247_dma_init_in_0_62, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_247 input ports=1 range=8[161152,161328] */

  static const LL_Streng_TensorInitTypeDef Conv2D_247_dma_init_in_1_62 = {
    /* 2x1x1x88(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_247_weights */
    .offset_start = 161152,
    .offset_end = 161328,
    .offset_limit = 161392,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_247_dma_init_in_1_62, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_247_ca_pipe_1 input ports=0 range=1[22528,45056] */

  static const LL_Streng_TensorInitTypeDef Conv2D_247_ca_pipe_1_dma_init_in_0_62 = {
    /* 16x16x22(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_247_zero_off_out_322_copy_in_134 ca pipe offset=1 */
    .offset_start = 28160,
    .offset_end = 33792,
    .offset_limit = 45120,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 22528,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_247_ca_pipe_1_dma_init_in_0_62, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_247_ca_pipe_2 input ports=0 range=1[22528,45056] */

  static const LL_Streng_TensorInitTypeDef Conv2D_247_ca_pipe_2_dma_init_in_0_62 = {
    /* 16x16x22(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_247_zero_off_out_322_copy_in_135 ca pipe offset=2 */
    .offset_start = 33792,
    .offset_end = 39424,
    .offset_limit = 45120,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 22528,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_247_ca_pipe_2_dma_init_in_0_62, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_247_ca_pipe_3 input ports=0 range=1[22528,45056] */

  static const LL_Streng_TensorInitTypeDef Conv2D_247_ca_pipe_3_dma_init_in_0_62 = {
    /* 16x16x22(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_247_zero_off_out_322_copy_in_136 ca pipe offset=3 */
    .offset_start = 39424,
    .offset_end = 45056,
    .offset_limit = 45120,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 22528,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_247_ca_pipe_3_dma_init_in_0_62, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 22528 */
  /* octoFlash -> 176 */

  /* Dma output units from cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_247_off_bias_327 output ports=0 range=1[89088,89600] */

  static const LL_Streng_TensorInitTypeDef Conv2D_247_off_bias_327_dma_init_out_0_62 = {
    /* to memory with batch=2 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_247_off_bias_out_328 */
    .offset_start = 89088,
    .offset_end = 89600,
    .offset_limit = 89664,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 512,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_247_off_bias_327_dma_init_out_0_62, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 512 */

  static const LL_Switch_InitTypeDef switch_init_in_62[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_mul_scale_325 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_off_bias_327 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_off_bias_327 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=62 */
  LL_Switch_Init(switch_init_in_62, 14);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 89088))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 89600))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 89088))) /* Equivalent hex address = 0x342f5c00UL */, 512);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_62_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_62_all_units, 12);

}

static void LL_ATON_End_EpochBlock_62(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_62[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_mul_scale_325 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_off_bias_327 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_247_off_bias_327 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=62 */
  LL_Switch_Deinit(switch_deinit_in_62, 14);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_62_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_62_all_units, 12);

}


/* scheduling epoch=63   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_63(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_238 */
  static const LL_Convacc_InitTypeDef Conv2D_238_init63 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .kfilt_tot = 64,
    .kfilt_first = 0,
    .kfilt_last = 15,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 22,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_238_init63);


  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_238_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_238_ca_pipe_1_init63 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 64,
    .kfilt_first = 16,
    .kfilt_last = 31,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 22,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_238_ca_pipe_1_init63);


  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_238_ca_pipe_2 */
  static const LL_Convacc_InitTypeDef Conv2D_238_ca_pipe_2_init63 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 64,
    .kfilt_first = 32,
    .kfilt_last = 47,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 22,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_238_ca_pipe_2_init63);


  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_238_ca_pipe_3 */
  static const LL_Convacc_InitTypeDef Conv2D_238_ca_pipe_3_init63 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 64,
    .kfilt_first = 48,
    .kfilt_last = 63,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 16,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 22,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 15,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_238_ca_pipe_3_init63);


  /* Dma inputs units to cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_238 input ports=0 range=1[45056,67584] */

  static const LL_Streng_TensorInitTypeDef Conv2D_238_dma_init_in_0_63 = {
    /* 16x16x22(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_238_zero_off_out_313 */
    .offset_start = 45056,
    .offset_end = 50688,
    .offset_limit = 67648,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 22528,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_238_dma_init_in_0_63, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_238 input ports=1 range=8[132544,135360] */

  static const LL_Streng_TensorInitTypeDef Conv2D_238_dma_init_in_1_63 = {
    /* 32x1x1x88(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_238_weights */
    .offset_start = 132544,
    .offset_end = 135360,
    .offset_limit = 135424,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_238_dma_init_in_1_63, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_238_ca_pipe_1 input ports=0 range=1[45056,67584] */

  static const LL_Streng_TensorInitTypeDef Conv2D_238_ca_pipe_1_dma_init_in_0_63 = {
    /* 16x16x22(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_238_zero_off_out_313_copy_in_137 ca pipe offset=1 */
    .offset_start = 50688,
    .offset_end = 56320,
    .offset_limit = 67648,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 22528,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_238_ca_pipe_1_dma_init_in_0_63, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_238_ca_pipe_2 input ports=0 range=1[45056,67584] */

  static const LL_Streng_TensorInitTypeDef Conv2D_238_ca_pipe_2_dma_init_in_0_63 = {
    /* 16x16x22(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_238_zero_off_out_313_copy_in_138 ca pipe offset=2 */
    .offset_start = 56320,
    .offset_end = 61952,
    .offset_limit = 67648,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 22528,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_238_ca_pipe_2_dma_init_in_0_63, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_238_ca_pipe_3 input ports=0 range=1[45056,67584] */

  static const LL_Streng_TensorInitTypeDef Conv2D_238_ca_pipe_3_dma_init_in_0_63 = {
    /* 16x16x22(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_238_zero_off_out_313_copy_in_139 ca pipe offset=3 */
    .offset_start = 61952,
    .offset_end = 67584,
    .offset_limit = 67648,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 22528,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_238_ca_pipe_3_dma_init_in_0_63, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 45056 */
  /* octoFlash -> 2816 */

  /* Dma output units from cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_238_ca_pipe_3 output ports=0 range=1[0,16384] */

  static const LL_Streng_TensorInitTypeDef Conv2D_238_ca_pipe_3_dma_init_out_0_63 = {
    /* to memory with batch=16 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_238_out_0_cp_in_137_cp_in_138_cp_in_139 */
    .offset_start = 0,
    .offset_end = 8192,
    .offset_limit = 16448,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 8192,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 2,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_238_ca_pipe_3_dma_init_out_0_63, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 8192 */

  static const LL_Switch_InitTypeDef switch_init_in_63[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_3 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
  };


  /* epoch=63 */
  LL_Switch_Init(switch_init_in_63, 12);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_63_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_63_all_units, 10);

}

static void LL_ATON_End_EpochBlock_63(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_63[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_ca_pipe_3 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
  };


  /* epoch=63 */
  LL_Switch_Deinit(switch_deinit_in_63, 12);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_63_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_63_all_units, 10);

}


/* scheduling epoch=64   nodes=10  ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_64(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_165 */
  static const LL_Convacc_InitTypeDef Conv2D_165_init64 = {
    .simd = 2,
    .fsub = -26,
    .accumulate = 0,
    .kfilt_tot = 96,
    .kfilt_first = 0,
    .kfilt_last = 23,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 4,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 22,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_165_init64);


  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_165_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_165_ca_pipe_1_init64 = {
    .simd = 2,
    .fsub = -26,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 24,
    .kfilt_last = 47,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 22,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_165_ca_pipe_1_init64);


  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_165_ca_pipe_2 */
  static const LL_Convacc_InitTypeDef Conv2D_165_ca_pipe_2_init64 = {
    .simd = 2,
    .fsub = -26,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 48,
    .kfilt_last = 71,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 22,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_165_ca_pipe_2_init64);


  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_165_ca_pipe_3 */
  static const LL_Convacc_InitTypeDef Conv2D_165_ca_pipe_3_init64 = {
    .simd = 2,
    .fsub = -26,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 72,
    .kfilt_last = 95,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 4,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 22,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_165_ca_pipe_3_init64);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_165_mul_scale_217 */
  static const LL_Arithacc_InitTypeDef Conv2D_165_mul_scale_217_init64 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 10,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 158704))) /* Equivalent hex address = 0x71026bf0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_165_mul_scale_217_init64);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_165_off_bias_219 */
  static const LL_Arithacc_InitTypeDef Conv2D_165_off_bias_219_init64 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 17303,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 153408))) /* Equivalent hex address = 0x71025740UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_165_off_bias_219_init64);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_238_mul_scale_316 */
  static const LL_Arithacc_InitTypeDef Conv2D_238_mul_scale_316_init64 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 14,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 32,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 164848))) /* Equivalent hex address = 0x710283f0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_238_mul_scale_316_init64);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_238_off_bias_318 */
  static const LL_Arithacc_InitTypeDef Conv2D_238_off_bias_318_init64 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 16,
    .fChannels = 32,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 26709,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 162816))) /* Equivalent hex address = 0x71027c00UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_238_off_bias_318_init64);


  /* Dma inputs units to cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_165 input ports=0 range=1[77824,83456] */

  static const LL_Streng_TensorInitTypeDef Conv2D_165_dma_init_in_0_64 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_165_zero_off_out_214 */
    .offset_start = 77824,
    .offset_limit = 83520,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 22,
    .batch_offset = 88,
    .frame_offset = 88,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_165_dma_init_in_0_64, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_165 input ports=1 range=8[46080,54528] */

  static const LL_Streng_TensorInitTypeDef Conv2D_165_dma_init_in_1_64 = {
    /* 96x1x1x88(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_165_weights */
    .offset_start = 46080,
    .offset_end = 54528,
    .offset_limit = 54592,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_165_dma_init_in_1_64, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_165_ca_pipe_1 input ports=0 range=1[77824,83456] */

  static const LL_Streng_TensorInitTypeDef Conv2D_165_ca_pipe_1_dma_init_in_0_64 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_165_zero_off_out_214_copy_in_141 ca pipe offset=1 */
    .offset_start = 77846,
    .offset_limit = 83520,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 22,
    .batch_offset = 88,
    .frame_offset = 88,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_165_ca_pipe_1_dma_init_in_0_64, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_165_ca_pipe_2 input ports=0 range=1[77824,83456] */

  static const LL_Streng_TensorInitTypeDef Conv2D_165_ca_pipe_2_dma_init_in_0_64 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_165_zero_off_out_214_copy_in_142 ca pipe offset=2 */
    .offset_start = 77868,
    .offset_limit = 83520,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 22,
    .batch_offset = 88,
    .frame_offset = 88,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_165_ca_pipe_2_dma_init_in_0_64, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_165_ca_pipe_3 input ports=0 range=1[77824,83456] */

  static const LL_Streng_TensorInitTypeDef Conv2D_165_ca_pipe_3_dma_init_in_0_64 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_165_zero_off_out_214_copy_in_143 ca pipe offset=3 */
    .offset_start = 77890,
    .offset_limit = 83520,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 22,
    .batch_offset = 88,
    .frame_offset = 88,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_165_ca_pipe_3_dma_init_in_0_64, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_238_mul_scale_316 input ports=0 range=1[0,16384] */

  static const LL_Streng_TensorInitTypeDef Conv2D_238_mul_scale_316_dma_init_in_0_64 = {
    /* from memory with batch=16 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_238_out_0 */
    .offset_start = 0,
    .offset_end = 8192,
    .offset_limit = 16448,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 8192,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 2,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_238_mul_scale_316_dma_init_in_0_64, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 22016 */
  /* octoFlash -> 8448 */

  /* Dma output units from cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_165_off_bias_219 output ports=0 range=1[71680,77824] */

  static const LL_Streng_TensorInitTypeDef Conv2D_165_off_bias_219_dma_init_out_0_64 = {
    /* to memory with batch=24 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_165_off_bias_out_220 */
    .offset_start = 71680,
    .offset_end = 73216,
    .offset_limit = 77888,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1536,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_165_off_bias_219_dma_init_out_0_64, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_238_off_bias_318 output ports=0 range=1[16384,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_238_off_bias_318_dma_init_out_0_64 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_238_off_bias_out_319 */
    .offset_start = 16384,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 16,
    .batch_depth = 16,
    .batch_offset = 32,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 8192,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 2,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_238_off_bias_318_dma_init_out_0_64, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 14336 */

  static const LL_Switch_InitTypeDef switch_init_in_64[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_mul_scale_217 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_off_bias_219 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_off_bias_219 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_mul_scale_316 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_off_bias_318 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_off_bias_318 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=64 */
  LL_Switch_Init(switch_init_in_64, 17);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_64_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_64_all_units, 16);

}

static void LL_ATON_End_EpochBlock_64(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_64[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_mul_scale_217 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_off_bias_219 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_165_off_bias_219 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_mul_scale_316 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_off_bias_318 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_238_off_bias_318 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=64 */
  LL_Switch_Deinit(switch_deinit_in_64, 17);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_64_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_64_all_units, 16);

}


/* scheduling epoch=65   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_65(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);


/* Unit= 27 [PROCESSOR 0] */
/* kind=DequantizeLinear node=Dequantize_254 */
  Dequantizelinear_sw_info dequantizelinear2_sw_info = {
    /* "general.input" tensor-related info: */
    .general.input.dim.tensor_b = 1,
    .general.input.dim.tensor_h = 1,
    .general.input.dim.tensor_w = 512,
    .general.input.dim.tensor_c = 1,
    .general.input.dim.num_elem = 512,
    .general.input.stride.b = 512,
    .general.input.stride.h = 512,
    .general.input.stride.w = 1,
    .general.input.stride.c = 1,
    .general.input.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 89088))) /* Equivalent hex address = 0x342f5c00UL */,
    .general.input.format.is_signed = 1,
    /* "is" tensor-related info: */
    .is.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 165792))) /* Equivalent hex address = 0x710287a0UL */,
    .is.format.is_signed = 1,
    .is.dim.num_elem = 1,
    /* "izp" tensor-related info: */
    .izp.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 166208))) /* Equivalent hex address = 0x71028940UL */,
    .izp.format.is_signed = 1,
    .izp.dim.num_elem = 1,
    /* "general.output" tensor-related info: */
    .general.output.dim.tensor_b = 1,
    .general.output.dim.tensor_h = 1,
    .general.output.dim.tensor_w = 512,
    .general.output.dim.tensor_c = 1,
    .general.output.dim.num_elem = 512,
    .general.output.stride.b = 2048,
    .general.output.stride.h = 2048,
    .general.output.stride.w = 4,
    .general.output.stride.c = 4,
    .general.output.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 90112))) /* Equivalent hex address = 0x342f6000UL */,
    .general.output.format.is_signed = 1,
    .general.type = LL_SW_DEQUANTIZELINEAR,
  };

  /* Low Level SW Layer function invocation. This will exploit EmbedNets libs) */
  /* Node Dequantize_254 mapped on EmbedNets (INTEGER) as DequantizeLinear | Category: Format-Converter */
  ll_sw_forward_dequantizelinear(&dequantizelinear2_sw_info);
  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 90112))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 92160))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 90112))) /* Equivalent hex address = 0x342f6000UL */, 2048);

}


/* scheduling epoch=66   nodes=5   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Identity_inserted_id831 */

static void LL_ATON_Start_EpochBlock_66(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Pad_170 */
  static const LL_Convacc_InitTypeDef Pad_170_init66 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = -128,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 0,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 88,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 1,
    .batchDepth = 1,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 8,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 87,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Pad_170_init66);


  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Identity_inserted_id831 */
  /* node=Identity_inserted_id831 satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_170 input ports=0 range=1[83456,89088] */

  static const LL_Streng_TensorInitTypeDef Pad_170_dma_init_in_0_66 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_169_out_0 */
    .offset_start = 83456,
    .offset_limit = 89152,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 88,
    .batch_depth = 1,
    .batch_offset = 8,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 1,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 8,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Pad_170_dma_init_in_0_66, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_170 input ports=1 range=8[165712,165720] */

  static const LL_Streng_TensorInitTypeDef Pad_170_dma_init_in_1_66 = {
    /* 8x1x1x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Pad_170_pad_kern_506 */
    .offset_start = 165712,
    .offset_end = 165720,
    .offset_limit = 165784,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Pad_170_dma_init_in_1_66, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id831 input ports=0 range=1[16384,24576] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id831_dma_init_in_0_66 = {
    /* from memory with batch=1 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Reshape_242_out_0_inserted_out829_inserted_in831 */
    .offset_start = 16384,
    .offset_end = 16400,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 512,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Identity_inserted_id831_dma_init_in_0_66, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 13824 */
  /* octoFlash -> 8 */

  /* Dma output units from cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Pad_170 output ports=0 range=1[24576,30720] */

  static const LL_Streng_TensorInitTypeDef Pad_170_dma_init_out_0_66 = {
    /* to memory with batch=1 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Pad_170_out_0 */
    .offset_start = 24576,
    .offset_end = 25344,
    .offset_limit = 30784,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 768,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 8,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Pad_170_dma_init_out_0_66, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id831 output ports=0 range=1[32768,40960] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id831_dma_init_out_0_66 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Reshape_242_out_0_inserted_out829_inserted_out831 */
    .offset_start = 32768,
    .offset_limit = 41024,
    .frame_count = 0,
    .fwidth = 1,
    .fheight = 16,
    .batch_depth = 1,
    .batch_offset = 512,
    .frame_offset = 1,
    .line_offset = 0,
    .loop_offset = 8192,
    .frame_loop_cnt = 512,
    .frame_tot_cnt = 512,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Identity_inserted_id831_dma_init_out_0_66, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 14336 */

  static const LL_Switch_InitTypeDef switch_init_in_66[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_170 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_170 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_170 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id831 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
  };


  /* epoch=66 */
  LL_Switch_Init(switch_init_in_66, 4);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 24576))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 30720))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 24576))) /* Equivalent hex address = 0x342e6000UL */, 6144);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32768))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 40960))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32768))) /* Equivalent hex address = 0x342e8000UL */, 8192);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_66_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_66_all_units, 6);

}

static void LL_ATON_End_EpochBlock_66(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_66[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_170 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_170 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Pad_170 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id831 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
  };


  /* epoch=66 */
  LL_Switch_Deinit(switch_deinit_in_66, 4);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_66_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_66_all_units, 6);

}


/* scheduling epoch=67   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_67(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 40960))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 47104))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 40960))) /* Equivalent hex address = 0x342ea000UL */, 6144);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_171 */
  static const uint32_t Transpose_171_tensor_shape_in_67_shape_0[] = { 1, 8, 96, 8 };
  static const LL_LIB_TensorShape_TypeDef Transpose_171_tensor_shape_in_67[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 24576,
      .offset_end = 30720,
      .offset_limit = 30784,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_171_tensor_shape_in_67_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_171_tensor_axes_offsets_in_67_0[] = { 6144, 768, 8, 1 };
  static const uint32_t* Transpose_171_tensor_axes_offsets_in_67[] = {
    Transpose_171_tensor_axes_offsets_in_67_0
  };

  static const uint32_t Transpose_171_tensor_shape_out_67_shape_0[] = { 1, 96, 8, 8 };
  static const LL_LIB_TensorShape_TypeDef Transpose_171_tensor_shape_out_67[] = {
    {
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 40960,
      .offset_end = 47104,
      .offset_limit = 47168,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_171_tensor_shape_out_67_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_171_tensor_axes_offsets_out_67_0[] = { 6144, 64, 8, 1 };
  static const uint32_t* Transpose_171_tensor_axes_offsets_out_67[] = {
    Transpose_171_tensor_axes_offsets_out_67_0
  };

  static const uint8_t Transpose_171_perm_to_use_array_in_67[] = { 0, 2, 1, 3 };
  static const uint8_t Transpose_171_target_pos_array_in_67[] = { 0, 2, 1, 3 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_171_tensor_shape_in_67[0], Transpose_171_tensor_axes_offsets_in_67[0], &Transpose_171_tensor_shape_out_67[0], Transpose_171_tensor_axes_offsets_out_67[0], Transpose_171_target_pos_array_in_67, Transpose_171_perm_to_use_array_in_67, 3, 4);

  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 40960))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 47104))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 40960))) /* Equivalent hex address = 0x342ea000UL */, 6144);

}


/* scheduling epoch=68   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_68(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);


/* Unit= 27 [PROCESSOR 0] */
/* kind=DequantizeLinear node=Dequantize_245 */
  Dequantizelinear_sw_info dequantizelinear3_sw_info = {
    /* "general.input" tensor-related info: */
    .general.input.dim.tensor_b = 1,
    .general.input.dim.tensor_h = 16,
    .general.input.dim.tensor_w = 512,
    .general.input.dim.tensor_c = 1,
    .general.input.dim.num_elem = 8192,
    .general.input.stride.b = 8192,
    .general.input.stride.h = 512,
    .general.input.stride.w = 1,
    .general.input.stride.c = 1,
    .general.input.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32768))) /* Equivalent hex address = 0x342e8000UL */,
    .general.input.format.is_signed = 1,
    /* "is" tensor-related info: */
    .is.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 165760))) /* Equivalent hex address = 0x71028780UL */,
    .is.format.is_signed = 1,
    .is.dim.num_elem = 1,
    /* "izp" tensor-related info: */
    .izp.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 166176))) /* Equivalent hex address = 0x71028920UL */,
    .izp.format.is_signed = 1,
    .izp.dim.num_elem = 1,
    /* "general.output" tensor-related info: */
    .general.output.dim.tensor_b = 1,
    .general.output.dim.tensor_h = 16,
    .general.output.dim.tensor_w = 512,
    .general.output.dim.tensor_c = 1,
    .general.output.dim.num_elem = 8192,
    .general.output.stride.b = 32768,
    .general.output.stride.h = 2048,
    .general.output.stride.w = 4,
    .general.output.stride.c = 4,
    .general.output.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) /* Equivalent hex address = 0x342e0000UL */,
    .general.output.format.is_signed = 1,
    .general.type = LL_SW_DEQUANTIZELINEAR,
  };

  /* Low Level SW Layer function invocation. This will exploit EmbedNets libs) */
  /* Node Dequantize_245 mapped on EmbedNets (INTEGER) as DequantizeLinear | Category: Format-Converter */
  ll_sw_forward_dequantizelinear(&dequantizelinear3_sw_info);
  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32768))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) /* Equivalent hex address = 0x342e0000UL */, 32768);

}


/* scheduling epoch=69   nodes=2   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Identity_inserted_id832 */

static void LL_ATON_Start_EpochBlock_69(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Identity_inserted_id832 */
  /* node=Identity_inserted_id832 satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id832 input ports=0 range=1[40960,47104] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id832_dma_init_in_0_69 = {
    /* from memory with batch=1 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_171_out_0_inserted_in832 */
    .offset_start = 40960,
    .offset_end = 41024,
    .offset_limit = 47168,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 64,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 96,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Identity_inserted_id832_dma_init_in_0_69, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 6144 */

  /* Dma output units from cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id832 output ports=0 range=1[77824,83968] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id832_dma_init_out_0_69 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_171_out_0_inserted_out832 */
    .offset_start = 77824,
    .offset_limit = 84032,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 1,
    .batch_offset = 96,
    .frame_offset = 1,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 96,
    .frame_tot_cnt = 96,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Identity_inserted_id832_dma_init_out_0_69, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 6144 */

  static const LL_Switch_InitTypeDef switch_init_in_69[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id832 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
  };


  /* epoch=69 */
  LL_Switch_Init(switch_init_in_69, 1);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_69_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_69_all_units, 2);

}

static void LL_ATON_End_EpochBlock_69(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_69[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id832 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
  };


  /* epoch=69 */
  LL_Switch_Deinit(switch_deinit_in_69, 1);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_69_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_69_all_units, 2);

}


/* scheduling epoch=70   nodes=5   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Identity_inserted_id835 */

static void LL_ATON_Start_EpochBlock_70(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Add_172 */
  static const LL_Arithacc_InitTypeDef Add_172_init70 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 13,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 2,
    .C_shift = 3,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 17202,
    .B_scalar = 30306,
    .C_scalar = -22750,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Add_172_init70);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_177_suboff_222 */
  static const LL_Arithacc_InitTypeDef Conv2D_177_suboff_222_init70 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_177_suboff_222_init70);


  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Identity_inserted_id835 */
  /* node=Identity_inserted_id835 satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Add_172 input ports=0 range=1[71680,77824] */

  static const LL_Streng_TensorInitTypeDef Add_172_dma_init_in_0_70 = {
    /* from memory with batch=24 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_167_out_0 */
    .offset_start = 71680,
    .offset_end = 73216,
    .offset_limit = 77888,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1536,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Add_172_dma_init_in_0_70, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Add_172 input ports=1 range=1[77824,83968] */

  static const LL_Streng_TensorInitTypeDef Add_172_dma_init_in_1_70 = {
    /* memory canonical to batch=24 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Transpose_171_out_0 */
    .offset_start = 77824,
    .offset_limit = 84032,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 24,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Add_172_dma_init_in_1_70, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id835 input ports=0 range=1[0,32768] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id835_dma_init_in_0_70 = {
    /* from memory with batch=1 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_245_out_0_inserted_out833_inserted_in835 */
    .offset_start = 0,
    .offset_end = 2048,
    .offset_limit = 32832,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 2048,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 16,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Identity_inserted_id835_dma_init_in_0_70, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 45056 */

  /* Dma output units from cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Add_172 output ports=0 range=1[65536,71680] */

  static const LL_Streng_TensorInitTypeDef Add_172_dma_init_out_0_70 = {
    /* to memory with batch=24 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Add_172_out_0 */
    .offset_start = 65536,
    .offset_end = 67072,
    .offset_limit = 71744,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1536,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Add_172_dma_init_out_0_70, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_177_suboff_222 output ports=0 range=1[83968,90112] */

  static const LL_Streng_TensorInitTypeDef Conv2D_177_suboff_222_dma_init_out_0_70 = {
    /* to memory canonical from batch=24 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_177_zero_off_out_223 */
    .offset_start = 83968,
    .offset_limit = 90176,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 24,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_177_suboff_222_dma_init_out_0_70, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id835 output ports=0 range=1[32768,65536] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id835_dma_init_out_0_70 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_245_out_0_inserted_out833_inserted_out835 */
    .offset_start = 32768,
    .offset_limit = 65600,
    .frame_count = 0,
    .fwidth = 1,
    .fheight = 512,
    .batch_depth = 2,
    .batch_offset = 64,
    .frame_offset = 4,
    .line_offset = 0,
    .loop_offset = 32768,
    .frame_loop_cnt = 16,
    .frame_tot_cnt = 16,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Identity_inserted_id835_dma_init_out_0_70, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 45056 */

  static const LL_Switch_InitTypeDef switch_init_in_70[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_172 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_172 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_172 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_177_suboff_222 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_177_suboff_222 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id835 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
  };


  /* epoch=70 */
  LL_Switch_Init(switch_init_in_70, 6);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32768))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 65536))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32768))) /* Equivalent hex address = 0x342e8000UL */, 32768);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_70_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_70_all_units, 8);

}

static void LL_ATON_End_EpochBlock_70(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_70[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_172 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_172 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_172 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_177_suboff_222 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_177_suboff_222 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id835 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
  };


  /* epoch=70 */
  LL_Switch_Deinit(switch_deinit_in_70, 6);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_70_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_70_all_units, 8);

}


/* scheduling epoch=71   nodes=3   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_71(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_177 */
  static const LL_Convacc_InitTypeDef Conv2D_177_init71 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_177_init71);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_177_mul_scale_226 */
  static const LL_Arithacc_InitTypeDef Conv2D_177_mul_scale_226_init71 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 14,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 158896))) /* Equivalent hex address = 0x71026cb0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_177_mul_scale_226_init71);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_177_off_bias_228 */
  static const LL_Arithacc_InitTypeDef Conv2D_177_off_bias_228_init71 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 32457,
    .B_scalar = -48,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_177_off_bias_228_init71);


  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_177 input ports=0 range=1[83968,90112] */

  static const LL_Streng_TensorInitTypeDef Conv2D_177_dma_init_in_0_71 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_177_zero_off_out_223 */
    .offset_start = 83968,
    .offset_limit = 90176,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 8,
    .batch_offset = 96,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 12,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_177_dma_init_in_0_71, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_177 input ports=1 range=8[61568,68480] */

  static const LL_Streng_TensorInitTypeDef Conv2D_177_dma_init_in_1_71 = {
    /* 96x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_177_weights_inflated_352 */
    .offset_start = 61568,
    .offset_end = 68480,
    .offset_limit = 68544,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_177_dma_init_in_1_71, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 6144 */
  /* octoFlash -> 6912 */

  /* Dma output units from cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_177_off_bias_228 output ports=0 range=1[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_177_off_bias_228_dma_init_out_0_71 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_177_off_bias_out_229 */
    .offset_start = 6144,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 8,
    .batch_offset = 96,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 12,
    .frame_tot_cnt = 12,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_177_off_bias_228_dma_init_out_0_71, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 6144 */

  static const LL_Switch_InitTypeDef switch_init_in_71[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_177 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_177 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_177_mul_scale_226 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_177_off_bias_228 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_177_off_bias_228 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=71 */
  LL_Switch_Init(switch_init_in_71, 5);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_71_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_71_all_units, 6);

}

static void LL_ATON_End_EpochBlock_71(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_71[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_177 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_177 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_177_mul_scale_226 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_177_off_bias_228 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_177_off_bias_228 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=71 */
  LL_Switch_Deinit(switch_deinit_in_71, 5);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_71_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_71_all_units, 6);

}


/* scheduling epoch=72   nodes=8   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_72(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_180 */
  static const LL_Convacc_InitTypeDef Conv2D_180_init72 = {
    .simd = 2,
    .fsub = -3,
    .accumulate = 0,
    .kfilt_tot = 96,
    .kfilt_first = 0,
    .kfilt_last = 23,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_180_init72);


  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_180_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_180_ca_pipe_1_init72 = {
    .simd = 2,
    .fsub = -3,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 24,
    .kfilt_last = 47,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_180_ca_pipe_1_init72);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_180_ca_pipe_2 */
  static const LL_Convacc_InitTypeDef Conv2D_180_ca_pipe_2_init72 = {
    .simd = 2,
    .fsub = -3,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 48,
    .kfilt_last = 71,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_180_ca_pipe_2_init72);


  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_180_ca_pipe_3 */
  static const LL_Convacc_InitTypeDef Conv2D_180_ca_pipe_3_init72 = {
    .simd = 2,
    .fsub = -3,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 72,
    .kfilt_last = 95,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_180_ca_pipe_3_init72);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_180_mul_scale_235 */
  static const LL_Arithacc_InitTypeDef Conv2D_180_mul_scale_235_init72 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 159088))) /* Equivalent hex address = 0x71026d70UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_180_mul_scale_235_init72);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_180_off_bias_237 */
  static const LL_Arithacc_InitTypeDef Conv2D_180_off_bias_237_init72 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 17620,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 153792))) /* Equivalent hex address = 0x710258c0UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_180_off_bias_237_init72);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Add node=Add_183 */
  static const LL_Arithacc_InitTypeDef Add_183_init72 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 1,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 31875,
    .B_scalar = 30915,
    .C_scalar = 8932,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Add_183_init72);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Sub node=Conv2D_188_suboff_240 */
  static const LL_Arithacc_InitTypeDef Conv2D_188_suboff_240_init72 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_188_suboff_240_init72);


  /* Dma inputs units to cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_180 input ports=0 range=1[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_180_dma_init_in_0_72 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_180_zero_off_out_232 */
    .offset_start = 6144,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 96,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_180_dma_init_in_0_72, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_180 input ports=1 range=8[0,9216] */

  static const LL_Streng_TensorInitTypeDef Conv2D_180_dma_init_in_1_72 = {
    /* 96x1x1x96(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_180_weights */
    .offset_start = 0,
    .offset_end = 9216,
    .offset_limit = 9280,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_180_dma_init_in_1_72, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_180_ca_pipe_1 input ports=0 range=1[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_180_ca_pipe_1_dma_init_in_0_72 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_180_zero_off_out_232_copy_in_146 ca pipe offset=1 */
    .offset_start = 6168,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 96,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_180_ca_pipe_1_dma_init_in_0_72, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_180_ca_pipe_2 input ports=0 range=1[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_180_ca_pipe_2_dma_init_in_0_72 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_180_zero_off_out_232_copy_in_147 ca pipe offset=2 */
    .offset_start = 6192,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 96,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_180_ca_pipe_2_dma_init_in_0_72, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_180_ca_pipe_3 input ports=0 range=1[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_180_ca_pipe_3_dma_init_in_0_72 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_180_zero_off_out_232_copy_in_148 ca pipe offset=3 */
    .offset_start = 6216,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 96,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_180_ca_pipe_3_dma_init_in_0_72, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Add_183 input ports=1 range=1[65536,71680] */

  static const LL_Streng_TensorInitTypeDef Add_183_dma_init_in_1_72 = {
    /* from memory with batch=24 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Relu_175_out_0 */
    .offset_start = 65536,
    .offset_end = 67072,
    .offset_limit = 71744,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1536,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Add_183_dma_init_in_1_72, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 12288 */
  /* octoFlash -> 9216 */

  /* Dma output units from cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Add_183 output ports=0 range=1[0,6144] */

  static const LL_Streng_TensorInitTypeDef Add_183_dma_init_out_0_72 = {
    /* to memory with batch=24 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Add_183_out_0 */
    .offset_start = 0,
    .offset_end = 1536,
    .offset_limit = 6208,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1536,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Add_183_dma_init_out_0_72, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_188_suboff_240 output ports=0 range=1[18432,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_188_suboff_240_dma_init_out_0_72 = {
    /* to memory canonical from batch=24 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_188_zero_off_out_241 */
    .offset_start = 18432,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 24,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_188_suboff_240_dma_init_out_0_72, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_72[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_mul_scale_235 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_off_bias_237 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_183 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_183 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_183 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_188_suboff_240 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_188_suboff_240 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=72 */
  LL_Switch_Init(switch_init_in_72, 18);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_72_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_72_all_units, 16);

}

static void LL_ATON_End_EpochBlock_72(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_72[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_2 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_ca_pipe_3 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_mul_scale_235 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_180_off_bias_237 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_183 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_183 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_183 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_188_suboff_240 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_188_suboff_240 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=72 */
  LL_Switch_Deinit(switch_deinit_in_72, 18);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_72_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_72_all_units, 16);

}


/* scheduling epoch=73   nodes=3   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_73(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_188 */
  static const LL_Convacc_InitTypeDef Conv2D_188_init73 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_188_init73);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_188_mul_scale_244 */
  static const LL_Arithacc_InitTypeDef Conv2D_188_mul_scale_244_init73 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 14,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 159280))) /* Equivalent hex address = 0x71026e30UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_188_mul_scale_244_init73);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_188_off_bias_246 */
  static const LL_Arithacc_InitTypeDef Conv2D_188_off_bias_246_init73 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 30828,
    .B_scalar = 272,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_188_off_bias_246_init73);


  /* Dma inputs units to cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_188 input ports=0 range=1[18432,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_188_dma_init_in_0_73 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_188_zero_off_out_241 */
    .offset_start = 18432,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 8,
    .batch_offset = 96,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 12,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_188_dma_init_in_0_73, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_188 input ports=1 range=8[68480,75392] */

  static const LL_Streng_TensorInitTypeDef Conv2D_188_dma_init_in_1_73 = {
    /* 96x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_188_weights_inflated_354 */
    .offset_start = 68480,
    .offset_end = 75392,
    .offset_limit = 75456,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_188_dma_init_in_1_73, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 6144 */
  /* octoFlash -> 6912 */

  /* Dma output units from cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_188_off_bias_246 output ports=0 range=1[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_188_off_bias_246_dma_init_out_0_73 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_188_off_bias_out_247 */
    .offset_start = 12288,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 8,
    .batch_offset = 96,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 12,
    .frame_tot_cnt = 12,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_188_off_bias_246_dma_init_out_0_73, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 6144 */

  static const LL_Switch_InitTypeDef switch_init_in_73[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_188 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_188 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_188_mul_scale_244 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_188_off_bias_246 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_188_off_bias_246 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=73 */
  LL_Switch_Init(switch_init_in_73, 5);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_73_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_73_all_units, 6);

}

static void LL_ATON_End_EpochBlock_73(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_73[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_188 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_188 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_188_mul_scale_244 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_188_off_bias_246 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_188_off_bias_246 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=73 */
  LL_Switch_Deinit(switch_deinit_in_73, 5);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_73_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_73_all_units, 6);

}


/* scheduling epoch=74   nodes=8   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_74(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_191 */
  static const LL_Convacc_InitTypeDef Conv2D_191_init74 = {
    .simd = 2,
    .fsub = 17,
    .accumulate = 0,
    .kfilt_tot = 96,
    .kfilt_first = 0,
    .kfilt_last = 23,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_191_init74);


  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_191_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_191_ca_pipe_1_init74 = {
    .simd = 2,
    .fsub = 17,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 24,
    .kfilt_last = 47,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_191_ca_pipe_1_init74);


  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_191_ca_pipe_2 */
  static const LL_Convacc_InitTypeDef Conv2D_191_ca_pipe_2_init74 = {
    .simd = 2,
    .fsub = 17,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 48,
    .kfilt_last = 71,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_191_ca_pipe_2_init74);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_191_ca_pipe_3 */
  static const LL_Convacc_InitTypeDef Conv2D_191_ca_pipe_3_init74 = {
    .simd = 2,
    .fsub = 17,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 72,
    .kfilt_last = 95,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_191_ca_pipe_3_init74);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_191_mul_scale_253 */
  static const LL_Arithacc_InitTypeDef Conv2D_191_mul_scale_253_init74 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 159472))) /* Equivalent hex address = 0x71026ef0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_191_mul_scale_253_init74);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_191_off_bias_255 */
  static const LL_Arithacc_InitTypeDef Conv2D_191_off_bias_255_init74 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 28968,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 154176))) /* Equivalent hex address = 0x71025a40UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_191_off_bias_255_init74);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Add_194 */
  static const LL_Arithacc_InitTypeDef Add_194_init74 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 13,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 1,
    .C_shift = 4,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 20434,
    .B_scalar = 17268,
    .C_scalar = -28393,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Add_194_init74);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_199_suboff_258 */
  static const LL_Arithacc_InitTypeDef Conv2D_199_suboff_258_init74 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_199_suboff_258_init74);


  /* Dma inputs units to cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_191 input ports=0 range=1[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_191_dma_init_in_0_74 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_191_zero_off_out_250 */
    .offset_start = 12288,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 96,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_191_dma_init_in_0_74, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_191 input ports=1 range=8[9216,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_191_dma_init_in_1_74 = {
    /* 96x1x1x96(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_191_weights */
    .offset_start = 9216,
    .offset_end = 18432,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_191_dma_init_in_1_74, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_191_ca_pipe_1 input ports=0 range=1[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_191_ca_pipe_1_dma_init_in_0_74 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_191_zero_off_out_250_copy_in_149 ca pipe offset=1 */
    .offset_start = 12312,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 96,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_191_ca_pipe_1_dma_init_in_0_74, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_191_ca_pipe_2 input ports=0 range=1[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_191_ca_pipe_2_dma_init_in_0_74 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_191_zero_off_out_250_copy_in_150 ca pipe offset=2 */
    .offset_start = 12336,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 96,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_191_ca_pipe_2_dma_init_in_0_74, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_191_ca_pipe_3 input ports=0 range=1[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_191_ca_pipe_3_dma_init_in_0_74 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_191_zero_off_out_250_copy_in_151 ca pipe offset=3 */
    .offset_start = 12360,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 96,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_191_ca_pipe_3_dma_init_in_0_74, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Add_194 input ports=1 range=1[0,6144] */

  static const LL_Streng_TensorInitTypeDef Add_194_dma_init_in_1_74 = {
    /* from memory with batch=24 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Relu_186_out_0 */
    .offset_start = 0,
    .offset_end = 1536,
    .offset_limit = 6208,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1536,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Add_194_dma_init_in_1_74, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 12288 */
  /* octoFlash -> 9216 */

  /* Dma output units from cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Add_194 output ports=0 range=1[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Add_194_dma_init_out_0_74 = {
    /* to memory with batch=24 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Add_194_out_0 */
    .offset_start = 6144,
    .offset_end = 7680,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1536,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Add_194_dma_init_out_0_74, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_199_suboff_258 output ports=0 range=1[18432,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_199_suboff_258_dma_init_out_0_74 = {
    /* to memory canonical from batch=24 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_199_zero_off_out_259 */
    .offset_start = 18432,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 24,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_199_suboff_258_dma_init_out_0_74, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_74[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_mul_scale_253 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_off_bias_255 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_194 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_194 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_194 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_199_suboff_258 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_199_suboff_258 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=74 */
  LL_Switch_Init(switch_init_in_74, 18);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_74_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_74_all_units, 16);

}

static void LL_ATON_End_EpochBlock_74(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_74[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_mul_scale_253 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_191_off_bias_255 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_194 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_194 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_194 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_199_suboff_258 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_199_suboff_258 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=74 */
  LL_Switch_Deinit(switch_deinit_in_74, 18);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_74_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_74_all_units, 16);

}


/* scheduling epoch=75   nodes=3   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_75(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_199 */
  static const LL_Convacc_InitTypeDef Conv2D_199_init75 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_199_init75);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_199_mul_scale_262 */
  static const LL_Arithacc_InitTypeDef Conv2D_199_mul_scale_262_init75 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 14,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 159664))) /* Equivalent hex address = 0x71026fb0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_199_mul_scale_262_init75);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_199_off_bias_264 */
  static const LL_Arithacc_InitTypeDef Conv2D_199_off_bias_264_init75 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 31419,
    .B_scalar = -272,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_199_off_bias_264_init75);


  /* Dma inputs units to cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_199 input ports=0 range=1[18432,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_199_dma_init_in_0_75 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_199_zero_off_out_259 */
    .offset_start = 18432,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 8,
    .batch_offset = 96,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 12,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_199_dma_init_in_0_75, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_199 input ports=1 range=8[75392,82304] */

  static const LL_Streng_TensorInitTypeDef Conv2D_199_dma_init_in_1_75 = {
    /* 96x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_199_weights_inflated_356 */
    .offset_start = 75392,
    .offset_end = 82304,
    .offset_limit = 82368,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_199_dma_init_in_1_75, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 6144 */
  /* octoFlash -> 6912 */

  /* Dma output units from cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_199_off_bias_264 output ports=0 range=1[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_199_off_bias_264_dma_init_out_0_75 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_199_off_bias_out_265 */
    .offset_start = 12288,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 8,
    .batch_offset = 96,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 12,
    .frame_tot_cnt = 12,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_199_off_bias_264_dma_init_out_0_75, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 6144 */

  static const LL_Switch_InitTypeDef switch_init_in_75[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_199 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_199 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_199_mul_scale_262 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_199_off_bias_264 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_199_off_bias_264 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=75 */
  LL_Switch_Init(switch_init_in_75, 5);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_75_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_75_all_units, 6);

}

static void LL_ATON_End_EpochBlock_75(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_75[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_199 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_199 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_199_mul_scale_262 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_199_off_bias_264 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_199_off_bias_264 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=75 */
  LL_Switch_Deinit(switch_deinit_in_75, 5);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_75_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_75_all_units, 6);

}


/* scheduling epoch=76   nodes=8   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_76(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_202 */
  static const LL_Convacc_InitTypeDef Conv2D_202_init76 = {
    .simd = 2,
    .fsub = -17,
    .accumulate = 0,
    .kfilt_tot = 96,
    .kfilt_first = 0,
    .kfilt_last = 23,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 4,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_202_init76);


  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_202_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_202_ca_pipe_1_init76 = {
    .simd = 2,
    .fsub = -17,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 24,
    .kfilt_last = 47,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_202_ca_pipe_1_init76);


  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_202_ca_pipe_2 */
  static const LL_Convacc_InitTypeDef Conv2D_202_ca_pipe_2_init76 = {
    .simd = 2,
    .fsub = -17,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 48,
    .kfilt_last = 71,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_202_ca_pipe_2_init76);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_202_ca_pipe_3 */
  static const LL_Convacc_InitTypeDef Conv2D_202_ca_pipe_3_init76 = {
    .simd = 2,
    .fsub = -17,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 72,
    .kfilt_last = 95,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 4,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_202_ca_pipe_3_init76);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_202_mul_scale_271 */
  static const LL_Arithacc_InitTypeDef Conv2D_202_mul_scale_271_init76 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 11,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 159856))) /* Equivalent hex address = 0x71027070UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_202_mul_scale_271_init76);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_202_off_bias_273 */
  static const LL_Arithacc_InitTypeDef Conv2D_202_off_bias_273_init76 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 18486,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 154560))) /* Equivalent hex address = 0x71025bc0UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_202_off_bias_273_init76);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Add_205 */
  static const LL_Arithacc_InitTypeDef Add_205_init76 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 1,
    .C_shift = 4,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 29327,
    .B_scalar = 30011,
    .C_scalar = 16467,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Add_205_init76);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_210_suboff_276 */
  static const LL_Arithacc_InitTypeDef Conv2D_210_suboff_276_init76 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_210_suboff_276_init76);


  /* Dma inputs units to cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_202 input ports=0 range=1[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_202_dma_init_in_0_76 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_202_zero_off_out_268 */
    .offset_start = 12288,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 96,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_202_dma_init_in_0_76, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_202 input ports=1 range=8[18432,27648] */

  static const LL_Streng_TensorInitTypeDef Conv2D_202_dma_init_in_1_76 = {
    /* 96x1x1x96(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_202_weights */
    .offset_start = 18432,
    .offset_end = 27648,
    .offset_limit = 27712,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_202_dma_init_in_1_76, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_202_ca_pipe_1 input ports=0 range=1[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_202_ca_pipe_1_dma_init_in_0_76 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_202_zero_off_out_268_copy_in_152 ca pipe offset=1 */
    .offset_start = 12312,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 96,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_202_ca_pipe_1_dma_init_in_0_76, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_202_ca_pipe_2 input ports=0 range=1[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_202_ca_pipe_2_dma_init_in_0_76 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_202_zero_off_out_268_copy_in_153 ca pipe offset=2 */
    .offset_start = 12336,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 96,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_202_ca_pipe_2_dma_init_in_0_76, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_202_ca_pipe_3 input ports=0 range=1[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_202_ca_pipe_3_dma_init_in_0_76 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_202_zero_off_out_268_copy_in_154 ca pipe offset=3 */
    .offset_start = 12360,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 96,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_202_ca_pipe_3_dma_init_in_0_76, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Add_205 input ports=1 range=1[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Add_205_dma_init_in_1_76 = {
    /* from memory with batch=24 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Relu_197_out_0 */
    .offset_start = 6144,
    .offset_end = 7680,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1536,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Add_205_dma_init_in_1_76, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 12288 */
  /* octoFlash -> 9216 */

  /* Dma output units from cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Add_205 output ports=0 range=1[0,6144] */

  static const LL_Streng_TensorInitTypeDef Add_205_dma_init_out_0_76 = {
    /* to memory with batch=24 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Add_205_out_0 */
    .offset_start = 0,
    .offset_end = 1536,
    .offset_limit = 6208,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1536,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Add_205_dma_init_out_0_76, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_210_suboff_276 output ports=0 range=1[18432,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_210_suboff_276_dma_init_out_0_76 = {
    /* to memory canonical from batch=24 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_210_zero_off_out_277 */
    .offset_start = 18432,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 24,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_210_suboff_276_dma_init_out_0_76, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_76[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_mul_scale_271 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_off_bias_273 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_205 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_205 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_205 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_210_suboff_276 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_210_suboff_276 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=76 */
  LL_Switch_Init(switch_init_in_76, 18);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_76_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_76_all_units, 16);

}

static void LL_ATON_End_EpochBlock_76(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_76[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_mul_scale_271 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_202_off_bias_273 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_205 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_205 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_205 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_210_suboff_276 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_210_suboff_276 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=76 */
  LL_Switch_Deinit(switch_deinit_in_76, 18);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_76_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_76_all_units, 16);

}


/* scheduling epoch=77   nodes=3   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_77(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_210 */
  static const LL_Convacc_InitTypeDef Conv2D_210_init77 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_210_init77);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_210_mul_scale_280 */
  static const LL_Arithacc_InitTypeDef Conv2D_210_mul_scale_280_init77 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 15,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 160048))) /* Equivalent hex address = 0x71027130UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_210_mul_scale_280_init77);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_210_off_bias_282 */
  static const LL_Arithacc_InitTypeDef Conv2D_210_off_bias_282_init77 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 24867,
    .B_scalar = 1888,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_210_off_bias_282_init77);


  /* Dma inputs units to cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_210 input ports=0 range=1[18432,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_210_dma_init_in_0_77 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_210_zero_off_out_277 */
    .offset_start = 18432,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 8,
    .batch_offset = 96,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 12,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_210_dma_init_in_0_77, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_210 input ports=1 range=8[82304,89216] */

  static const LL_Streng_TensorInitTypeDef Conv2D_210_dma_init_in_1_77 = {
    /* 96x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_210_weights_inflated_358 */
    .offset_start = 82304,
    .offset_end = 89216,
    .offset_limit = 89280,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_210_dma_init_in_1_77, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 6144 */
  /* octoFlash -> 6912 */

  /* Dma output units from cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_210_off_bias_282 output ports=0 range=1[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_210_off_bias_282_dma_init_out_0_77 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_210_off_bias_out_283 */
    .offset_start = 6144,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 8,
    .batch_offset = 96,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 12,
    .frame_tot_cnt = 12,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_210_off_bias_282_dma_init_out_0_77, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 6144 */

  static const LL_Switch_InitTypeDef switch_init_in_77[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_210 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_210 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_210_mul_scale_280 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_210_off_bias_282 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_210_off_bias_282 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=77 */
  LL_Switch_Init(switch_init_in_77, 5);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_77_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_77_all_units, 6);

}

static void LL_ATON_End_EpochBlock_77(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_77[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_210 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_210 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_210_mul_scale_280 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_210_off_bias_282 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_210_off_bias_282 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=77 */
  LL_Switch_Deinit(switch_deinit_in_77, 5);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_77_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_77_all_units, 6);

}


/* scheduling epoch=78   nodes=8   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_78(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_213 */
  static const LL_Convacc_InitTypeDef Conv2D_213_init78 = {
    .simd = 2,
    .fsub = 118,
    .accumulate = 0,
    .kfilt_tot = 96,
    .kfilt_first = 0,
    .kfilt_last = 23,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 4,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_213_init78);


  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_213_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_213_ca_pipe_1_init78 = {
    .simd = 2,
    .fsub = 118,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 24,
    .kfilt_last = 47,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_213_ca_pipe_1_init78);


  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_213_ca_pipe_2 */
  static const LL_Convacc_InitTypeDef Conv2D_213_ca_pipe_2_init78 = {
    .simd = 2,
    .fsub = 118,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 48,
    .kfilt_last = 71,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_213_ca_pipe_2_init78);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_213_ca_pipe_3 */
  static const LL_Convacc_InitTypeDef Conv2D_213_ca_pipe_3_init78 = {
    .simd = 2,
    .fsub = 118,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 96,
    .kfilt_first = 72,
    .kfilt_last = 95,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 4,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_213_ca_pipe_3_init78);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_213_mul_scale_289 */
  static const LL_Arithacc_InitTypeDef Conv2D_213_mul_scale_289_init78 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 9,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 160240))) /* Equivalent hex address = 0x710271f0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_213_mul_scale_289_init78);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Add node=Conv2D_213_off_bias_291 */
  static const LL_Arithacc_InitTypeDef Conv2D_213_off_bias_291_init78 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 30820,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 154944))) /* Equivalent hex address = 0x71025d40UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_213_off_bias_291_init78);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Add_216 */
  static const LL_Arithacc_InitTypeDef Add_216_init78 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 13,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 1,
    .C_shift = 5,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 23670,
    .B_scalar = 22047,
    .C_scalar = -17523,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Add_216_init78);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_229_suboff_303 */
  static const LL_Arithacc_InitTypeDef Conv2D_229_suboff_303_init78 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_229_suboff_303_init78);


  /* Dma inputs units to cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_213 input ports=0 range=1[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_213_dma_init_in_0_78 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_213_zero_off_out_286 */
    .offset_start = 6144,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 96,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_213_dma_init_in_0_78, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_213 input ports=1 range=8[27648,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_213_dma_init_in_1_78 = {
    /* 96x1x1x96(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_213_weights */
    .offset_start = 27648,
    .offset_end = 36864,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_213_dma_init_in_1_78, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_213_ca_pipe_1 input ports=0 range=1[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_213_ca_pipe_1_dma_init_in_0_78 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_213_zero_off_out_286_copy_in_155 ca pipe offset=1 */
    .offset_start = 6168,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 96,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_213_ca_pipe_1_dma_init_in_0_78, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_213_ca_pipe_2 input ports=0 range=1[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_213_ca_pipe_2_dma_init_in_0_78 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_213_zero_off_out_286_copy_in_156 ca pipe offset=2 */
    .offset_start = 6192,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 96,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_213_ca_pipe_2_dma_init_in_0_78, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_213_ca_pipe_3 input ports=0 range=1[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_213_ca_pipe_3_dma_init_in_0_78 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_213_zero_off_out_286_copy_in_157 ca pipe offset=3 */
    .offset_start = 6216,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 96,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_213_ca_pipe_3_dma_init_in_0_78, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Add_216 input ports=1 range=1[0,6144] */

  static const LL_Streng_TensorInitTypeDef Add_216_dma_init_in_1_78 = {
    /* from memory with batch=24 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Relu_208_out_0 */
    .offset_start = 0,
    .offset_end = 1536,
    .offset_limit = 6208,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1536,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Add_216_dma_init_in_1_78, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 12288 */
  /* octoFlash -> 9216 */

  /* Dma output units from cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Add_216 output ports=0 range=1[18432,24576] */

  static const LL_Streng_TensorInitTypeDef Add_216_dma_init_out_0_78 = {
    /* to memory with batch=24 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Add_216_out_0 */
    .offset_start = 18432,
    .offset_end = 19968,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1536,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Add_216_dma_init_out_0_78, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_229_suboff_303 output ports=0 range=1[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_229_suboff_303_dma_init_out_0_78 = {
    /* to memory with batch=24 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_229_zero_off_out_304 */
    .offset_start = 12288,
    .offset_end = 13824,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1536,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_229_suboff_303_dma_init_out_0_78, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_78[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_mul_scale_289 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_off_bias_291 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_216 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_216 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_216 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_suboff_303 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_suboff_303 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=78 */
  LL_Switch_Init(switch_init_in_78, 18);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_78_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_78_all_units, 16);

}

static void LL_ATON_End_EpochBlock_78(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_78[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_2 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_ca_pipe_3 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_mul_scale_289 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_213_off_bias_291 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_216 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_216 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Add_216 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_suboff_303 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_suboff_303 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=78 */
  LL_Switch_Deinit(switch_deinit_in_78, 18);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_78_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_78_all_units, 16);

}


/* scheduling epoch=79   nodes=9   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_79(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Sub node=Conv2D_220_suboff_294 */
  static const LL_Arithacc_InitTypeDef Conv2D_220_suboff_294_init79 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_220_suboff_294_init79);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_229 */
  static const LL_Convacc_InitTypeDef Conv2D_229_init79 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .kfilt_tot = 24,
    .kfilt_first = 0,
    .kfilt_last = 5,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 5,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 6,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_229_init79);


  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_229_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_229_ca_pipe_1_init79 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 24,
    .kfilt_first = 6,
    .kfilt_last = 11,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 6,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_229_ca_pipe_1_init79);


  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_229_ca_pipe_2 */
  static const LL_Convacc_InitTypeDef Conv2D_229_ca_pipe_2_init79 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 24,
    .kfilt_first = 12,
    .kfilt_last = 17,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 6,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_229_ca_pipe_2_init79);


  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_229_ca_pipe_3 */
  static const LL_Convacc_InitTypeDef Conv2D_229_ca_pipe_3_init79 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 24,
    .kfilt_first = 18,
    .kfilt_last = 23,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 5,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 6,
    .batchDepth = 24,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_229_ca_pipe_3_init79);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Mul node=Conv2D_229_mul_scale_307 */
  static const LL_Arithacc_InitTypeDef Conv2D_229_mul_scale_307_init79 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 6,
    .batchDepth = 6,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 165680))) /* Equivalent hex address = 0x71028730UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_229_mul_scale_307_init79);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Add node=Conv2D_229_off_bias_309 */
  static const LL_Arithacc_InitTypeDef Conv2D_229_off_bias_309_init79 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 6,
    .batchDepth = 6,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 26756,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 165552))) /* Equivalent hex address = 0x710286b0UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_229_off_bias_309_init79);


  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_220_suboff_294 input ports=0 range=1[18432,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_220_suboff_294_dma_init_in_0_79 = {
    /* from memory with batch=24 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Relu_219_out_0 */
    .offset_start = 18432,
    .offset_end = 19968,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1536,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_220_suboff_294_dma_init_in_0_79, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_229 input ports=0 range=1[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_229_dma_init_in_0_79 = {
    /* 8x8x24(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_229_zero_off_out_304 */
    .offset_start = 12288,
    .offset_end = 13824,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 6144,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_229_dma_init_in_0_79, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_229 input ports=1 range=8[152448,153024] */

  static const LL_Streng_TensorInitTypeDef Conv2D_229_dma_init_in_1_79 = {
    /* 6x1x1x96(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_229_weights */
    .offset_start = 152448,
    .offset_end = 153024,
    .offset_limit = 153088,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_229_dma_init_in_1_79, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_229_ca_pipe_1 input ports=0 range=1[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_229_ca_pipe_1_dma_init_in_0_79 = {
    /* 8x8x24(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_229_zero_off_out_304_copy_in_158 ca pipe offset=1 */
    .offset_start = 13824,
    .offset_end = 15360,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 6144,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_229_ca_pipe_1_dma_init_in_0_79, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_229_ca_pipe_2 input ports=0 range=1[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_229_ca_pipe_2_dma_init_in_0_79 = {
    /* 8x8x24(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_229_zero_off_out_304_copy_in_159 ca pipe offset=2 */
    .offset_start = 15360,
    .offset_end = 16896,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 6144,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_229_ca_pipe_2_dma_init_in_0_79, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_229_ca_pipe_3 input ports=0 range=1[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_229_ca_pipe_3_dma_init_in_0_79 = {
    /* 8x8x24(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_229_zero_off_out_304_copy_in_160 ca pipe offset=3 */
    .offset_start = 16896,
    .offset_end = 18432,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 6144,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_229_ca_pipe_3_dma_init_in_0_79, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 12288 */
  /* octoFlash -> 576 */

  /* Dma output units from cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_220_suboff_294 output ports=0 range=1[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_220_suboff_294_dma_init_out_0_79 = {
    /* to memory canonical from batch=24 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_220_zero_off_out_295 */
    .offset_start = 6144,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 24,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_220_suboff_294_dma_init_out_0_79, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_229_off_bias_309 output ports=0 range=1[32256,32640] */

  static const LL_Streng_TensorInitTypeDef Conv2D_229_off_bias_309_dma_init_out_0_79 = {
    /* to memory with batch=6 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_229_off_bias_out_310 */
    .offset_start = 32256,
    .offset_end = 32640,
    .offset_limit = 32704,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 384,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_229_off_bias_309_dma_init_out_0_79, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 6528 */

  static const LL_Switch_InitTypeDef switch_init_in_79[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_220_suboff_294 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_220_suboff_294 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_mul_scale_307 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_off_bias_309 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_off_bias_309 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
  };


  /* epoch=79 */
  LL_Switch_Init(switch_init_in_79, 16);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32256))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32640))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32256))) /* Equivalent hex address = 0x342e7e00UL */, 384);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_79_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_79_all_units, 15);

}

static void LL_ATON_End_EpochBlock_79(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_79[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_220_suboff_294 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_220_suboff_294 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_2 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_ca_pipe_3 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_mul_scale_307 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_off_bias_309 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_229_off_bias_309 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
  };


  /* epoch=79 */
  LL_Switch_Deinit(switch_deinit_in_79, 16);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_79_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_79_all_units, 15);

}


/* scheduling epoch=80   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_80(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);


/* Unit= 27 [PROCESSOR 0] */
/* kind=DequantizeLinear node=Dequantize_236 */
  Dequantizelinear_sw_info dequantizelinear4_sw_info = {
    /* "general.input" tensor-related info: */
    .general.input.dim.tensor_b = 1,
    .general.input.dim.tensor_h = 1,
    .general.input.dim.tensor_w = 384,
    .general.input.dim.tensor_c = 1,
    .general.input.dim.num_elem = 384,
    .general.input.stride.b = 384,
    .general.input.stride.h = 384,
    .general.input.stride.w = 1,
    .general.input.stride.c = 1,
    .general.input.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32256))) /* Equivalent hex address = 0x342e7e00UL */,
    .general.input.format.is_signed = 1,
    /* "is" tensor-related info: */
    .is.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 165808))) /* Equivalent hex address = 0x710287b0UL */,
    .is.format.is_signed = 1,
    .is.dim.num_elem = 1,
    /* "izp" tensor-related info: */
    .izp.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 166224))) /* Equivalent hex address = 0x71028950UL */,
    .izp.format.is_signed = 1,
    .izp.dim.num_elem = 1,
    /* "general.output" tensor-related info: */
    .general.output.dim.tensor_b = 1,
    .general.output.dim.tensor_h = 1,
    .general.output.dim.tensor_w = 384,
    .general.output.dim.tensor_c = 1,
    .general.output.dim.num_elem = 384,
    .general.output.stride.b = 1536,
    .general.output.stride.h = 1536,
    .general.output.stride.w = 4,
    .general.output.stride.c = 4,
    .general.output.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 30720))) /* Equivalent hex address = 0x342e7800UL */,
    .general.output.format.is_signed = 1,
    .general.type = LL_SW_DEQUANTIZELINEAR,
  };

  /* Low Level SW Layer function invocation. This will exploit EmbedNets libs) */
  /* Node Dequantize_236 mapped on EmbedNets (INTEGER) as DequantizeLinear | Category: Format-Converter */
  ll_sw_forward_dequantizelinear(&dequantizelinear4_sw_info);
  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 30720))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 32256))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 30720))) /* Equivalent hex address = 0x342e7800UL */, 1536);

}


/* scheduling epoch=81   nodes=6   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_81(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_220 */
  static const LL_Convacc_InitTypeDef Conv2D_220_init81 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 3,
    .shift_f = 0,
    .shift_a = 4,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 4,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 8,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 24,
    .batchDepth = 96,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 7,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_220_init81);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_220_mul_scale_298 */
  static const LL_Arithacc_InitTypeDef Conv2D_220_mul_scale_298_init81 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 14,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 160432))) /* Equivalent hex address = 0x710272b0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_220_mul_scale_298_init81);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_220_off_bias_300 */
  static const LL_Arithacc_InitTypeDef Conv2D_220_off_bias_300_init81 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 8,
    .fChannels = 96,
    .batchDepth = 24,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 27261,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 153024))) /* Equivalent hex address = 0x710255c0UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_220_off_bias_300_init81);


  /* Dma inputs units to cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_220 input ports=0 range=1[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_220_dma_init_in_0_81 = {
    /* 8x8x96(8 bits) */
    .dir = 0,
    .raw = 1,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_220_zero_off_out_295 */
    .offset_start = 6144,
    .offset_end = 12288,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_220_dma_init_in_0_81, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_220 input ports=1 range=8[36864,46080] */

  static const LL_Streng_TensorInitTypeDef Conv2D_220_dma_init_in_1_81 = {
    /* 96x1x1x96(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */}, /* Conv2D_220_weights */
    .offset_start = 36864,
    .offset_end = 46080,
    .offset_limit = 46144,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_220_dma_init_in_1_81, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 24576 */
  /* octoFlash -> 9216 */

  /* Dma output units from cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_220_off_bias_300 output ports=0 range=1[0,6144] */

  static const LL_Streng_TensorInitTypeDef Conv2D_220_off_bias_300_dma_init_out_0_81 = {
    /* to memory canonical from batch=24 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Conv2D_220_off_bias_out_301 */
    .offset_start = 0,
    .offset_limit = 6208,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 8,
    .batch_depth = 24,
    .batch_offset = 96,
    .frame_offset = 24,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_220_off_bias_300_dma_init_out_0_81, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 6144 */

  static const LL_Switch_InitTypeDef switch_init_in_81[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_220 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_220 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_220_mul_scale_298 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_220_off_bias_300 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_220_off_bias_300 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
  };


  /* epoch=81 */
  LL_Switch_Init(switch_init_in_81, 5);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_81_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_81_all_units, 6);

}

static void LL_ATON_End_EpochBlock_81(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_81[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_220 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_220 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_220_mul_scale_298 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_220_off_bias_300 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_220_off_bias_300 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
  };


  /* epoch=81 */
  LL_Switch_Deinit(switch_deinit_in_81, 5);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_81_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_81_all_units, 6);

}


/* scheduling epoch=82   nodes=3   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Identity_inserted_id853 */

static void LL_ATON_Start_EpochBlock_82(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Identity_inserted_id853 */
  /* node=Identity_inserted_id853 satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id853 input ports=0 range=1[0,6144] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id853_dma_init_in_0_82 = {
    /* from memory with batch=1 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Reshape_224_out_0_inserted_out851_inserted_in853 */
    .offset_start = 0,
    .offset_end = 16,
    .offset_limit = 6208,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 384,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Identity_inserted_id853_dma_init_in_0_82, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 6144 */

  /* Dma output units from cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id853 output ports=0 range=1[24576,30720] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id853_dma_init_out_0_82 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Reshape_224_out_0_inserted_out851_inserted_out853 */
    .offset_start = 24576,
    .offset_limit = 30784,
    .frame_count = 0,
    .fwidth = 1,
    .fheight = 16,
    .batch_depth = 1,
    .batch_offset = 384,
    .frame_offset = 1,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 384,
    .frame_tot_cnt = 384,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Identity_inserted_id853_dma_init_out_0_82, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 6144 */

  static const LL_Switch_InitTypeDef switch_init_in_82[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id853 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
  };


  /* epoch=82 */
  LL_Switch_Init(switch_init_in_82, 1);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 24576))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 30720))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 24576))) /* Equivalent hex address = 0x342e6000UL */, 6144);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_82_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_82_all_units, 2);

}

static void LL_ATON_End_EpochBlock_82(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_82[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id853 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
  };


  /* epoch=82 */
  LL_Switch_Deinit(switch_deinit_in_82, 1);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_82_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_82_all_units, 2);

}


/* scheduling epoch=83   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_83(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);


/* Unit= 27 [PROCESSOR 0] */
/* kind=DequantizeLinear node=Dequantize_227 */
  Dequantizelinear_sw_info dequantizelinear5_sw_info = {
    /* "general.input" tensor-related info: */
    .general.input.dim.tensor_b = 1,
    .general.input.dim.tensor_h = 16,
    .general.input.dim.tensor_w = 384,
    .general.input.dim.tensor_c = 1,
    .general.input.dim.num_elem = 6144,
    .general.input.stride.b = 6144,
    .general.input.stride.h = 384,
    .general.input.stride.w = 1,
    .general.input.stride.c = 1,
    .general.input.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 24576))) /* Equivalent hex address = 0x342e6000UL */,
    .general.input.format.is_signed = 1,
    /* "is" tensor-related info: */
    .is.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 165776))) /* Equivalent hex address = 0x71028790UL */,
    .is.format.is_signed = 1,
    .is.dim.num_elem = 1,
    /* "izp" tensor-related info: */
    .izp.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x71000000UL + 166192))) /* Equivalent hex address = 0x71028930UL */,
    .izp.format.is_signed = 1,
    .izp.dim.num_elem = 1,
    /* "general.output" tensor-related info: */
    .general.output.dim.tensor_b = 1,
    .general.output.dim.tensor_h = 16,
    .general.output.dim.tensor_w = 384,
    .general.output.dim.tensor_c = 1,
    .general.output.dim.num_elem = 6144,
    .general.output.stride.b = 24576,
    .general.output.stride.h = 1536,
    .general.output.stride.w = 4,
    .general.output.stride.c = 4,
    .general.output.mem.start_offset = ((unsigned char *)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) /* Equivalent hex address = 0x342e0000UL */,
    .general.output.format.is_signed = 1,
    .general.type = LL_SW_DEQUANTIZELINEAR,
  };

  /* Low Level SW Layer function invocation. This will exploit EmbedNets libs) */
  /* Node Dequantize_227 mapped on EmbedNets (INTEGER) as DequantizeLinear | Category: Format-Converter */
  ll_sw_forward_dequantizelinear(&dequantizelinear5_sw_info);
  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 24576))) */
  LL_ATON_Cache_MCU_Clean_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 0))) /* Equivalent hex address = 0x342e0000UL */, 24576);

}


/* scheduling epoch=84   nodes=1   ------------------------------------------------------------------- */

/* scheduling epoch=85   nodes=3   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Identity_inserted_id856 */

static void LL_ATON_Start_EpochBlock_85(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Identity_inserted_id856 */
  /* node=Identity_inserted_id856 satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id856 input ports=0 range=1[0,24576] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id856_dma_init_in_0_85 = {
    /* from memory with batch=1 */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_227_out_0_inserted_out854_inserted_in856 */
    .offset_start = 0,
    .offset_end = 1536,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 1536,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 16,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Identity_inserted_id856_dma_init_in_0_85, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM5 -> 24576 */

  /* Dma output units from cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Identity_inserted_id856 output ports=0 range=1[65536,90112] */

  static const LL_Streng_TensorInitTypeDef Identity_inserted_id856_dma_init_out_0_85 = {
    /* to memory canonical from batch=1 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */}, /* Dequantize_227_out_0_inserted_out854_inserted_out856 */
    .offset_start = 65536,
    .offset_limit = 90176,
    .frame_count = 0,
    .fwidth = 1,
    .fheight = 384,
    .batch_depth = 2,
    .batch_offset = 64,
    .frame_offset = 4,
    .line_offset = 0,
    .loop_offset = 24576,
    .frame_loop_cnt = 16,
    .frame_tot_cnt = 16,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Identity_inserted_id856_dma_init_out_0_85, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM5 <- 24576 */

  static const LL_Switch_InitTypeDef switch_init_in_85[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id856 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
  };


  /* epoch=85 */
  LL_Switch_Init(switch_init_in_85, 1);

  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 1 */
  /*     start: ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 65536))) */
  /*     end:   ((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 90112))) */
  LL_ATON_Cache_MCU_Invalidate_Range(((uintptr_t)(ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x342e0000UL + 65536))) /* Equivalent hex address = 0x342f0000UL */, 24576);

  static const LL_ATON_EnableUnits_InitTypeDef Enable_epoch_85_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_85_all_units, 2);

}

static void LL_ATON_End_EpochBlock_85(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_85[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Identity_inserted_id856 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
  };


  /* epoch=85 */
  LL_Switch_Deinit(switch_deinit_in_85, 1);

  static const LL_ATON_DisableUnits_InitTypeDef Disable_epoch_85_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_85_all_units, 2);

}


/* scheduling epoch=86   nodes=1   ------------------------------------------------------------------- */

/* scheduling DONE                 ------------------------------------------------------------------- */

const EpochBlock_ItemTypeDef *LL_ATON_EpochBlockItems_Default(void) {

  static const EpochBlock_ItemTypeDef ll_atonn_rt_epoch_block_array[] = {
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_2,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_sw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 2,
      .last_epoch_num = 2,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_3,
      .end_epoch_block = LL_ATON_End_EpochBlock_3,
      .wait_mask = 0x00000020,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 3,
      .last_epoch_num = 3,
      .in_streng_mask = 0x00000010,
      .out_streng_mask = 0x00000020,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_4,
      .end_epoch_block = LL_ATON_End_EpochBlock_4,
      .wait_mask = 0x00000210,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 4,
      .last_epoch_num = 4,
      .in_streng_mask = 0x000000ad,
      .out_streng_mask = 0x00000210,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_5,
      .end_epoch_block = LL_ATON_End_EpochBlock_5,
      .wait_mask = 0x00000040,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 5,
      .last_epoch_num = 5,
      .in_streng_mask = 0x00000001,
      .out_streng_mask = 0x00000040,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_6,
      .end_epoch_block = LL_ATON_End_EpochBlock_6,
      .wait_mask = 0x00000001,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 6,
      .last_epoch_num = 6,
      .in_streng_mask = 0x00000060,
      .out_streng_mask = 0x00000001,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_7,
      .end_epoch_block = LL_ATON_End_EpochBlock_7,
      .wait_mask = 0x00000044,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 7,
      .last_epoch_num = 7,
      .in_streng_mask = 0x00000290,
      .out_streng_mask = 0x00000044,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_8,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 8,
      .last_epoch_num = 8,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_9,
      .end_epoch_block = LL_ATON_End_EpochBlock_9,
      .wait_mask = 0x0000000a,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 9,
      .last_epoch_num = 9,
      .in_streng_mask = 0x00000151,
      .out_streng_mask = 0x0000000a,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_10,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 10,
      .last_epoch_num = 10,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_11,
      .end_epoch_block = LL_ATON_End_EpochBlock_11,
      .wait_mask = 0x00000001,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 11,
      .last_epoch_num = 11,
      .in_streng_mask = 0x00000200,
      .out_streng_mask = 0x00000001,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_12,
      .end_epoch_block = LL_ATON_End_EpochBlock_12,
      .wait_mask = 0x00000300,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 12,
      .last_epoch_num = 12,
      .in_streng_mask = 0x00000006,
      .out_streng_mask = 0x00000300,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_13,
      .end_epoch_block = LL_ATON_End_EpochBlock_13,
      .wait_mask = 0x00000050,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 13,
      .last_epoch_num = 13,
      .in_streng_mask = 0x000000a2,
      .out_streng_mask = 0x00000050,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_14,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 14,
      .last_epoch_num = 14,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_15,
      .end_epoch_block = LL_ATON_End_EpochBlock_15,
      .wait_mask = 0x0000000a,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 15,
      .last_epoch_num = 15,
      .in_streng_mask = 0x00000351,
      .out_streng_mask = 0x0000000a,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_16,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 16,
      .last_epoch_num = 16,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_17,
      .end_epoch_block = LL_ATON_End_EpochBlock_17,
      .wait_mask = 0x00000080,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 17,
      .last_epoch_num = 17,
      .in_streng_mask = 0x00000001,
      .out_streng_mask = 0x00000080,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_18,
      .end_epoch_block = LL_ATON_End_EpochBlock_18,
      .wait_mask = 0x00000110,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 18,
      .last_epoch_num = 18,
      .in_streng_mask = 0x00000024,
      .out_streng_mask = 0x00000110,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_19,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 19,
      .last_epoch_num = 19,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_20,
      .end_epoch_block = LL_ATON_End_EpochBlock_20,
      .wait_mask = 0x00000204,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 20,
      .last_epoch_num = 20,
      .in_streng_mask = 0x000000e1,
      .out_streng_mask = 0x00000204,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_21,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 21,
      .last_epoch_num = 21,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_22,
      .end_epoch_block = LL_ATON_End_EpochBlock_22,
      .wait_mask = 0x00000024,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 22,
      .last_epoch_num = 22,
      .in_streng_mask = 0x00000149,
      .out_streng_mask = 0x00000024,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_23,
      .end_epoch_block = LL_ATON_End_EpochBlock_23,
      .wait_mask = 0x00000202,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 23,
      .last_epoch_num = 23,
      .in_streng_mask = 0x00000104,
      .out_streng_mask = 0x00000202,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_24,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 24,
      .last_epoch_num = 24,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_25,
      .end_epoch_block = LL_ATON_End_EpochBlock_25,
      .wait_mask = 0x00000300,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 25,
      .last_epoch_num = 25,
      .in_streng_mask = 0x0000001d,
      .out_streng_mask = 0x00000300,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_26,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 26,
      .last_epoch_num = 26,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_27,
      .end_epoch_block = LL_ATON_End_EpochBlock_27,
      .wait_mask = 0x00000042,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 27,
      .last_epoch_num = 27,
      .in_streng_mask = 0x00000185,
      .out_streng_mask = 0x00000042,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_28,
      .end_epoch_block = LL_ATON_End_EpochBlock_28,
      .wait_mask = 0x00000041,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 28,
      .last_epoch_num = 28,
      .in_streng_mask = 0x00000208,
      .out_streng_mask = 0x00000041,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_29,
      .end_epoch_block = LL_ATON_End_EpochBlock_29,
      .wait_mask = 0x00000082,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 29,
      .last_epoch_num = 29,
      .in_streng_mask = 0x0000002c,
      .out_streng_mask = 0x00000082,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_30,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 30,
      .last_epoch_num = 30,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_31,
      .end_epoch_block = LL_ATON_End_EpochBlock_31,
      .wait_mask = 0x000000a0,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 31,
      .last_epoch_num = 31,
      .in_streng_mask = 0x00000155,
      .out_streng_mask = 0x000000a0,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_32,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 32,
      .last_epoch_num = 32,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_33,
      .end_epoch_block = LL_ATON_End_EpochBlock_33,
      .wait_mask = 0x00000080,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 33,
      .last_epoch_num = 33,
      .in_streng_mask = 0x00000001,
      .out_streng_mask = 0x00000080,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_34,
      .end_epoch_block = LL_ATON_End_EpochBlock_34,
      .wait_mask = 0x00000140,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 34,
      .last_epoch_num = 34,
      .in_streng_mask = 0x00000003,
      .out_streng_mask = 0x00000140,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_35,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 35,
      .last_epoch_num = 35,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_36,
      .end_epoch_block = LL_ATON_End_EpochBlock_36,
      .wait_mask = 0x00000280,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 36,
      .last_epoch_num = 36,
      .in_streng_mask = 0x0000001b,
      .out_streng_mask = 0x00000280,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_37,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 37,
      .last_epoch_num = 37,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_38,
      .end_epoch_block = LL_ATON_End_EpochBlock_38,
      .wait_mask = 0x00000018,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 38,
      .last_epoch_num = 38,
      .in_streng_mask = 0x00000103,
      .out_streng_mask = 0x00000018,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_39,
      .end_epoch_block = LL_ATON_End_EpochBlock_39,
      .wait_mask = 0x00000021,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 39,
      .last_epoch_num = 39,
      .in_streng_mask = 0x00000044,
      .out_streng_mask = 0x00000021,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_40,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 40,
      .last_epoch_num = 40,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_41,
      .end_epoch_block = LL_ATON_End_EpochBlock_41,
      .wait_mask = 0x00000050,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 41,
      .last_epoch_num = 41,
      .in_streng_mask = 0x00000189,
      .out_streng_mask = 0x00000050,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_42,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 42,
      .last_epoch_num = 42,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_43,
      .end_epoch_block = LL_ATON_End_EpochBlock_43,
      .wait_mask = 0x00000060,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 43,
      .last_epoch_num = 43,
      .in_streng_mask = 0x0000031e,
      .out_streng_mask = 0x00000060,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_44,
      .end_epoch_block = LL_ATON_End_EpochBlock_44,
      .wait_mask = 0x00000102,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 44,
      .last_epoch_num = 44,
      .in_streng_mask = 0x00000201,
      .out_streng_mask = 0x00000102,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_45,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 45,
      .last_epoch_num = 45,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_46,
      .end_epoch_block = LL_ATON_End_EpochBlock_46,
      .wait_mask = 0x00000120,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 46,
      .last_epoch_num = 46,
      .in_streng_mask = 0x0000020e,
      .out_streng_mask = 0x00000120,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_47,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 47,
      .last_epoch_num = 47,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_48,
      .end_epoch_block = LL_ATON_End_EpochBlock_48,
      .wait_mask = 0x00000101,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 48,
      .last_epoch_num = 48,
      .in_streng_mask = 0x000000fc,
      .out_streng_mask = 0x00000101,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_49,
      .end_epoch_block = LL_ATON_End_EpochBlock_49,
      .wait_mask = 0x0000000c,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 49,
      .last_epoch_num = 49,
      .in_streng_mask = 0x00000300,
      .out_streng_mask = 0x0000000c,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_50,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 50,
      .last_epoch_num = 50,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_51,
      .end_epoch_block = LL_ATON_End_EpochBlock_51,
      .wait_mask = 0x00000041,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 51,
      .last_epoch_num = 51,
      .in_streng_mask = 0x00000286,
      .out_streng_mask = 0x00000041,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_52,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 52,
      .last_epoch_num = 52,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_53,
      .end_epoch_block = LL_ATON_End_EpochBlock_53,
      .wait_mask = 0x00000022,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 53,
      .last_epoch_num = 53,
      .in_streng_mask = 0x00000389,
      .out_streng_mask = 0x00000022,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_54,
      .end_epoch_block = LL_ATON_End_EpochBlock_54,
      .wait_mask = 0x00000108,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 54,
      .last_epoch_num = 54,
      .in_streng_mask = 0x00000041,
      .out_streng_mask = 0x00000108,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_55,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 55,
      .last_epoch_num = 55,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_56,
      .end_epoch_block = LL_ATON_End_EpochBlock_56,
      .wait_mask = 0x00000108,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 56,
      .last_epoch_num = 56,
      .in_streng_mask = 0x00000226,
      .out_streng_mask = 0x00000108,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_57,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 57,
      .last_epoch_num = 57,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_58,
      .end_epoch_block = LL_ATON_End_EpochBlock_58,
      .wait_mask = 0x00000140,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 58,
      .last_epoch_num = 58,
      .in_streng_mask = 0x000000bb,
      .out_streng_mask = 0x00000140,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_59,
      .end_epoch_block = LL_ATON_End_EpochBlock_59,
      .wait_mask = 0x00000286,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 59,
      .last_epoch_num = 59,
      .in_streng_mask = 0x00000101,
      .out_streng_mask = 0x00000286,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_60,
      .end_epoch_block = LL_ATON_End_EpochBlock_60,
      .wait_mask = 0x00000048,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 60,
      .last_epoch_num = 60,
      .in_streng_mask = 0x000000a2,
      .out_streng_mask = 0x00000048,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_61,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 61,
      .last_epoch_num = 61,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_62,
      .end_epoch_block = LL_ATON_End_EpochBlock_62,
      .wait_mask = 0x00000010,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 62,
      .last_epoch_num = 62,
      .in_streng_mask = 0x00000389,
      .out_streng_mask = 0x00000010,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_63,
      .end_epoch_block = LL_ATON_End_EpochBlock_63,
      .wait_mask = 0x00000080,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 63,
      .last_epoch_num = 63,
      .in_streng_mask = 0x00000139,
      .out_streng_mask = 0x00000080,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_64,
      .end_epoch_block = LL_ATON_End_EpochBlock_64,
      .wait_mask = 0x00000014,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 64,
      .last_epoch_num = 64,
      .in_streng_mask = 0x000001e9,
      .out_streng_mask = 0x00000014,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_65,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_sw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 65,
      .last_epoch_num = 65,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_66,
      .end_epoch_block = LL_ATON_End_EpochBlock_66,
      .wait_mask = 0x00000110,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 66,
      .last_epoch_num = 66,
      .in_streng_mask = 0x00000049,
      .out_streng_mask = 0x00000110,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_67,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 67,
      .last_epoch_num = 67,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_68,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_sw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 68,
      .last_epoch_num = 68,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_69,
      .end_epoch_block = LL_ATON_End_EpochBlock_69,
      .wait_mask = 0x00000200,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 69,
      .last_epoch_num = 69,
      .in_streng_mask = 0x00000010,
      .out_streng_mask = 0x00000200,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_70,
      .end_epoch_block = LL_ATON_End_EpochBlock_70,
      .wait_mask = 0x00000054,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 70,
      .last_epoch_num = 70,
      .in_streng_mask = 0x00000188,
      .out_streng_mask = 0x00000054,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_71,
      .end_epoch_block = LL_ATON_End_EpochBlock_71,
      .wait_mask = 0x00000001,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 71,
      .last_epoch_num = 71,
      .in_streng_mask = 0x00000024,
      .out_streng_mask = 0x00000001,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_72,
      .end_epoch_block = LL_ATON_End_EpochBlock_72,
      .wait_mask = 0x00000022,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 72,
      .last_epoch_num = 72,
      .in_streng_mask = 0x000002cd,
      .out_streng_mask = 0x00000022,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_73,
      .end_epoch_block = LL_ATON_End_EpochBlock_73,
      .wait_mask = 0x00000200,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 73,
      .last_epoch_num = 73,
      .in_streng_mask = 0x00000084,
      .out_streng_mask = 0x00000200,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_74,
      .end_epoch_block = LL_ATON_End_EpochBlock_74,
      .wait_mask = 0x00000204,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 74,
      .last_epoch_num = 74,
      .in_streng_mask = 0x000001ba,
      .out_streng_mask = 0x00000204,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_75,
      .end_epoch_block = LL_ATON_End_EpochBlock_75,
      .wait_mask = 0x00000080,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 75,
      .last_epoch_num = 75,
      .in_streng_mask = 0x00000009,
      .out_streng_mask = 0x00000080,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_76,
      .end_epoch_block = LL_ATON_End_EpochBlock_76,
      .wait_mask = 0x00000022,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 76,
      .last_epoch_num = 76,
      .in_streng_mask = 0x0000039c,
      .out_streng_mask = 0x00000022,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_77,
      .end_epoch_block = LL_ATON_End_EpochBlock_77,
      .wait_mask = 0x00000010,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 77,
      .last_epoch_num = 77,
      .in_streng_mask = 0x00000081,
      .out_streng_mask = 0x00000010,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_78,
      .end_epoch_block = LL_ATON_End_EpochBlock_78,
      .wait_mask = 0x00000140,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 78,
      .last_epoch_num = 78,
      .in_streng_mask = 0x000000be,
      .out_streng_mask = 0x00000140,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_79,
      .end_epoch_block = LL_ATON_End_EpochBlock_79,
      .wait_mask = 0x00000108,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 79,
      .last_epoch_num = 79,
      .in_streng_mask = 0x00000267,
      .out_streng_mask = 0x00000108,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_80,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_sw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 80,
      .last_epoch_num = 80,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_81,
      .end_epoch_block = LL_ATON_End_EpochBlock_81,
      .wait_mask = 0x00000004,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 81,
      .last_epoch_num = 81,
      .in_streng_mask = 0x00000050,
      .out_streng_mask = 0x00000004,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_82,
      .end_epoch_block = LL_ATON_End_EpochBlock_82,
      .wait_mask = 0x00000002,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 82,
      .last_epoch_num = 82,
      .in_streng_mask = 0x00000100,
      .out_streng_mask = 0x00000002,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_83,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_sw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 83,
      .last_epoch_num = 83,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_85,
      .end_epoch_block = LL_ATON_End_EpochBlock_85,
      .wait_mask = 0x00000008,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 85,
      .last_epoch_num = 85,
      .in_streng_mask = 0x00000020,
      .out_streng_mask = 0x00000008,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .flags = EpochBlock_Flags_last_eb,
    },
  };


  return ll_atonn_rt_epoch_block_array;
}

const LL_Buffer_InfoTypeDef *LL_ATON_Input_Buffers_Info_Default(void)
{
  static const uint32_t buff_info__shape_1_128_128_3[] = { 1, 128, 3, 128 };
  static const uint32_t buff_info__mem_shape_F_1_128_128_3[] = { 1, 128, 128, 3 };
#if LL_ATON_DBG_BUFFER_INFO_EXCLUDED == 0
  static const uint32_t buff_info__shape_1[] = { 1, 1, 1, 1 };
  static const uint32_t buff_info__mem_shape_U_1[] = { 1 };
  static const uint32_t buff_info__shape_24_24_1_1[] = { 24, 1, 1, 24 };
  static const uint32_t buff_info__mem_shape_F_24_24_1_1[] = { 24, 24, 1, 1 };
  static const float buff_info_Conv2D_12_weights_quant_scale[] = { 0.00537109375, 0.00596318300813437, 0.00508273858577013, 0.00260672974400222, 0.00500199943780899, 0.00295467837713659, 0.0026528665330261, 0.00896592065691948, 0.00655527180060744, 0.0136564960703254, 0.0056709828786552, 0.00564022501930594, 0.0124415596947074, 0.0025009997189045, 0.00350832007825375, 0.0044560469686985, 0.005005843937397, 0.00313730305060744, 0.0068359375, 0.00354868965223432, 0.00722810020670295, 0.00468288641422987, 0.0062207798473537, 0.00406388426199555 };
  static const int16_t buff_info_Conv2D_12_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_28_24_1_1[] = { 28, 1, 1, 24 };
  static const uint32_t buff_info__mem_shape_F_28_24_1_1[] = { 28, 24, 1, 1 };
  static const float buff_info_Conv2D_26_weights_quant_scale[] = { 0.00170033366885036, 0.00239911419339478, 0.00232798652723432, 0.00271053775213659, 0.00331800570711493, 0.0021376721560955, 0.00172532454598695, 0.00663216644898057, 0.00227223802357912, 0.00419076019898057, 0.00215689581818879, 0.00408695265650749, 0.0046944203786552, 0.0018175981240347, 0.00233375374227762, 0.00187623035162687, 0.00252599036321044, 0.00350832007825375, 0.00234528793953359, 0.000926580978557467, 0.00116303213872015, 0.002320297062397, 0.00243756151758134, 0.00274129561148584, 0.00218188669532537, 0.00252214563079178, 0.00236835633404553, 0.00305656366981566 };
  static const int16_t buff_info_Conv2D_26_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_28_1_3_3[] = { 28, 3, 3, 1 };
  static const uint32_t buff_info__mem_shape_F_28_1_3_3[] = { 28, 1, 3, 3 };
  static const float buff_info_Conv2D_34_weights_quant_scale[] = { 0.0204693656414747, 0.015255905687809, 0.0111574186012149, 0.0131489913910627, 0.00871216785162687, 0.0112958289682865, 0.0159172005951405, 0.00673597445711493, 0.0170552413910627, 0.0116726132109761, 0.0189929865300655, 0.00981176178902388, 0.0107037397101521, 0.016962967813015, 0.0149329481646419, 0.0191160179674625, 0.0148714324459434, 0.0117033710703254, 0.00808932073414326, 0.0133950542658567, 0.017085999250412, 0.0163170527666807, 0.0153097314760089, 0.0107344975695014, 0.0149560160934925, 0.0154481418430805, 0.0257750991731882, 0.0107421875 };
  static const int16_t buff_info_Conv2D_34_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_32_28_1_1[] = { 32, 1, 1, 28 };
  static const uint32_t buff_info__mem_shape_M14_32_28_1_1[] = { 32, 2, 1, 1, 14 };
  static const float buff_info_Conv2D_37_weights_quant_scale[] = { 0.00196369807235897, 0.00208000116981566, 0.00153308780863881, 0.000970795401372015, 0.00164650741498917, 0.00295467837713659, 0.00276051927357912, 0.00143312464933842, 0.00127452937886119, 0.00183682178612798, 0.00336029776372015, 0.0025913508143276, 0.00182336522266269, 0.00129952013958246, 0.00202617491595447, 0.00117072160355747, 0.00146003777626902, 0.00546336732804775, 0.000563734152819961, 0.00115438143257052, 0.00281242304481566, 0.00248177605681121, 0.00275859679095447, 0.00198965007439256, 0.000919852696824819, 0.00188584218267351, 0.00175992713775486, 0.000617079844232649, 0.00111497298348695, 0.00155038910452276, 0.000498373701702803, 0.000989057938568294 };
  static const int16_t buff_info_Conv2D_37_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_36_32_1_1[] = { 36, 1, 1, 32 };
  static const uint32_t buff_info__mem_shape_M16_36_32_1_1[] = { 36, 2, 1, 1, 16 };
  static const float buff_info_Conv2D_55_weights_quant_scale[] = { 0.00137929839547724, 0.00318920705467463, 0.00123896566219628, 0.000768466270528734, 0.0019050658447668, 0.00106114661321044, 0.00150425231549889, 0.00190891057718545, 0.00134181219618767, 0.00211268151178956, 0.0022299459669739, 0.00229338393546641, 0.00235489965416491, 0.000888133596163243, 0.00123704329598695, 0.00173493637703359, 0.000824695511255413, 0.00697819283232093, 0.000680517987348139, 0.00081460305955261, 0.00137737602926791, 0.00159652589354664, 0.00152155361138284, 0.00200887373648584, 0.00105730188079178, 0.00131201557815075, 0.000869871117174625, 0.00196562032215297, 0.00096262531587854, 0.00101885455660522, 0.000931386894080788, 0.00118610053323209, 0.000923697429243475, 0.000570943055208772, 0.000827098439913243, 0.000857375736813992 };
  static const int16_t buff_info_Conv2D_55_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_36_1_3_3[] = { 36, 3, 3, 1 };
  static const uint32_t buff_info__mem_shape_F_36_1_3_3[] = { 36, 1, 3, 3 };
  static const float buff_info_Conv2D_66_weights_quant_scale[] = { 0.0128029650077224, 0.0147253321483731, 0.00867372006177902, 0.0121493600308895, 0.0100578246638179, 0.014525406062603, 0.0118648502975702, 0.0137180117890239, 0.010011687874794, 0.0113957924768329, 0.0133719854056835, 0.0118187135085464, 0.0148329846560955, 0.0143562378361821, 0.00765102123841643, 0.00925043039023876, 0.0149098793044686, 0.0206077750772238, 0.0112189343199134, 0.0127952760085464, 0.015871062874794, 0.00892747286707163, 0.015132874250412, 0.016486220061779, 0.0126261068508029, 0.0210999008268118, 0.0150482896715403, 0.0137795275077224, 0.0170706193894148, 0.0132028171792626, 0.018685407936573, 0.0180241148918867, 0.0177626721560955, 0.0208230800926685, 0.0162555370479822, 0.019638903439045 };
  static const int16_t buff_info_Conv2D_66_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_42_36_1_1[] = { 42, 1, 1, 36 };
  static const uint32_t buff_info__mem_shape_M18_42_36_1_1[] = { 42, 2, 1, 1, 18 };
  static const float buff_info_Conv2D_69_weights_quant_scale[] = { 0.00120532419532537, 0.00218380894511938, 0.00112458481453359, 0.00105634075589478, 0.00201848545111716, 0.00209538009949028, 0.00135815236717463, 0.00206462224014103, 0.00206269999034703, 0.00119282875675708, 0.00214920635335147, 0.00159748713485897, 0.00282780197449028, 0.00142255169339478, 0.00166284758597612, 0.00161094369832426, 0.000881405314430594, 0.00270477053709328, 0.00118033343460411, 0.00141486222855747, 0.00185316195711493, 0.00200887373648584, 0.00107748678419739, 0.00278935465030372, 0.00100924272555858, 0.00114861433394253, 0.0013427734375, 0.00128798594232649, 0.00117841106839478, 0.00227416027337313, 0.00151482527144253, 0.00124473276082426, 0.00129183067474514, 0.00050942727830261, 0.00113996374420822, 0.000764140917453915, 0.000777597480919212, 0.000572865421418101, 0.000908318441361189, 0.000438059418229386, 0.00048347533447668, 0.0013091319706291 };
  static const int16_t buff_info_Conv2D_69_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_42_1_3_3[] = { 42, 3, 3, 1 };
  static const uint32_t buff_info__mem_shape_F_42_1_3_3[] = { 42, 1, 3, 3 };
  static const float buff_info_Conv2D_77_weights_quant_scale[] = { 0.0108037032186985, 0.0147330220788717, 0.0122647024691105, 0.00798935815691948, 0.0148329846560955, 0.010503813624382, 0.0116649232804775, 0.021853469312191, 0.00950418319553137, 0.0170398615300655, 0.0112958289682865, 0.010980561375618, 0.015855684876442, 0.0103115774691105, 0.0152712846174836, 0.0138102853670716, 0.0149483270943165, 0.0164554622024298, 0.0115188239142299, 0.0129875121638179, 0.0160402320325375, 0.013433501124382, 0.0102269928902388, 0.0097041092813015, 0.019408218562603, 0.0186238922178745, 0.0104884346947074, 0.0131489913910627, 0.0155173474922776, 0.00953494105488062, 0.0185162406414747, 0.0126568647101521, 0.017209030687809, 0.0249292571097612, 0.017209030687809, 0.0217611957341433, 0.018439345061779, 0.0227454472333193, 0.0281126964837313, 0.0260826777666807, 0.0296044535934925, 0.0302042327821255 };
  static const int16_t buff_info_Conv2D_77_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_48_42_1_1[] = { 48, 1, 1, 42 };
  static const uint32_t buff_info__mem_shape_M21_48_42_1_1[] = { 48, 2, 1, 1, 21 };
  static const float buff_info_Conv2D_80_weights_quant_scale[] = { 0.000936192809604108, 0.00134373467881233, 0.00130240374710411, 0.000594492012169212, 0.00136007473338395, 0.00107075844425708, 0.00142831879202276, 0.00138891022652388, 0.00125146098434925, 0.00097175658447668, 0.00137353129684925, 0.0018175981240347, 0.00114092486910522, 0.000713198212906718, 0.00094147928757593, 0.00161863316316158, 0.000792015227489173, 0.000849205651320517, 0.00098329083994031, 0.000979446107521653, 0.000775194552261382, 0.00104576768353581, 0.000861701089888811, 0.00187334674410522, 0.00171955744735897, 0.000855453370604664, 0.00108805974014103, 0.00123896566219628, 0.00144562008790672, 0.00133796746376902, 0.00150713580660522, 0.00121493602637202, 0.000965508865192533, 0.000734344241209328, 0.000787209311965853, 0.00067619263427332, 0.000608429196290672, 0.000683401536662132, 0.00127452937886119, 0.000719926494639367, 0.000667061365675181, 0.000913604977540672, 0.000744436692912132, 0.000420758093241602, 0.000757893256377429, 0.000778558664023876, 0.000752606720197946, 0.000581035448703915 };
  static const int16_t buff_info_Conv2D_80_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_56_48_1_1[] = { 56, 1, 1, 48 };
  static const uint32_t buff_info__mem_shape_F_56_48_1_1[] = { 56, 48, 1, 1 };
  static const float buff_info_Conv2D_98_weights_quant_scale[] = { 0.00117072160355747, 0.00186757964547724, 0.00157730223145336, 0.000935231626499444, 0.002320297062397, 0.00190987170208246, 0.000781922833994031, 0.000920813879929483, 0.00154462200589478, 0.00101116509176791, 0.00164554629009217, 0.00123512092977762, 0.00170706200879067, 0.000928503344766796, 0.00120147946290672, 0.00181375339161605, 0.00130240374710411, 0.000671867339406163, 0.00121781951747835, 0.00114380847662687, 0.00131009321194142, 0.00111881771590561, 0.00105345714837313, 0.00186277378816158, 0.00130240374710411, 0.00148695101961493, 0.00182432634755969, 0.00117937219329178, 0.00105537951458246, 0.00146388250868767, 0.000874677032697946, 0.00160998245701194, 0.00219918810762465, 0.000535859842784703, 0.00106114661321044, 0.000805471849162132, 0.00075837381882593, 0.000700222211889923, 0.000728577142581344, 0.000754529086407274, 0.00107364205177873, 0.000521922658663243, 0.000558447674848139, 0.000561811786610633, 0.000457042769994587, 0.000654085422866046, 0.0010236605303362, 0.000607468013186008, 0.000393124064430594, 0.000404417980462313, 0.000506063166540116, 0.000613715732470155, 0.000315989105729386, 0.00058920553419739, 0.000362606486305594, 0.000300129555398598 };
  static const int16_t buff_info_Conv2D_98_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_64_56_1_1[] = { 64, 1, 1, 56 };
  static const uint32_t buff_info__mem_shape_M14_64_56_1_1[] = { 64, 4, 1, 1, 14 };
  static const float buff_info_Conv2D_112_weights_quant_scale[] = { 0.00108613737393171, 0.00131586031056941, 0.00162536138668656, 0.000980407232418656, 0.00265478901565075, 0.00115053670015186, 0.00185027834959328, 0.002320297062397, 0.00154846673831344, 0.0010371170938015, 0.00332185043953359, 0.00174070347566158, 0.000709834042936563, 0.00114284723531455, 0.00242602732032537, 0.00241641537286341, 0.000925619795452803, 0.00123031495604664, 0.00131778267677873, 0.00123127619735897, 0.00100539799313992, 0.00123223732225597, 0.00114765320904553, 0.0011591874063015, 0.00187719147652388, 0.00168495473917574, 0.00191467767581344, 0.00286624929867685, 0.00203770911321044, 0.00131682143546641, 0.00103038875386119, 0.00264902180060744, 0.00201656320132315, 0.00107556441798806, 0.000860739906784147, 0.000806913594715297, 0.000996747403405607, 0.00109959405381233, 0.00166957580950111, 0.000747800804674625, 0.00145811541005969, 0.0010236605303362, 0.000952532922383398, 0.000712237029802054, 0.000577190716285259, 0.000766543904319406, 0.00143793062306941, 0.00104288419242948, 0.000712237029802054, 0.00053537922212854, 0.00118129455950111, 0.000837671454064548, 0.000489723053760827, 0.00052336446242407, 0.000485157390357926, 0.000425323727540672, 0.000253271864494309, 0.00112266244832426, 0.000376783951651305, 0.000304214598145336, 0.000125915044918656, 0.000303974287817255, 0.00052817037794739, 0.000360924430424348 };
  static const int16_t buff_info_Conv2D_112_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_72_64_1_1[] = { 72, 1, 1, 64 };
  static const uint32_t buff_info__mem_shape_M16_72_64_1_1[] = { 72, 4, 1, 1, 16 };
  static const float buff_info_Conv2D_126_weights_quant_scale[] = { 0.00238565751351416, 0.00276436400599778, 0.00172436330467463, 0.0017974132206291, 0.000722329423297197, 0.00218573142774403, 0.00202809739857912, 0.00185989018063992, 0.00138698786031455, 0.00173685874324292, 0.000935712188947946, 0.00258173909969628, 0.000494528969284147, 0.00299312570132315, 0.000289316260023043, 0.00132354977540672, 0.00181086978409439, 0.00109767157118767, 0.00131105433683842, 0.00136776419822127, 0.00104576768353581, 0.00169456657022238, 0.0018925704061985, 0.00222417875193059, 0.000990980304777622, 0.00344103714451194, 0.00219342089258134, 0.00274129561148584, 0.002074234187603, 0.000956858217250556, 0.00120916892774403, 0.00131682143546641, 0.00155231147073209, 0.00155903969425708, 0.00157441862393171, 0.00102654402144253, 0.000766063283663243, 0.000923216808587313, 0.00144562008790672, 0.000921775063034147, 0.00193486246280372, 0.0012543445918709, 0.000668983731884509, 0.00324303330853581, 0.00213959463872015, 0.00139659969136119, 0.000991941429674625, 0.00121109129395336, 0.00126683991402388, 0.000490203616209328, 0.00122454785741866, 0.0020146407186985, 0.00074635905912146, 0.00101693219039589, 0.000945324019994587, 0.000591127900406718, 0.000405379163566977, 0.000808835960924625, 0.000991941429674625, 0.000569501251447946, 0.000219390145502985, 0.000596894999034703, 0.000489002151880413, 0.000723290606401861, 0.00068532390287146, 0.019777312874794, 0.000592089083511382, 0.000348429050063714, 0.000617560464888811, 0.000193798638065346, 0.000461127812741324, 0.000315508514177054 };
  static const int16_t buff_info_Conv2D_126_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_80_72_1_1[] = { 80, 1, 1, 72 };
  static const uint32_t buff_info__mem_shape_M24_80_72_1_1[] = { 80, 3, 1, 1, 24 };
  static const float buff_info_Conv2D_140_weights_quant_scale[] = { 0.00173589750193059, 0.00171186798252165, 0.00220111035741866, 0.0028681717813015, 0.00109959405381233, 0.00287970597855747, 0.00372746982611716, 0.00171379034873098, 0.00218380894511938, 0.00199349480681121, 0.000788170495070517, 0.00342950294725597, 0.00107556441798806, 0.00141293986234814, 0.00070646993117407, 0.00296429009176791, 0.00137064780574292, 0.00188295857515186, 0.000909279624465853, 0.00296621257439256, 0.00176857772748917, 0.00345449382439256, 0.00230299588292837, 0.0023798905313015, 0.00154366076458246, 0.00237796804867685, 0.002320297062397, 0.00131489906925708, 0.00220687757246196, 0.00136488070711493, 0.00244717346504331, 0.00226647080853581, 0.00201848545111716, 0.00179645209573209, 0.00254713650792837, 0.00148022267967463, 0.00139179383404553, 0.00144658121280372, 0.00334876356646419, 0.00139756093267351, 0.00238950224593282, 0.00185220071580261, 0.00130048138089478, 0.00105249602347612, 0.00188584218267351, 0.000784806383308023, 0.0010236605303362, 0.00202233018353581, 0.00152251473627985, 0.000676673254929483, 0.0012543445918709, 0.00158499169629067, 0.000775194552261382, 0.00191179406829178, 0.000635342323221266, 0.00176569423638284, 0.000449113023933023, 0.0010246216552332, 0.00146580499131233, 0.00065264361910522, 0.000364769162843004, 0.000742994889151305, 0.00116495450492948, 0.000969834218267351, 0.00142159045208246, 0.00148310628719628, 0.000529612123500556, 0.00088957539992407, 0.000678115000482649, 0.000494528969284147, 0.000892939511686563, 0.00037798544508405, 0.000206414173590019, 0.000364048260962591, 0.000374380993889645, 0.000267929921392351, 0.000687726831529289, 0.000143576791742817, 0.000428447587182745, 0.000251349498284981 };
  static const int16_t buff_info_Conv2D_140_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_88_80_1_1[] = { 88, 1, 1, 80 };
  static const uint32_t buff_info__mem_shape_M20_88_80_1_1[] = { 88, 4, 1, 1, 20 };
  static const float buff_info_Conv2D_154_weights_quant_scale[] = { 0.00313345831818879, 0.00223186821676791, 0.00244140625, 0.00204924331046641, 0.00171571271494031, 0.000707431114278734, 0.00316421617753804, 0.00190891057718545, 0.00186950201168656, 0.00218188669532537, 0.00256828241981566, 0.00239334697835147, 0.00110439991112798, 0.00146772735752165, 0.00048828125, 0.00184066651854664, 0.00208384590223432, 0.00199349480681121, 0.00147733918856829, 0.0012812577188015, 0.00401774747297168, 0.00219149840995669, 0.00139371620025486, 0.00320458598434925, 0.0012543445918709, 0.00222610123455524, 0.00248946552164853, 0.000765102100558579, 0.0012543445918709, 0.000660333083942533, 0.00295467837713659, 0.0013293168740347, 0.00267209019511938, 0.0014167845947668, 0.0027739757206291, 0.000775675114709884, 0.00140140566509217, 0.00143889174796641, 0.00165804161224514, 0.00181471451651305, 0.00195889221504331, 0.00281434552744031, 0.00169745017774403, 0.00262787588872015, 0.00317190564237535, 0.00186181254684925, 0.00186181254684925, 0.00185316195711493, 0.000448632432380691, 0.00136199709959328, 0.000632939394563437, 0.00273552839644253, 0.00138506549410522, 0.0015869140625, 0.000658891338389367, 0.00176088826265186, 0.000791534665040672, 0.00108133151661605, 0.00167245941702276, 0.000702625198755413, 0.00115438143257052, 0.00096262531587854, 0.000780000467784703, 0.00214536162093282, 0.00138602673541754, 0.00178107316605747, 0.0011591874063015, 0.00065264361910522, 0.00136584183201194, 0.000628614041488618, 0.000728096521925181, 0.00242794957011938, 0.000654565985314548, 0.000393844966311008, 0.000991941429674625, 0.000817006046418101, 0.00092033325927332, 0.000367652712156996, 0.000454639812232926, 0.000485637981910259, 0.000334491865942255, 0.00034746786695905, 0.000598336744587868, 0.000388077867683023, 0.000293881865218282, 0.000439741474110633, 0.000730018888134509, 0.000515194376930594 };
  static const int16_t buff_info_Conv2D_154_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_96_88_1_1[] = { 96, 1, 1, 88 };
  static const uint32_t buff_info__mem_shape_M22_96_88_1_1[] = { 96, 4, 1, 1, 22 };
  static const float buff_info_Conv2D_165_weights_quant_scale[] = { 0.000151025960803963, 0.000684362719766796, 0.000444547389633954, 0.00102269928902388, 0.000700222211889923, 0.000495009531732649, 0.000754529086407274, 0.000519039109349251, 0.000617560464888811, 0.000221793103264645, 0.000925139174796641, 0.000467615813249722, 0.000301811640383676, 0.000807874777819961, 0.000282587978290394, 0.000654565985314548, 0.000776636297814548, 0.00098329083994031, 0.000396968825953081, 0.000331368035404012, 0.000656007789075375, 0.000725212972611189, 0.000474824686534703, 0.000447430938947946, 0.000242458554566838, 0.000656968972180039, 0.00113035191316158, 0.000582477252464741, 0.000786248128861189, 0.000581035448703915, 0.000646395958028734, 0.000756932073272765, 0.00175896589644253, 0.000689168635290116, 0.000830462609883398, 0.000619963393546641, 0.00069253274705261, 0.000573826604522765, 0.000896303681656718, 0.000669464352540672, 0.00106306897941977, 0.00047890970017761, 0.000436377333244309, 0.000705989310517907, 0.000548835785593837, 0.000671867339406163, 0.000619482831098139, 0.000420517812017351, 0.000161478834343143, 0.000399612064938992, 0.000219270004890859, 0.000797782384324819, 0.000296765414532274, 0.000915046723093837, 0.000418835727032274, 0.000444787699962035, 0.000457763671875, 0.000382310769055039, 0.000377745134755969, 0.000561811786610633, 0.00042244017822668, 0.00048587829223834, 0.000606026209425181, 0.000193197891348973, 0.000466174038592726, 0.000607948575634509, 0.000656007789075375, 0.000248225667746738, 0.000470259052235633, 0.000271774653811008, 0.000551719393115491, 0.000517597363796085, 0.000221072215936147, 0.000255674822255969, 0.000522403279319406, 0.000389519642340019, 0.000319112936267629, 0.000218068526010029, 0.000390480825444683, 0.000261441920883954, 0.00029820718918927, 0.000304935470921919, 0.000331608316628262, 0.000293641583994031, 0.000649279507342726, 0.000240416033193469, 0.000409464206313714, 0.000187791243661195, 0.000215064821531996, 9.51571710174903e-05, 0.000568540068343282, 0.00032872476731427, 0.000491164799313992, 0.000473382911877707, 0.000270813470706344, 0.000210499201784842 };
  static const int16_t buff_info_Conv2D_165_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_96_96_1_1[] = { 96, 1, 1, 96 };
  static const uint32_t buff_info__mem_shape_M24_96_96_1_1[] = { 96, 4, 1, 1, 24 };
  static const float buff_info_Conv2D_180_weights_quant_scale[] = { 0.000696377479471266, 0.00115053670015186, 0.000724732410162687, 0.00107652554288507, 0.000769908016081899, 0.00095061055617407, 0.000371978036127985, 0.000716562324669212, 0.000824695511255413, 0.000425564008764923, 0.00103231112007052, 0.000970795401372015, 0.00030061014695093, 0.000970795401372015, 0.000416192488046363, 0.000820850778836757, 0.000846322102006525, 0.000782403396442533, 0.00057526835007593, 0.00100155326072127, 0.0010649913456291, 0.000556044687982649, 0.000650721252895892, 0.000499334884807467, 0.00043902060133405, 0.00161959428805858, 0.00159844825975597, 0.000988096697255969, 0.000821331341285259, 0.000203891060664319, 0.00056325359037146, 0.00167245941702276, 0.00149560160934925, 0.00102269928902388, 0.00176377187017351, 0.000970795401372015, 0.000930425710976124, 0.00150617468170822, 0.000513752631377429, 0.00144658121280372, 0.0015253983438015, 0.000764140917453915, 0.000685804465319961, 0.0010236605303362, 0.00102654402144253, 0.00138891022652388, 0.000441423559095711, 0.000646876520477235, 0.000284510344499722, 0.000666100182570517, 0.000201007511350326, 0.000755970890168101, 0.000577671336941421, 0.000883327680639923, 0.000546913419384509, 0.00104769004974514, 0.000296525133308023, 0.000407782121328637, 0.000838632637169212, 0.000790573481936008, 0.00080739421537146, 0.000369575078366324, 0.000582957814913243, 0.000384713726816699, 0.000457042769994587, 0.000475064967758954, 0.000749242608435452, 0.000438780291005969, 0.000823734328150749, 0.000267209019511938, 0.000544029870070517, 0.000943882274441421, 0.000349870824720711, 0.000374380993889645, 0.000578632520046085, 0.000718965311534703, 0.000861701089888811, 0.00062909466214478, 0.000800665933638811, 0.000397930009057745, 0.000268410512944683, 0.000731941254343837, 0.000495970714837313, 0.000320795021252707, 0.000898226047866046, 0.000200647074962035, 0.000495970714837313, 0.000935712188947946, 0.000850647455081344, 9.52172485995106e-05, 0.000758854439482093, 0.000239094413700514, 0.000477708235848695, 0.000823253707494587, 0.00046473226393573, 0.000361885613529012 };
  static const int16_t buff_info_Conv2D_180_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_191_weights_quant_scale[] = { 0.00128798594232649, 0.00110343878623098, 0.000652163056656718, 0.00169168307911605, 0.000721848860848695, 0.000544029870070517, 0.0013908325927332, 0.00150521344039589, 0.00269323633983731, 0.000734344241209328, 0.00130048138089478, 0.000475064967758954, 0.000472662009997293, 0.000935231626499444, 0.000728577142581344, 0.00148310628719628, 0.00060554564697668, 0.000949168752413243, 0.000716562324669212, 0.000928983907215297, 8.45240792841651e-05, 0.000741553143598139, 0.00126972352154553, 0.000865065201651305, 9.36553260544315e-05, 0.000331848626956344, 0.000755490269511938, 0.00081220013089478, 0.000678595621138811, 0.000678115000482649, 0.00109478808008134, 0.00138602673541754, 0.000709834042936563, 0.00221072230488062, 0.00113131303805858, 0.000948688189964741, 0.000776155735366046, 0.000821331341285259, 0.000597856182139367, 0.00138698786031455, 0.000967911852058023, 0.00038975992356427, 0.000806913594715297, 0.000846322102006525, 0.00126395642291754, 0.000656968972180039, 0.00142159045208246, 0.000984251964837313, 0.000286913302261382, 0.000801146496087313, 0.000176377187017351, 0.000522403279319406, 0.000264085188973695, 0.00124569388572127, 0.00101308745797724, 0.000730980071239173, 0.000748761987779289, 0.00105537951458246, 0.000582477252464741, 0.00154942786321044, 0.00117648870218545, 0.000545471673831344, 0.00146868848241866, 0.00106595258694142, 0.000933309260290116, 0.00126683991402388, 0.000871312920935452, 0.000491885701194406, 0.000933789822738618, 0.000958300021011382, 0.000830462609883398, 0.0010246216552332, 0.00112266244832426, 0.000809316581580788, 0.00102173816412687, 0.000585841364227235, 0.000197042623767629, 0.000638706493191421, 0.000853050383739173, 0.000334251584718004, 0.000572384800761938, 0.000494048348627985, 0.000315748795401305, 0.000368133303709328, 0.000691571563947946, 0.000762218551244587, 0.000359963247319683, 0.000439501192886382, 0.000294602767098695, 0.000398650881834328, 0.000482754432596266, 0.000478429108625278, 0.000361885613529012, 0.000620924576651305, 0.000396247924072668, 0.000559889420401305 };
  static const int16_t buff_info_Conv2D_191_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_202_weights_quant_scale[] = { 0.000322717387462035, 0.000624769309069961, 0.000439501192886382, 0.00179837446194142, 0.000935231626499444, 0.00188680330757052, 0.000756932073272765, 0.00146292138379067, 0.00167149817571044, 0.000680037366691977, 0.000327042711433023, 0.00126011169049889, 0.000382070458726957, 0.000112518551759422, 0.000518077926244587, 0.000420517812017351, 0.00102654402144253, 0.0020146407186985, 0.00075356790330261, 0.000462088995845988, 0.000263124005869031, 0.000692052184604108, 0.000949649373069406, 0.000663216633256525, 0.0008544921875, 0.000558447674848139, 0.000681479170452803, 0.000486599165014923, 0.00082854024367407, 0.00111881771590561, 0.00127164588775486, 0.000469057587906718, 0.000457283080322668, 0.00134661816991866, 0.00230299588292837, 0.000965989485848695, 0.00206077750772238, 0.000866026384755969, 0.00184547249227762, 0.00132354977540672, 0.000682440353557467, 0.00126107281539589, 0.00158787530381233, 0.000818928412627429, 0.00164266268257052, 0.000413068628404289, 0.00130048138089478, 0.000466174038592726, 0.000742514326702803, 0.00034266195143573, 0.000454880122561008, 0.00042484313598834, 0.000928022724110633, 0.000819889595732093, 0.00116399326361716, 0.000436377333244309, 0.000743475509807467, 0.000293641583994031, 0.000105730192444753, 0.00101789343170822, 0.000569981872104108, 0.000286192400380969, 0.00161190482322127, 0.00138122076168656, 0.000636784126982093, 0.000524806207977235, 0.000945804640650749, 0.00204347632825375, 0.000521442096214741, 0.000348669331287965, 0.00111016700975597, 0.00129759777337313, 0.000250868906732649, 0.00169456657022238, 0.00127837411127985, 0.000941959908232093, 0.000126635932247154, 0.00110151642002165, 0.000807874777819961, 0.000423881952883676, 0.000751645537093282, 0.000661774887703359, 0.000320795021252707, 0.00140525039751083, 0.000429889361839741, 0.000320554710924625, 0.000599297927692533, 0.000273456709692255, 0.00122935383114964, 0.000406340346671641, 0.000998669769614935, 0.000227440061280504, 0.000797301763668656, 0.000427486404078081, 0.00101597106549889, 0.000344344007316977 };
  static const int16_t buff_info_Conv2D_202_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_213_weights_quant_scale[] = { 0.000503179617226124, 0.000672828522510827, 0.00171955744735897, 0.00118321692571044, 0.000973678950686008, 0.00421382859349251, 0.000238493666984141, 0.0012543445918709, 0.000658410717733204, 0.000989057938568294, 1.55891957547283e-05, 0.00125626695808023, 0.00121685839258134, 0.000638706493191421, 0.00142255169339478, 0.00131393794436008, 0.000207976088859141, 0.000902551342733204, 0.000784325762651861, 0.000512310827616602, 2.46753843384795e-05, 0.0016205555293709, 0.0014513871865347, 0.00122935383114964, 0.000213022300158627, 0.000756932073272765, 0.00118994526565075, 0.00260865222662687, 0.00107556441798806, 0.000284510344499722, 0.00156096206046641, 0.000433974375482649, 0.000583438435569406, 0.00466366251930594, 0.00226647080853581, 0.00050221843412146, 0.000501737813465297, 4.47250713477843e-05, 0.00212998269125819, 0.000581035448703915, 0.000725693593267351, 0.000519519730005413, 0.00117072160355747, 0.00156288442667574, 0.002074234187603, 0.000178059257450514, 0.00185989018063992, 0.000638225872535259, 0.00102173816412687, 0.000444307108409703, 0.000133244073367678, 0.00128606357611716, 0.000175295848748647, 0.000755009707063437, 0.000590647279750556, 0.000154750552610494, 0.00286048231646419, 8.98706639418378e-05, 0.00042027750168927, 0.000543068686965853, 0.00127452937886119, 4.10605607612524e-05, 0.00302003882825375, 0.000785286945756525, 0.000785286945756525, 0.000574787787627429, 0.00122166436631233, 0.00299504795111716, 0.0010236605303362, 0.000506063166540116, 0.00244140625, 0.00420229462906718, 0.00148022267967463, 0.00148983451072127, 0.00281626777723432, 0.00297390203922987, 7.17883958714083e-05, 0.00202617491595447, 0.000266968738287687, 0.00163977919146419, 0.000275859696557745, 0.0035679133143276, 0.000919852696824819, 0.00215881830081344, 0.000332329218508676, 0.00107652554288507, 0.00119378999806941, 0.000931386894080788, 0.000869390554726124, 0.000918410893063992, 0.00231453008018434, 0.000299168372293934, 0.000560850603505969, 0.000797301763668656, 0.00195696973241866, 0.00103615585248917 };
  static const int16_t buff_info_Conv2D_213_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__mem_shape_F_96_96_1_1[] = { 96, 96, 1, 1 };
  static const float buff_info_Conv2D_220_weights_quant_scale[] = { 0.0341104827821255, 0.0376168787479401, 0.092273622751236, 0.0922121033072472, 0.0473363697528839, 0.0417999513447285, 0.0301119592040777, 0.0335260815918446, 0.04419906437397, 0.0375553630292416, 0.044568158686161, 0.034541092813015, 0.0850147604942322, 0.0561946369707584, 0.0579170770943165, 0.0543799214065075, 0.0390625, 0.0383858270943165, 0.079970471560955, 0.0799089595675468, 0.0533956699073315, 0.0441683083772659, 0.0350024588406086, 0.0365403555333614, 0.0487819872796535, 0.0369402058422565, 0.049673967063427, 0.0377399101853371, 0.084830217063427, 0.0680364146828651, 0.063115157186985, 0.0679749026894569, 0.0396469011902809, 0.044076032936573, 0.0877214595675468, 0.0877214595675468, 0.059947095811367, 0.0451218001544476, 0.0379859730601311, 0.0390932597219944, 0.0536109730601311, 0.0401082672178745, 0.055425688624382, 0.039677657186985, 0.0908587574958801, 0.0785556137561798, 0.0680979341268539, 0.0800935029983521, 0.049304872751236, 0.0535187013447285, 0.102116145193577, 0.102054625749588, 0.0666830688714981, 0.0502276085317135, 0.0553334169089794, 0.0410002470016479, 0.0558255426585674, 0.0425688959658146, 0.059578001499176, 0.0440452769398689, 0.0981176197528839, 0.086183562874794, 0.0855068862438202, 0.087536908686161, 0.0691436976194382, 0.0545952245593071, 0.119340553879738, 0.119340553879738, 0.0752952769398689, 0.0600393712520599, 0.0747416317462921, 0.0541030988097191, 0.0847686976194382, 0.049427904188633, 0.0779404491186142, 0.0492433570325375, 0.0980561003088951, 0.0846456661820412, 0.0981791317462921, 0.091904528439045, 0.087290845811367, 0.0607468001544476, 0.111774116754532, 0.112204723060131, 0.0853838548064232, 0.0603777058422565, 0.104207679629326, 0.055302657186985, 0.100762791931629, 0.0557640269398689, 0.0877214595675468, 0.0508735254406929, 0.0769561976194382, 0.0791707709431648, 0.0824926197528839, 0.0868602395057678 };
  static const int16_t buff_info_Conv2D_220_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_6_96_1_1[] = { 6, 1, 1, 96 };
  static const uint32_t buff_info__mem_shape_M24_6_96_1_1[] = { 6, 4, 1, 1, 24 };
  static const float buff_info_Conv2D_229_weights_quant_scale[] = { 0.161417320370674, 0.185900583863258, 0.20103345811367, 0.213459640741348, 0.298228353261948, 0.237204730510712 };
  static const int16_t buff_info_Conv2D_229_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_32_88_1_1[] = { 32, 1, 1, 88 };
  static const uint32_t buff_info__mem_shape_M22_32_88_1_1[] = { 32, 4, 1, 1, 22 };
  static const float buff_info_Conv2D_238_weights_quant_scale[] = { 0.0203001964837313, 0.028451032936573, 0.0322650112211704, 0.0322650112211704, 0.0385088585317135, 0.0419229827821255, 0.0257289614528418, 0.0283433813601732, 0.0339566916227341, 0.0331262312829494, 0.0271745808422565, 0.0353407971560955, 0.0446296744048595, 0.0453678630292416, 0.052134595811367, 0.0431532971560955, 0.025990404188633, 0.0270361714065075, 0.0538877956569195, 0.0538877956569195, 0.051396407186985, 0.0292814951390028, 0.0274360235780478, 0.037463091313839, 0.0346333645284176, 0.0444758869707584, 0.0289739165455103, 0.0487512312829494, 0.0544106774032116, 0.054318405687809, 0.0591166354715824, 0.0477054640650749 };
  static const int16_t buff_info_Conv2D_238_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_2_88_1_1[] = { 2, 1, 1, 88 };
  static const uint32_t buff_info__mem_shape_M22_2_88_1_1[] = { 2, 4, 1, 1, 22 };
  static const float buff_info_Conv2D_247_weights_quant_scale[] = { 0.0129183074459434, 0.0156788267195225 };
  static const int16_t buff_info_Conv2D_247_weights_quant_offset[] = { 0, 0 };
  static const float buff_info_Conv2D_4_zero_off_2_quant_scale[] = { 0.00392156885936856 };
  static const int16_t buff_info_Conv2D_4_zero_off_2_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_24_1_1[] = { 1, 1, 1, 24 };
  static const uint32_t buff_info__mem_shape_M8_24_1_1[] = { 3, 1, 1, 8 };
  static const float buff_info_Conv2D_9_zero_off_11_quant_scale[] = { 0.0138769680634141 };
  static const int16_t buff_info_Conv2D_9_zero_off_11_quant_offset[] = { 0 };
  static const uint32_t buff_info__mem_shape_F_24_1_1[] = { 24, 1, 1 };
  static const float buff_info_Conv2D_23_zero_off_29_quant_scale[] = { 0.0200754459947348 };
  static const int16_t buff_info_Conv2D_23_zero_off_29_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_28_1_1[] = { 1, 1, 1, 28 };
  static const uint32_t buff_info__mem_shape_M14_28_1_1[] = { 2, 1, 1, 14 };
  static const float buff_info_Conv2D_34_zero_off_47_quant_scale[] = { 0.0243262350559235 };
  static const int16_t buff_info_Conv2D_34_zero_off_47_quant_offset[] = { 0 };
  static const uint32_t buff_info__mem_shape_F_28_1_1[] = { 28, 1, 1 };
  static const uint32_t buff_info__shape_32_1_1[] = { 1, 1, 1, 32 };
  static const uint32_t buff_info__mem_shape_M16_32_1_1[] = { 2, 1, 1, 16 };
  static const float buff_info_Conv2D_52_zero_off_65_quant_scale[] = { 0.0397368408739567 };
  static const int16_t buff_info_Conv2D_52_zero_off_65_quant_offset[] = { 0 };
  static const uint32_t buff_info__mem_shape_M8_32_1_1[] = { 4, 1, 1, 8 };
  static const uint32_t buff_info__shape_36_1_1[] = { 1, 1, 1, 36 };
  static const uint32_t buff_info__mem_shape_M18_36_1_1[] = { 2, 1, 1, 18 };
  static const float buff_info_Conv2D_66_zero_off_83_quant_scale[] = { 0.0276320911943913 };
  static const int16_t buff_info_Conv2D_66_zero_off_83_quant_offset[] = { 0 };
  static const uint32_t buff_info__mem_shape_F_36_1_1[] = { 36, 1, 1 };
  static const uint32_t buff_info__shape_42_1_1[] = { 1, 1, 1, 42 };
  static const uint32_t buff_info__mem_shape_M21_42_1_1[] = { 2, 1, 1, 21 };
  static const float buff_info_Conv2D_77_zero_off_101_quant_scale[] = { 0.0269579831510782 };
  static const int16_t buff_info_Conv2D_77_zero_off_101_quant_offset[] = { 0 };
  static const uint32_t buff_info__mem_shape_F_42_1_1[] = { 42, 1, 1 };
  static const uint32_t buff_info__shape_48_1_1[] = { 1, 1, 1, 48 };
  static const uint32_t buff_info__mem_shape_M24_48_1_1[] = { 2, 1, 1, 24 };
  static const float buff_info_Conv2D_95_zero_off_119_quant_scale[] = { 0.0372552536427975 };
  static const int16_t buff_info_Conv2D_95_zero_off_119_quant_offset[] = { 0 };
  static const uint32_t buff_info__mem_shape_M8_48_1_1[] = { 6, 1, 1, 8 };
  static const uint32_t buff_info__shape_56_1_1[] = { 1, 1, 1, 56 };
  static const uint32_t buff_info__mem_shape_M14_56_1_1[] = { 4, 1, 1, 14 };
  static const float buff_info_Conv2D_109_zero_off_134_quant_scale[] = { 0.0415017157793045 };
  static const int16_t buff_info_Conv2D_109_zero_off_134_quant_offset[] = { 0 };
  static const uint32_t buff_info__mem_shape_M8_56_1_1[] = { 7, 1, 1, 8 };
  static const uint32_t buff_info__shape_64_1_1[] = { 1, 1, 1, 64 };
  static const uint32_t buff_info__mem_shape_M16_64_1_1[] = { 4, 1, 1, 16 };
  static const float buff_info_Conv2D_123_zero_off_152_quant_scale[] = { 0.0424482710659504 };
  static const int16_t buff_info_Conv2D_123_zero_off_152_quant_offset[] = { 0 };
  static const uint32_t buff_info__mem_shape_M8_64_1_1[] = { 8, 1, 1, 8 };
  static const uint32_t buff_info__shape_72_1_1[] = { 1, 1, 1, 72 };
  static const uint32_t buff_info__mem_shape_M24_72_1_1[] = { 3, 1, 1, 24 };
  static const float buff_info_Conv2D_137_zero_off_170_quant_scale[] = { 0.0304187368601561 };
  static const int16_t buff_info_Conv2D_137_zero_off_170_quant_offset[] = { 0 };
  static const uint32_t buff_info__mem_shape_M8_72_1_1[] = { 9, 1, 1, 8 };
  static const uint32_t buff_info__shape_80_1_1[] = { 1, 1, 1, 80 };
  static const uint32_t buff_info__mem_shape_M20_80_1_1[] = { 4, 1, 1, 20 };
  static const float buff_info_Conv2D_151_zero_off_188_quant_scale[] = { 0.036800492554903 };
  static const int16_t buff_info_Conv2D_151_zero_off_188_quant_offset[] = { 0 };
  static const uint32_t buff_info__mem_shape_M8_80_1_1[] = { 10, 1, 1, 8 };
  static const uint32_t buff_info__shape_88_1_1[] = { 1, 1, 1, 88 };
  static const uint32_t buff_info__mem_shape_M22_88_1_1[] = { 4, 1, 1, 22 };
  static const float buff_info_Conv2D_162_zero_off_206_quant_scale[] = { 0.0260655228048563 };
  static const int16_t buff_info_Conv2D_162_zero_off_206_quant_offset[] = { 0 };
  static const uint32_t buff_info__mem_shape_M8_88_1_1[] = { 11, 1, 1, 8 };
  static const uint32_t buff_info__shape_96_1_1[] = { 1, 1, 1, 96 };
  static const uint32_t buff_info__mem_shape_M24_96_1_1[] = { 4, 1, 1, 24 };
  static const float buff_info_Conv2D_177_zero_off_224_quant_scale[] = { 0.0281831510365009 };
  static const int16_t buff_info_Conv2D_177_zero_off_224_quant_offset[] = { 0 };
  static const uint32_t buff_info__mem_shape_M8_96_1_1[] = { 12, 1, 1, 8 };
  static const float buff_info_Conv2D_188_zero_off_242_quant_scale[] = { 0.0298720635473728 };
  static const int16_t buff_info_Conv2D_188_zero_off_242_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_199_zero_off_260_quant_scale[] = { 0.0283430349081755 };
  static const int16_t buff_info_Conv2D_199_zero_off_260_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_210_zero_off_278_quant_scale[] = { 0.0309466309845448 };
  static const int16_t buff_info_Conv2D_210_zero_off_278_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_220_zero_off_296_quant_scale[] = { 0.0229979231953621 };
  static const int16_t buff_info_Conv2D_220_zero_off_296_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_229_zero_off_305_quant_scale[] = { 0.0229979231953621 };
  static const int16_t buff_info_Conv2D_229_zero_off_305_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_6_1_1[] = { 1, 1, 1, 6 };
  static const uint32_t buff_info__mem_shape_F_6_1_1[] = { 6, 1, 1 };
  static const float buff_info_Conv2D_238_zero_off_314_quant_scale[] = { 0.0260655228048563 };
  static const int16_t buff_info_Conv2D_238_zero_off_314_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_247_zero_off_323_quant_scale[] = { 0.0260655228048563 };
  static const int16_t buff_info_Conv2D_247_zero_off_323_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_2_1_1[] = { 1, 1, 1, 2 };
  static const uint32_t buff_info__mem_shape_F_2_1_1[] = { 2, 1, 1 };
  static const uint32_t buff_info__shape_24_8_3_3[] = { 24, 3, 3, 8 };
  static const uint32_t buff_info__mem_shape_L_24_8_3_3[] = { 24, 3, 3, 8 };
  static const float buff_info_Conv2D_9_weights_inflated_331_quant_scale[] = { 0.00792784243822098, 0.0128721706569195, 0.0108267720788717, 0.0187315456569195, 0.010619156062603, 0.0172551665455103, 0.0149329481646419, 0.0204386077821255, 0.0225455220788717, 0.0327571369707584, 0.0116495443508029, 0.0189468506723642, 0.0203617122024298, 0.0156173100695014, 0.013056717813015, 0.0134796379134059, 0.0152789736166596, 0.020007997751236, 0.011841781437397, 0.0151251843199134, 0.0145177161321044, 0.0237297005951405, 0.025636687874794, 0.0175166092813015 };
  static const int16_t buff_info_Conv2D_9_weights_inflated_331_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_23_weights_inflated_333_quant_scale[] = { 0.0348179116845131, 0.0150636686012149, 0.0185931343585253, 0.0174858514219522, 0.0127106914296746, 0.0152251478284597, 0.0107344975695014, 0.0137487696483731, 0.0150406006723642, 0.0110343871638179, 0.0116649232804775, 0.00798166822642088, 0.0103423353284597, 0.0156480688601732, 0.0268054865300655, 0.0135411536321044, 0.0129798231646419, 0.0155481053516269, 0.00770484749227762, 0.0105960872024298, 0.0145792318508029, 0.0227608270943165, 0.0149329481646419, 0.0122570125386119 };
  static const int16_t buff_info_Conv2D_23_weights_inflated_333_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_32_8_3_3[] = { 32, 3, 3, 8 };
  static const uint32_t buff_info__mem_shape_L_32_8_3_3[] = { 32, 3, 3, 8 };
  static const float buff_info_Conv2D_52_weights_inflated_336_quant_scale[] = { 0.0120724653825164, 0.0107344975695014, 0.0110574560239911, 0.010003998875618, 0.0137026328593493, 0.017332062125206, 0.015625, 0.0114496182650328, 0.0105807082727551, 0.0191006399691105, 0.0208999756723642, 0.020515501499176, 0.0149944638833404, 0.0149560160934925, 0.00941190961748362, 0.0220226384699345, 0.0115649607032537, 0.0097733149304986, 0.0115342028439045, 0.0161478836089373, 0.0126722436398268, 0.0108882877975702, 0.02806656062603, 0.0242064464837313, 0.0148406745865941, 0.0171936508268118, 0.0182547979056835, 0.0141947586089373, 0.0254213828593493, 0.0234990157186985, 0.0227454472333193, 0.0189007129520178 };
  static const int16_t buff_info_Conv2D_52_weights_inflated_336_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_48_8_3_3[] = { 48, 3, 3, 8 };
  static const uint32_t buff_info__mem_shape_L_48_8_3_3[] = { 48, 3, 3, 8 };
  static const float buff_info_Conv2D_95_weights_inflated_340_quant_scale[] = { 0.0101424092426896, 0.00825848896056414, 0.0154635207727551, 0.00877368357032537, 0.0183316934853792, 0.0182855557650328, 0.010988250374794, 0.0123646650463343, 0.0180087350308895, 0.0128721706569195, 0.00792784243822098, 0.00991941429674625, 0.0174858514219522, 0.0132720228284597, 0.0114034814760089, 0.0110343871638179, 0.00858144648373127, 0.0115265129134059, 0.0192698072642088, 0.0154942786321044, 0.0147560900077224, 0.0146868852898479, 0.011234313249588, 0.00993479322642088, 0.00920429360121489, 0.0121416710317135, 0.0123108392581344, 0.0124876964837313, 0.0117956446483731, 0.021484375, 0.0177319142967463, 0.0157095845788717, 0.0130413388833404, 0.018931470811367, 0.0130951646715403, 0.0155481053516269, 0.017209030687809, 0.0181471463292837, 0.0179010834544897, 0.0314499251544476, 0.0156403798609972, 0.0191006399691105, 0.0194389764219522, 0.0268054865300655, 0.0224840063601732, 0.0233759842813015, 0.026128813624382, 0.030511811375618 };
  static const int16_t buff_info_Conv2D_95_weights_inflated_340_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_56_8_3_3[] = { 56, 3, 3, 8 };
  static const uint32_t buff_info__mem_shape_L_56_8_3_3[] = { 56, 3, 3, 8 };
  static const float buff_info_Conv2D_109_weights_inflated_342_quant_scale[] = { 0.015871062874794, 0.00848148390650749, 0.0128491017967463, 0.0078740157186985, 0.015732653439045, 0.0116264764219522, 0.00956569891422987, 0.0157787892967463, 0.0154250739142299, 0.00887364707887173, 0.0121570499613881, 0.0111574186012149, 0.0130336489528418, 0.00759335001930594, 0.0154865896329284, 0.017808809876442, 0.0132797118276358, 0.0242679622024298, 0.021592028439045, 0.00961183570325375, 0.0114265503361821, 0.0114265503361821, 0.0114034814760089, 0.0113650346174836, 0.0277589820325375, 0.00851224176585674, 0.0138794910162687, 0.0117264399304986, 0.011834092438221, 0.0143331689760089, 0.0089812995865941, 0.0138718010857701, 0.0148714324459434, 0.016716904938221, 0.0192236714065075, 0.0108344610780478, 0.0139563856646419, 0.012818343937397, 0.0112035553902388, 0.0185777563601732, 0.0117264399304986, 0.0169168300926685, 0.0250061508268118, 0.0194543544203043, 0.0149944638833404, 0.0236220471560955, 0.0169168300926685, 0.020023375749588, 0.0195004921406507, 0.0312653779983521, 0.0149252582341433, 0.0215612705796957, 0.0323880426585674, 0.029665969312191, 0.0210845228284597, 0.0232990887016058 };
  static const int16_t buff_info_Conv2D_109_weights_inflated_342_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_64_8_3_3[] = { 64, 3, 3, 8 };
  static const uint32_t buff_info__mem_shape_L_64_8_3_3[] = { 64, 3, 3, 8 };
  static const float buff_info_Conv2D_123_weights_inflated_344_quant_scale[] = { 0.0124723175540566, 0.0114111714065075, 0.0122877703979611, 0.00815852638334036, 0.0215612705796957, 0.0104730557650328, 0.00911970995366573, 0.0118264025077224, 0.0132028171792626, 0.0128337228670716, 0.0195004921406507, 0.0102961985394359, 0.0262057092040777, 0.0182701777666807, 0.0320189483463764, 0.0117110600695014, 0.02416031062603, 0.017931841313839, 0.017347440123558, 0.0066513903439045, 0.0147022642195225, 0.00582092767581344, 0.00855068862438202, 0.0133258486166596, 0.0190852601081133, 0.0123415971174836, 0.0109574925154448, 0.0179164614528418, 0.00713198212906718, 0.0139871435239911, 0.0116649232804775, 0.0189007129520178, 0.0125876599922776, 0.013556532561779, 0.0113265868276358, 0.0106883607804775, 0.0136103592813015, 0.0180394928902388, 0.0101039614528418, 0.015740342438221, 0.0127030024304986, 0.011103592813015, 0.0164554622024298, 0.0135334646329284, 0.0140717271715403, 0.0253752451390028, 0.0232990887016058, 0.0149637060239911, 0.0189776085317135, 0.0294968020170927, 0.0184547249227762, 0.0152328368276358, 0.0314653068780899, 0.0195466298609972, 0.018070250749588, 0.022591657936573, 0.0338336601853371, 0.017824187874794, 0.0166861470788717, 0.0301734749227762, 0.0460445359349251, 0.0251753199845552, 0.0205923970788717, 0.0237758364528418 };
  static const int16_t buff_info_Conv2D_123_weights_inflated_344_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_72_8_3_3[] = { 72, 3, 3, 8 };
  static const uint32_t buff_info__mem_shape_L_72_8_3_3[] = { 72, 3, 3, 8 };
  static const float buff_info_Conv2D_137_weights_inflated_346_quant_scale[] = { 0.0120032606646419, 0.0104346089065075, 0.00653989287093282, 0.0108267720788717, 0.0261903293430805, 0.0180394928902388, 0.0072588580660522, 0.027835875749588, 0.00862758327275515, 0.00893516279757023, 0.0181010086089373, 0.00845072604715824, 0.020869217813015, 0.011472687125206, 0.0320189483463764, 0.0148099167272449, 0.0205923970788717, 0.0115803396329284, 0.0117879556491971, 0.0112189343199134, 0.00915815681219101, 0.0167937986552715, 0.00915046781301498, 0.00810469966381788, 0.0168706942349672, 0.00994248315691948, 0.019177533686161, 0.0320189483463764, 0.0213459637016058, 0.0237758364528418, 0.0079970471560955, 0.0133412275463343, 0.0180394928902388, 0.00760103948414326, 0.00686285085976124, 0.010626845061779, 0.0134950168430805, 0.0169322099536657, 0.0147099532186985, 0.00791246350854635, 0.0100808935239911, 0.0120493974536657, 0.0141409328207374, 0.0122185656800866, 0.0118187135085464, 0.0202386807650328, 0.0208538379520178, 0.008666031062603, 0.0207154285162687, 0.0169937256723642, 0.0175935048609972, 0.013310469686985, 0.0195158701390028, 0.0159325785934925, 0.0177319142967463, 0.0175627451390028, 0.0234836377203465, 0.0189776085317135, 0.0220226384699345, 0.0217919535934925, 0.0282818656414747, 0.0126799335703254, 0.0205770172178745, 0.021730437874794, 0.0191467758268118, 0.0401390269398689, 0.030388779938221, 0.0347563959658146, 0.020623154938221, 0.0187776815146208, 0.0208384599536657, 0.029896654188633 };
  static const int16_t buff_info_Conv2D_137_weights_inflated_346_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_80_8_3_3[] = { 80, 3, 3, 8 };
  static const uint32_t buff_info__mem_shape_L_80_8_3_3[] = { 80, 3, 3, 8 };
  static const float buff_info_Conv2D_151_weights_inflated_348_quant_scale[] = { 0.0107498774304986, 0.020869217813015, 0.00725501356646419, 0.00591704621911049, 0.0156788267195225, 0.0113112078979611, 0.0156019311398268, 0.0157095845788717, 0.00737804500386119, 0.0267593506723642, 0.0115034449845552, 0.022960752248764, 0.0138025963678956, 0.0108882877975702, 0.0304502956569195, 0.0192082915455103, 0.0132335750386119, 0.009642593562603, 0.0124031128361821, 0.00528266467154026, 0.0116649232804775, 0.0238219741731882, 0.0160402320325375, 0.0184547249227762, 0.0246985722333193, 0.00679364521056414, 0.0136872539296746, 0.012579970061779, 0.0102808196097612, 0.025882750749588, 0.0198234505951405, 0.0100655145943165, 0.00933501496911049, 0.00527882017195225, 0.00638610357418656, 0.0100808935239911, 0.00941959861665964, 0.00961183570325375, 0.0141793796792626, 0.0130797857418656, 0.0216843020170927, 0.0115342028439045, 0.025267593562603, 0.00936577282845974, 0.0175166092813015, 0.00802780501544476, 0.0243756156414747, 0.00917353574186563, 0.0306809786707163, 0.0232529528439045, 0.0254060048609972, 0.0144946482032537, 0.0252983514219522, 0.0119955707341433, 0.0199464820325375, 0.00933501496911049, 0.0223763529211283, 0.024544782936573, 0.0155250364914536, 0.012579970061779, 0.013794906437397, 0.0175319872796535, 0.0113650346174836, 0.025621309876442, 0.0141870696097612, 0.0183778293430805, 0.0133566064760089, 0.0165015999227762, 0.0127798970788717, 0.0208999756723642, 0.0252522137016058, 0.0156480688601732, 0.0459215044975281, 0.0252368357032537, 0.0255597941577435, 0.0357406511902809, 0.0284664127975702, 0.025636687874794, 0.0379244573414326, 0.028189592063427 };
  static const int16_t buff_info_Conv2D_151_weights_inflated_348_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_88_8_3_3[] = { 88, 3, 3, 8 };
  static const uint32_t buff_info__mem_shape_L_88_8_3_3[] = { 88, 3, 3, 8 };
  static const float buff_info_Conv2D_162_weights_inflated_350_quant_scale[] = { 0.0130490278825164, 0.0124031128361821, 0.0216227862983942, 0.0152020789682865, 0.0192544292658567, 0.0104884346947074, 0.0111727975308895, 0.0110882138833404, 0.0191006399691105, 0.00922736246138811, 0.0232375729829073, 0.0153020424768329, 0.0431532971560955, 0.00737420050427318, 0.0199926178902388, 0.0157634112983942, 0.0353100411593914, 0.0143101010471582, 0.0154558317735791, 0.0153404893353581, 0.0124953864142299, 0.0121954968199134, 0.0166553892195225, 0.0127568282186985, 0.0158403050154448, 0.0106422239914536, 0.0101654771715403, 0.018423967063427, 0.018193282186985, 0.028189592063427, 0.0124953864142299, 0.0178549457341433, 0.0138794910162687, 0.0135642224922776, 0.0125030754134059, 0.0135027067735791, 0.0227454472333193, 0.00721272127702832, 0.027466781437397, 0.0108190821483731, 0.035525344312191, 0.0143024111166596, 0.028558686375618, 0.0151174953207374, 0.0146407475695014, 0.00951187219470739, 0.0107575664296746, 0.0237604584544897, 0.025021530687809, 0.0201925449073315, 0.0276513285934925, 0.0166861470788717, 0.0110190082341433, 0.0150559796020389, 0.0234375, 0.0136641850695014, 0.020992249250412, 0.0310962107032537, 0.0426919274032116, 0.0179933570325375, 0.00921967253088951, 0.0224071107804775, 0.0143562378361821, 0.0111189717426896, 0.0381705202162266, 0.0175473671406507, 0.013179749250412, 0.0227454472333193, 0.0141255538910627, 0.0187469236552715, 0.024790845811367, 0.00931963603943586, 0.0193313229829073, 0.0198080707341433, 0.0324187986552715, 0.018423967063427, 0.0165477357804775, 0.0185316186398268, 0.0204232279211283, 0.0218688491731882, 0.0335260815918446, 0.0294352862983942, 0.0160709898918867, 0.0282357279211283, 0.0193467028439045, 0.0435531511902809, 0.033679872751236, 0.0174243357032537 };
  static const int16_t buff_info_Conv2D_162_weights_inflated_350_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_96_8_3_3[] = { 96, 3, 3, 8 };
  static const uint32_t buff_info__mem_shape_L_96_8_3_3[] = { 96, 3, 3, 8 };
  static const float buff_info_Conv2D_177_weights_inflated_352_quant_scale[] = { 0.0256059300154448, 0.0191313978284597, 0.0110728349536657, 0.0128491017967463, 0.0305579472333193, 0.0234682578593493, 0.028435654938221, 0.0204847436398268, 0.0104346089065075, 0.0146561274304986, 0.0244832672178745, 0.018439345061779, 0.0213459637016058, 0.00841996818780899, 0.0266516972333193, 0.0101962350308895, 0.0217919535934925, 0.0135334646329284, 0.0138256642967463, 0.0149713950231671, 0.00950418319553137, 0.0165169779211283, 0.0290815699845552, 0.0190237443894148, 0.0294352862983942, 0.0139794535934925, 0.0175473671406507, 0.0241449307650328, 0.0247139520943165, 0.0273129921406507, 0.0199157241731882, 0.0096349036321044, 0.0141255538910627, 0.0101193403825164, 0.0199772398918867, 0.0154096949845552, 0.0213305857032537, 0.0137487696483731, 0.0270207915455103, 0.017824187874794, 0.0152482157573104, 0.0251906979829073, 0.0368479341268539, 0.0128875495865941, 0.00848917290568352, 0.00985789857804775, 0.024406373500824, 0.0312807597219944, 0.0237758364528418, 0.0196081455796957, 0.019054502248764, 0.0116418553516269, 0.0122954603284597, 0.016363188624382, 0.015978716313839, 0.021715059876442, 0.0201925449073315, 0.020869217813015, 0.056163877248764, 0.0142255164682865, 0.0223917327821255, 0.0167784206569195, 0.0248677413910627, 0.021007627248764, 0.0241449307650328, 0.0156711377203465, 0.0173166822642088, 0.0243294779211283, 0.019654281437397, 0.0143024111166596, 0.0206077750772238, 0.00978869386017323, 0.017470471560955, 0.0169937256723642, 0.0218842271715403, 0.0195466298609972, 0.0139410067349672, 0.017455093562603, 0.0253752451390028, 0.018562376499176, 0.0320189483463764, 0.0318959169089794, 0.0202079229056835, 0.030880905687809, 0.0372785441577435, 0.029912032186985, 0.019285187125206, 0.032849408686161, 0.0344488173723221, 0.0314037911593914, 0.0263133607804775, 0.0292199794203043, 0.0341412387788296, 0.0264363922178745, 0.0272053387016058, 0.0336183570325375 };
  static const int16_t buff_info_Conv2D_177_weights_inflated_352_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_188_weights_inflated_354_quant_scale[] = { 0.040784940123558, 0.011226624250412, 0.0155711732804775, 0.0201617870479822, 0.0151174953207374, 0.011357344686985, 0.0174243357032537, 0.0174397137016058, 0.00833538360893726, 0.0155404154211283, 0.0232683308422565, 0.01171875, 0.0235143955796957, 0.0102193038910627, 0.0227915849536657, 0.0203155763447285, 0.0159172005951405, 0.0149098793044686, 0.0407234244048595, 0.0308501478284597, 0.0124646285548806, 0.0151636321097612, 0.0182701777666807, 0.027097687125206, 0.0131951281800866, 0.0338336601853371, 0.0287739913910627, 0.0224071107804775, 0.0257750991731882, 0.019654281437397, 0.0121186021715403, 0.0120570864528418, 0.019884966313839, 0.014410063624382, 0.0272514764219522, 0.0125569021329284, 0.0281126964837313, 0.00905050430446863, 0.024652436375618, 0.0198542084544897, 0.0118264025077224, 0.0223763529211283, 0.0162862949073315, 0.0161940213292837, 0.0134027432650328, 0.0143024111166596, 0.0150559796020389, 0.0203617122024298, 0.019285187125206, 0.0194697342813015, 0.012203186750412, 0.0264056343585253, 0.00985789857804775, 0.0140486592426896, 0.0146407475695014, 0.0255444142967463, 0.01685531437397, 0.0276051927357912, 0.015978716313839, 0.0188545770943165, 0.02220718562603, 0.018793061375618, 0.019777312874794, 0.0114496182650328, 0.0147407110780478, 0.0153097314760089, 0.0185316186398268, 0.0194389764219522, 0.0166553892195225, 0.0387549214065075, 0.0255290362983942, 0.0196850392967463, 0.0388779528439045, 0.00517885712906718, 0.026251845061779, 0.0243602357804775, 0.0477669797837734, 0.0291123278439045, 0.0183316934853792, 0.027712844312191, 0.0238988678902388, 0.0373093001544476, 0.020884595811367, 0.0223148372024298, 0.0250984244048595, 0.034418061375618, 0.0174243357032537, 0.0237297005951405, 0.0239757634699345, 0.0303118843585253, 0.0303580220788717, 0.0221610479056835, 0.0332492627203465, 0.0199464820325375, 0.0148714324459434, 0.0298043806105852 };
  static const int16_t buff_info_Conv2D_188_weights_inflated_354_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_199_weights_inflated_356_quant_scale[] = { 0.0175166092813015, 0.0108729088678956, 0.0113419657573104, 0.0258519928902388, 0.0189622286707163, 0.00996555108577013, 0.0180394928902388, 0.0181163884699345, 0.03125, 0.0152174578979611, 0.028697095811367, 0.0131643703207374, 0.032726377248764, 0.0216535441577435, 0.0170552413910627, 0.0292661171406507, 0.0309577994048595, 0.02271468937397, 0.0150944264605641, 0.0175935048609972, 0.0145484739914536, 0.00870447792112827, 0.0193159449845552, 0.0148329846560955, 0.0208999756723642, 0.023191437125206, 0.021115280687809, 0.0119186760857701, 0.023806594312191, 0.0370324812829494, 0.0400159955024719, 0.025021530687809, 0.0340182073414326, 0.011357344686985, 0.015386626124382, 0.0136334272101521, 0.019162155687809, 0.0189929865300655, 0.0101962350308895, 0.017824187874794, 0.0251291822642088, 0.015732653439045, 0.0246985722333193, 0.0296352114528418, 0.0228684786707163, 0.0187776815146208, 0.0231145415455103, 0.032972440123558, 0.02466781437397, 0.020638532936573, 0.0356791354715824, 0.0222533214837313, 0.0354638285934925, 0.0309731792658567, 0.019638903439045, 0.0161325056105852, 0.0070204846560955, 0.00909664109349251, 0.0159172005951405, 0.0286355800926685, 0.00858913641422987, 0.0360789857804775, 0.0122339446097612, 0.0331877470016479, 0.0221764277666807, 0.022330217063427, 0.0332185029983521, 0.0111497296020389, 0.0294968020170927, 0.0159479584544897, 0.018670029938221, 0.011480376124382, 0.0145715428516269, 0.0249753929674625, 0.016593873500824, 0.0110805239528418, 0.0154096949845552, 0.022699311375618, 0.0172551665455103, 0.020269438624382, 0.0233606044203043, 0.0157941691577435, 0.0140486592426896, 0.0163170527666807, 0.0136872539296746, 0.0251906979829073, 0.0164554622024298, 0.0119417449459434, 0.0150713585317135, 0.0253291092813015, 0.0323265269398689, 0.0255905520170927, 0.016363188624382, 0.0323880426585674, 0.0186546500772238, 0.0203309543430805 };
  static const int16_t buff_info_Conv2D_199_weights_inflated_356_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_210_weights_inflated_358_quant_scale[] = { 0.0364173240959644, 0.0101424092426896, 0.0195466298609972, 0.017685778439045, 0.0295583177357912, 0.00960414577275515, 0.0116879921406507, 0.016716904938221, 0.00745878461748362, 0.0108190821483731, 0.0218996070325375, 0.00465981801971793, 0.017101377248764, 0.00844303611665964, 0.0101577881723642, 0.0171936508268118, 0.0326956212520599, 0.00547490175813437, 0.0124876964837313, 0.0165784936398268, 0.0238373521715403, 0.025036908686161, 0.0126491757109761, 0.0101577881723642, 0.0273591298609972, 0.0232375729829073, 0.0164247043430805, 0.00693590054288507, 0.0244986470788717, 0.0188238192349672, 0.00881982035934925, 0.0486281998455524, 0.0319266729056835, 0.00208769063465297, 0.019408218562603, 0.0319574326276779, 0.0407541841268539, 0.0443528555333614, 0.110051676630974, 0.0302042327821255, 0.0135872904211283, 0.025159940123558, 0.0139717645943165, 0.0445989184081554, 0.00521730445325375, 0.0158095471560955, 0.0168860722333193, 0.0120109496638179, 0.0324495583772659, 0.0369402058422565, 0.0105345714837313, 0.0156480688601732, 0.017701156437397, 0.0181010086089373, 0.0153404893353581, 0.0217611957341433, 0.00602854322642088, 0.0204232279211283, 0.0265132877975702, 0.0343257859349251, 0.00416384730488062, 0.0173781979829073, 0.010619156062603, 0.0191006399691105, 0.0204847436398268, 0.0115342028439045, 0.0171782728284597, 0.0146023007109761, 0.0108959767967463, 0.01830093562603, 0.016363188624382, 0.024175688624382, 0.0053672487847507, 0.00974255613982677, 0.013064406812191, 0.0068320925347507, 0.023668184876442, 0.017808809876442, 0.04419906437397, 0.0125876599922776, 0.0088505782186985, 0.00941959861665964, 0.0142255164682865, 0.00575941195711493, 0.0238834898918867, 0.0107344975695014, 0.0141486218199134, 0.00902743637561798, 0.013056717813015, 0.00679364521056414, 0.0156634468585253, 0.0293122548609972, 0.0103577142581344, 0.0416461601853371, 0.020377092063427, 0.0133950542658567 };
  static const int16_t buff_info_Conv2D_210_weights_inflated_358_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_24_3_3_5[] = { 24, 3, 5, 3 };
  static const uint32_t buff_info__mem_shape_L_24_3_3_5[] = { 24, 3, 5, 3 };
  static const float buff_info_Conv2D_4_weights_submask_0_0_0_0_24_3_3_5_359_quant_scale[] = { 0.000811238947790116, 0.00246062991209328, 0.00414462340995669, 0.000956377654802054, 0.00227800500579178, 0.00298351375386119, 0.000748761987779289, 0.00179645209573209, 0.00637841410934925, 0.00352946599014103, 0.00258750608190894, 0.00528650963678956, 0.00362558430060744, 0.00339682260528207, 0.00133700633887202, 0.00178684026468545, 0.000908318441361189, 0.000773272186052054, 0.00127164588775486, 0.00104576768353581, 0.00127164588775486, 0.00617464305832982, 0.00164266268257052, 0.0031411477830261 };
  static const int16_t buff_info_Conv2D_4_weights_submask_0_0_0_0_24_3_3_5_359_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_24_3_2_5[] = { 24, 2, 5, 3 };
  static const uint32_t buff_info__mem_shape_L_24_3_2_5[] = { 24, 2, 5, 3 };
  static const float buff_info_Conv2D_4_weights_submask_0_0_3_0_24_3_2_5_360_quant_scale[] = { 0.000811238947790116, 0.00246062991209328, 0.00414462340995669, 0.000956377654802054, 0.00227800500579178, 0.00298351375386119, 0.000748761987779289, 0.00179645209573209, 0.00637841410934925, 0.00352946599014103, 0.00258750608190894, 0.00528650963678956, 0.00362558430060744, 0.00339682260528207, 0.00133700633887202, 0.00178684026468545, 0.000908318441361189, 0.000773272186052054, 0.00127164588775486, 0.00104576768353581, 0.00127164588775486, 0.00617464305832982, 0.00164266268257052, 0.0031411477830261 };
  static const int16_t buff_info_Conv2D_4_weights_submask_0_0_3_0_24_3_2_5_360_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_64_1_1_1[] = { 64, 1, 1, 1 };
  static const uint32_t buff_info__mem_shape_F_64_1_1_1[] = { 64, 1, 1, 1 };
  static const uint32_t buff_info__shape_32_1_1_1[] = { 32, 1, 1, 1 };
  static const uint32_t buff_info__mem_shape_F_32_1_1_1[] = { 32, 1, 1, 1 };
  static const uint32_t buff_info__shape_16_1_1_1[] = { 16, 1, 1, 1 };
  static const uint32_t buff_info__mem_shape_F_16_1_1_1[] = { 16, 1, 1, 1 };
  static const uint32_t buff_info__shape_8_1_1_1[] = { 8, 1, 1, 1 };
  static const uint32_t buff_info__mem_shape_F_8_1_1_1[] = { 8, 1, 1, 1 };
#endif // LL_ATON_DBG_BUFFER_INFO_EXCLUDED == 0
  static const LL_Buffer_InfoTypeDef buff_info[] = {
    {
      .name = "Input_0_out_0",
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 0,
      .offset_end = 196608,
      .offset_limit = 196672,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_1_128_128_3,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 0,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FLOAT,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_1_128_128_3,
    },
#if LL_ATON_DBG_BUFFER_INFO_EXCLUDED == 0
    {
      .name = "Quantize_2_y_scale",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165744,
      .offset_end = 165748,
      .offset_limit = 165816,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 0,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FLOAT,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_1,
    },
    {
      .name = "Quantize_2_y_zero_point",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 166160,
      .offset_end = 166161,
      .offset_limit = 166232,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
    },
    {
      .name = "Conv2D_12_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 151872,
      .offset_end = 152448,
      .offset_limit = 152512,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_F_24_24_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_24_24_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_12_weights_quant_scale,
      .offset = buff_info_Conv2D_12_weights_quant_offset,
    },
    {
      .name = "Conv2D_26_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 151200,
      .offset_end = 151872,
      .offset_limit = 151936,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_F_28_24_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_28_24_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_26_weights_quant_scale,
      .offset = buff_info_Conv2D_26_weights_quant_offset,
    },
    {
      .name = "Conv2D_34_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 157264,
      .offset_end = 157516,
      .offset_limit = 157584,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_28_1_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_28_1_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_34_weights_quant_scale,
      .offset = buff_info_Conv2D_34_weights_quant_offset,
    },
    {
      .name = "Conv2D_37_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 149584,
      .offset_end = 150480,
      .offset_limit = 150544,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 14,
      .mem_shape = buff_info__mem_shape_M14_32_28_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_32_28_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_37_weights_quant_scale,
      .offset = buff_info_Conv2D_37_weights_quant_offset,
    },
    {
      .name = "Conv2D_55_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 147344,
      .offset_end = 148496,
      .offset_limit = 148560,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M16_36_32_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_36_32_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_55_weights_quant_scale,
      .offset = buff_info_Conv2D_55_weights_quant_offset,
    },
    {
      .name = "Conv2D_66_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 156064,
      .offset_end = 156388,
      .offset_limit = 156456,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_36_1_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_36_1_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_66_weights_quant_scale,
      .offset = buff_info_Conv2D_66_weights_quant_offset,
    },
    {
      .name = "Conv2D_69_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 145824,
      .offset_end = 147336,
      .offset_limit = 147400,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 18,
      .mem_shape = buff_info__mem_shape_M18_42_36_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_42_36_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_69_weights_quant_scale,
      .offset = buff_info_Conv2D_69_weights_quant_offset,
    },
    {
      .name = "Conv2D_77_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 155328,
      .offset_end = 155706,
      .offset_limit = 155776,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_42_1_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_42_1_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_77_weights_quant_scale,
      .offset = buff_info_Conv2D_77_weights_quant_offset,
    },
    {
      .name = "Conv2D_80_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 140352,
      .offset_end = 142368,
      .offset_limit = 142432,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 21,
      .mem_shape = buff_info__mem_shape_M21_48_42_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_48_42_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_80_weights_quant_scale,
      .offset = buff_info_Conv2D_80_weights_quant_offset,
    },
    {
      .name = "Conv2D_98_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 135360,
      .offset_end = 138048,
      .offset_limit = 138112,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 48,
      .mem_shape = buff_info__mem_shape_F_56_48_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_56_48_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_98_weights_quant_scale,
      .offset = buff_info_Conv2D_98_weights_quant_offset,
    },
    {
      .name = "Conv2D_112_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 125504,
      .offset_end = 129088,
      .offset_limit = 129152,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 14,
      .mem_shape = buff_info__mem_shape_M14_64_56_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_64_56_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_112_weights_quant_scale,
      .offset = buff_info_Conv2D_112_weights_quant_offset,
    },
    {
      .name = "Conv2D_126_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 116864,
      .offset_end = 121472,
      .offset_limit = 121536,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M16_72_64_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_72_64_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_126_weights_quant_scale,
      .offset = buff_info_Conv2D_126_weights_quant_offset,
    },
    {
      .name = "Conv2D_140_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 95552,
      .offset_end = 101312,
      .offset_limit = 101376,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_80_72_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_80_72_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_140_weights_quant_scale,
      .offset = buff_info_Conv2D_140_weights_quant_offset,
    },
    {
      .name = "Conv2D_154_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 54528,
      .offset_end = 61568,
      .offset_limit = 61632,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 20,
      .mem_shape = buff_info__mem_shape_M20_88_80_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_88_80_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_154_weights_quant_scale,
      .offset = buff_info_Conv2D_154_weights_quant_offset,
    },
    {
      .name = "Conv2D_165_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 46080,
      .offset_end = 54528,
      .offset_limit = 54592,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 22,
      .mem_shape = buff_info__mem_shape_M22_96_88_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_96_88_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_165_weights_quant_scale,
      .offset = buff_info_Conv2D_165_weights_quant_offset,
    },
    {
      .name = "Conv2D_180_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 0,
      .offset_end = 9216,
      .offset_limit = 9280,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_96_96_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_96_96_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_180_weights_quant_scale,
      .offset = buff_info_Conv2D_180_weights_quant_offset,
    },
    {
      .name = "Conv2D_191_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 9216,
      .offset_end = 18432,
      .offset_limit = 18496,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_96_96_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_96_96_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_191_weights_quant_scale,
      .offset = buff_info_Conv2D_191_weights_quant_offset,
    },
    {
      .name = "Conv2D_202_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 18432,
      .offset_end = 27648,
      .offset_limit = 27712,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_96_96_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_96_96_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_202_weights_quant_scale,
      .offset = buff_info_Conv2D_202_weights_quant_offset,
    },
    {
      .name = "Conv2D_213_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 27648,
      .offset_end = 36864,
      .offset_limit = 36928,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_96_96_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_96_96_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_213_weights_quant_scale,
      .offset = buff_info_Conv2D_213_weights_quant_offset,
    },
    {
      .name = "Conv2D_220_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 36864,
      .offset_end = 46080,
      .offset_limit = 46144,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 96,
      .mem_shape = buff_info__mem_shape_F_96_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_96_96_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_220_weights_quant_scale,
      .offset = buff_info_Conv2D_220_weights_quant_offset,
    },
    {
      .name = "Dequantize_227_x_scale",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165776,
      .offset_end = 165780,
      .offset_limit = 165848,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 0,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FLOAT,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_1,
    },
    {
      .name = "Dequantize_227_x_zero_point",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 166192,
      .offset_end = 166193,
      .offset_limit = 166264,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
    },
    {
      .name = "Conv2D_229_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 152448,
      .offset_end = 153024,
      .offset_limit = 153088,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_6_96_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_6_96_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_229_weights_quant_scale,
      .offset = buff_info_Conv2D_229_weights_quant_offset,
    },
    {
      .name = "Dequantize_236_x_scale",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165808,
      .offset_end = 165812,
      .offset_limit = 165880,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 0,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FLOAT,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_1,
    },
    {
      .name = "Dequantize_236_x_zero_point",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 166224,
      .offset_end = 166225,
      .offset_limit = 166296,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
    },
    {
      .name = "Conv2D_238_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 132544,
      .offset_end = 135360,
      .offset_limit = 135424,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 22,
      .mem_shape = buff_info__mem_shape_M22_32_88_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_32_88_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_238_weights_quant_scale,
      .offset = buff_info_Conv2D_238_weights_quant_offset,
    },
    {
      .name = "Dequantize_245_x_scale",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165760,
      .offset_end = 165764,
      .offset_limit = 165832,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 0,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FLOAT,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_1,
    },
    {
      .name = "Dequantize_245_x_zero_point",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 166176,
      .offset_end = 166177,
      .offset_limit = 166248,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
    },
    {
      .name = "Conv2D_247_weights",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 161152,
      .offset_end = 161328,
      .offset_limit = 161392,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 22,
      .mem_shape = buff_info__mem_shape_M22_2_88_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_2_88_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_247_weights_quant_scale,
      .offset = buff_info_Conv2D_247_weights_quant_offset,
    },
    {
      .name = "Dequantize_254_x_scale",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165792,
      .offset_end = 165796,
      .offset_limit = 165864,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 0,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FLOAT,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_1,
    },
    {
      .name = "Dequantize_254_x_zero_point",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 166208,
      .offset_end = 166209,
      .offset_limit = 166280,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
    },
    {
      .name = "Conv2D_4_zero_off_2",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165840,
      .offset_end = 165841,
      .offset_limit = 165912,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_4_zero_off_2_quant_scale,
      .offset = buff_info_Conv2D_4_zero_off_2_quant_offset,
    },
    {
      .name = "Conv2D_4_mul_scale_3",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165264,
      .offset_end = 165312,
      .offset_limit = 165376,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_24_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -15,
      .Qn = 30,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_24_1_1,
    },
    {
      .name = "Conv2D_4_off_bias_8",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 163744,
      .offset_end = 163840,
      .offset_limit = 163904,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_24_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_24_1_1,
    },
    {
      .name = "Conv2D_9_zero_off_11",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 166128,
      .offset_end = 166129,
      .offset_limit = 166200,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_9_zero_off_11_quant_scale,
      .offset = buff_info_Conv2D_9_zero_off_11_quant_offset,
    },
    {
      .name = "Conv2D_9_mul_scale_12",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165312,
      .offset_end = 165360,
      .offset_limit = 165424,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_24_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -11,
      .Qn = 26,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_24_1_1,
    },
    {
      .name = "Conv2D_9_off_bias_17",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165168,
      .offset_end = 165216,
      .offset_limit = 165280,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_24_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 6,
      .Qn = 9,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_24_1_1,
    },
    {
      .name = "Conv2D_12_mul_scale_21",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165360,
      .offset_end = 165408,
      .offset_limit = 165472,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_F_24_1_1,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = -9,
      .Qn = 24,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_24_1_1,
    },
    {
      .name = "Conv2D_12_off_bias_26",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 163648,
      .offset_end = 163744,
      .offset_limit = 163808,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_F_24_1_1,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_24_1_1,
    },
    {
      .name = "Conv2D_23_zero_off_29",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 166144,
      .offset_end = 166145,
      .offset_limit = 166216,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_23_zero_off_29_quant_scale,
      .offset = buff_info_Conv2D_23_zero_off_29_quant_offset,
    },
    {
      .name = "Conv2D_23_mul_scale_30",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165408,
      .offset_end = 165456,
      .offset_limit = 165520,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_24_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -10,
      .Qn = 25,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_24_1_1,
    },
    {
      .name = "Conv2D_23_off_bias_35",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165216,
      .offset_end = 165264,
      .offset_limit = 165328,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_24_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 6,
      .Qn = 9,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_24_1_1,
    },
    {
      .name = "Conv2D_26_mul_scale_39",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165040,
      .offset_end = 165096,
      .offset_limit = 165160,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 14,
      .mem_shape = buff_info__mem_shape_M14_28_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -10,
      .Qn = 25,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_28_1_1,
    },
    {
      .name = "Conv2D_26_off_bias_44",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 163200,
      .offset_end = 163312,
      .offset_limit = 163376,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 14,
      .mem_shape = buff_info__mem_shape_M14_28_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_28_1_1,
    },
    {
      .name = "Conv2D_34_zero_off_47",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165824,
      .offset_end = 165825,
      .offset_limit = 165896,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_34_zero_off_47_quant_scale,
      .offset = buff_info_Conv2D_34_zero_off_47_quant_offset,
    },
    {
      .name = "Conv2D_34_mul_scale_48",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165104,
      .offset_end = 165160,
      .offset_limit = 165224,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_28_1_1,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = -10,
      .Qn = 25,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_28_1_1,
    },
    {
      .name = "Conv2D_34_off_bias_53",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 164976,
      .offset_end = 165032,
      .offset_limit = 165096,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_28_1_1,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 8,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_28_1_1,
    },
    {
      .name = "Conv2D_37_mul_scale_57",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 164720,
      .offset_end = 164784,
      .offset_limit = 164848,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M16_32_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -10,
      .Qn = 25,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_32_1_1,
    },
    {
      .name = "Conv2D_37_off_bias_62",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 162560,
      .offset_end = 162688,
      .offset_limit = 162752,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M16_32_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_32_1_1,
    },
    {
      .name = "Conv2D_52_zero_off_65",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165888,
      .offset_end = 165889,
      .offset_limit = 165960,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_52_zero_off_65_quant_scale,
      .offset = buff_info_Conv2D_52_zero_off_65_quant_offset,
    },
    {
      .name = "Conv2D_52_mul_scale_66",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 164784,
      .offset_end = 164848,
      .offset_limit = 164912,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_32_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -9,
      .Qn = 24,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_32_1_1,
    },
    {
      .name = "Conv2D_52_off_bias_71",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 164656,
      .offset_end = 164720,
      .offset_limit = 164784,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_32_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 8,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_32_1_1,
    },
    {
      .name = "Conv2D_55_mul_scale_75",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 164496,
      .offset_end = 164568,
      .offset_limit = 164632,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 18,
      .mem_shape = buff_info__mem_shape_M18_36_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -9,
      .Qn = 24,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_36_1_1,
    },
    {
      .name = "Conv2D_55_off_bias_80",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 161984,
      .offset_end = 162128,
      .offset_limit = 162192,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 18,
      .mem_shape = buff_info__mem_shape_M18_36_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_36_1_1,
    },
    {
      .name = "Conv2D_66_zero_off_83",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165872,
      .offset_end = 165873,
      .offset_limit = 165944,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_66_zero_off_83_quant_scale,
      .offset = buff_info_Conv2D_66_zero_off_83_quant_offset,
    },
    {
      .name = "Conv2D_66_mul_scale_84",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 164576,
      .offset_end = 164648,
      .offset_limit = 164712,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_36_1_1,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = -10,
      .Qn = 25,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_36_1_1,
    },
    {
      .name = "Conv2D_66_off_bias_89",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 164416,
      .offset_end = 164488,
      .offset_limit = 164552,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_36_1_1,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 8,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_36_1_1,
    },
    {
      .name = "Conv2D_69_mul_scale_93",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 164224,
      .offset_end = 164308,
      .offset_limit = 164376,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 21,
      .mem_shape = buff_info__mem_shape_M21_42_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -11,
      .Qn = 26,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_42_1_1,
    },
    {
      .name = "Conv2D_69_off_bias_98",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 161328,
      .offset_end = 161496,
      .offset_limit = 161560,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 21,
      .mem_shape = buff_info__mem_shape_M21_42_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_42_1_1,
    },
    {
      .name = "Conv2D_77_zero_off_101",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165856,
      .offset_end = 165857,
      .offset_limit = 165928,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_77_zero_off_101_quant_scale,
      .offset = buff_info_Conv2D_77_zero_off_101_quant_offset,
    },
    {
      .name = "Conv2D_77_mul_scale_102",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 164320,
      .offset_end = 164404,
      .offset_limit = 164472,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_42_1_1,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = -10,
      .Qn = 25,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_42_1_1,
    },
    {
      .name = "Conv2D_77_off_bias_107",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 164128,
      .offset_end = 164212,
      .offset_limit = 164280,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_42_1_1,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 8,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_42_1_1,
    },
    {
      .name = "Conv2D_80_mul_scale_111",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 163936,
      .offset_end = 164032,
      .offset_limit = 164096,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_48_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -11,
      .Qn = 26,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_48_1_1,
    },
    {
      .name = "Conv2D_80_off_bias_116",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 157744,
      .offset_end = 157936,
      .offset_limit = 158000,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_48_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_48_1_1,
    },
    {
      .name = "Conv2D_95_zero_off_119",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 166016,
      .offset_end = 166017,
      .offset_limit = 166088,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_95_zero_off_119_quant_scale,
      .offset = buff_info_Conv2D_95_zero_off_119_quant_offset,
    },
    {
      .name = "Conv2D_95_mul_scale_120",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 164032,
      .offset_end = 164128,
      .offset_limit = 164192,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_48_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -9,
      .Qn = 24,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_48_1_1,
    },
    {
      .name = "Conv2D_95_off_bias_125",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 163840,
      .offset_end = 163936,
      .offset_limit = 164000,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_48_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 8,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_48_1_1,
    },
    {
      .name = "Conv2D_98_mul_scale_126",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 163424,
      .offset_end = 163536,
      .offset_limit = 163600,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 14,
      .mem_shape = buff_info__mem_shape_M14_56_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -11,
      .Qn = 26,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_56_1_1,
    },
    {
      .name = "Conv2D_98_off_bias_131",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 157520,
      .offset_end = 157744,
      .offset_limit = 157808,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 14,
      .mem_shape = buff_info__mem_shape_M14_56_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_56_1_1,
    },
    {
      .name = "Conv2D_109_zero_off_134",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 166000,
      .offset_end = 166001,
      .offset_limit = 166072,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_109_zero_off_134_quant_scale,
      .offset = buff_info_Conv2D_109_zero_off_134_quant_offset,
    },
    {
      .name = "Conv2D_109_mul_scale_135",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 163536,
      .offset_end = 163648,
      .offset_limit = 163712,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_56_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -9,
      .Qn = 24,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_56_1_1,
    },
    {
      .name = "Conv2D_109_off_bias_140",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 163312,
      .offset_end = 163424,
      .offset_limit = 163488,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_56_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 8,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_56_1_1,
    },
    {
      .name = "Conv2D_112_mul_scale_144",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 162944,
      .offset_end = 163072,
      .offset_limit = 163136,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M16_64_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -10,
      .Qn = 25,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_64_1_1,
    },
    {
      .name = "Conv2D_112_off_bias_149",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 157008,
      .offset_end = 157264,
      .offset_limit = 157328,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M16_64_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_64_1_1,
    },
    {
      .name = "Conv2D_123_zero_off_152",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165984,
      .offset_end = 165985,
      .offset_limit = 166056,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_123_zero_off_152_quant_scale,
      .offset = buff_info_Conv2D_123_zero_off_152_quant_offset,
    },
    {
      .name = "Conv2D_123_mul_scale_153",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 163072,
      .offset_end = 163200,
      .offset_limit = 163264,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_64_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -8,
      .Qn = 23,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_64_1_1,
    },
    {
      .name = "Conv2D_123_off_bias_158",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 162688,
      .offset_end = 162816,
      .offset_limit = 162880,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_64_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 8,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_64_1_1,
    },
    {
      .name = "Conv2D_126_mul_scale_162",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 162272,
      .offset_end = 162416,
      .offset_limit = 162480,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_72_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -7,
      .Qn = 22,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_72_1_1,
    },
    {
      .name = "Conv2D_126_off_bias_167",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 156720,
      .offset_end = 157008,
      .offset_limit = 157072,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_72_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_72_1_1,
    },
    {
      .name = "Conv2D_137_zero_off_170",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165968,
      .offset_end = 165969,
      .offset_limit = 166040,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_137_zero_off_170_quant_scale,
      .offset = buff_info_Conv2D_137_zero_off_170_quant_offset,
    },
    {
      .name = "Conv2D_137_mul_scale_171",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 162416,
      .offset_end = 162560,
      .offset_limit = 162624,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_72_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -9,
      .Qn = 24,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_72_1_1,
    },
    {
      .name = "Conv2D_137_off_bias_176",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 162128,
      .offset_end = 162272,
      .offset_limit = 162336,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_72_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 8,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_72_1_1,
    },
    {
      .name = "Conv2D_140_mul_scale_180",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 161664,
      .offset_end = 161824,
      .offset_limit = 161888,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 20,
      .mem_shape = buff_info__mem_shape_M20_80_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -10,
      .Qn = 25,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_80_1_1,
    },
    {
      .name = "Conv2D_140_off_bias_185",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 156400,
      .offset_end = 156720,
      .offset_limit = 156784,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 20,
      .mem_shape = buff_info__mem_shape_M20_80_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_80_1_1,
    },
    {
      .name = "Conv2D_151_zero_off_188",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165952,
      .offset_end = 165953,
      .offset_limit = 166024,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_151_zero_off_188_quant_scale,
      .offset = buff_info_Conv2D_151_zero_off_188_quant_offset,
    },
    {
      .name = "Conv2D_151_mul_scale_189",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 161824,
      .offset_end = 161984,
      .offset_limit = 162048,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_80_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -9,
      .Qn = 24,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_80_1_1,
    },
    {
      .name = "Conv2D_151_off_bias_194",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 161504,
      .offset_end = 161664,
      .offset_limit = 161728,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_80_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 8,
      .Qn = 7,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_80_1_1,
    },
    {
      .name = "Conv2D_154_mul_scale_198",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 160800,
      .offset_end = 160976,
      .offset_limit = 161040,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 22,
      .mem_shape = buff_info__mem_shape_M22_88_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -9,
      .Qn = 24,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_88_1_1,
    },
    {
      .name = "Conv2D_154_off_bias_203",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 155712,
      .offset_end = 156064,
      .offset_limit = 156128,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 22,
      .mem_shape = buff_info__mem_shape_M22_88_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_88_1_1,
    },
    {
      .name = "Conv2D_162_zero_off_206",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165904,
      .offset_end = 165905,
      .offset_limit = 165976,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_162_zero_off_206_quant_scale,
      .offset = buff_info_Conv2D_162_zero_off_206_quant_offset,
    },
    {
      .name = "Conv2D_162_mul_scale_207",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 160976,
      .offset_end = 161152,
      .offset_limit = 161216,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_88_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -9,
      .Qn = 24,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_88_1_1,
    },
    {
      .name = "Conv2D_162_off_bias_212",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 160624,
      .offset_end = 160800,
      .offset_limit = 160864,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_88_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 9,
      .Qn = 6,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_88_1_1,
    },
    {
      .name = "Conv2D_165_mul_scale_216",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 158704,
      .offset_end = 158896,
      .offset_limit = 158960,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -9,
      .Qn = 24,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_165_off_bias_221",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 153408,
      .offset_end = 153792,
      .offset_limit = 153856,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_177_zero_off_224",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 166032,
      .offset_end = 166033,
      .offset_limit = 166104,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_177_zero_off_224_quant_scale,
      .offset = buff_info_Conv2D_177_zero_off_224_quant_offset,
    },
    {
      .name = "Conv2D_177_mul_scale_225",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 158896,
      .offset_end = 159088,
      .offset_limit = 159152,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -9,
      .Qn = 24,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_177_off_bias_230",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 157936,
      .offset_end = 158128,
      .offset_limit = 158192,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 8,
      .Qn = 7,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_180_mul_scale_234",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 159088,
      .offset_end = 159280,
      .offset_limit = 159344,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -11,
      .Qn = 26,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_180_off_bias_239",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 153792,
      .offset_end = 154176,
      .offset_limit = 154240,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_188_zero_off_242",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 166048,
      .offset_end = 166049,
      .offset_limit = 166120,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_188_zero_off_242_quant_scale,
      .offset = buff_info_Conv2D_188_zero_off_242_quant_offset,
    },
    {
      .name = "Conv2D_188_mul_scale_243",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 159280,
      .offset_end = 159472,
      .offset_limit = 159536,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -9,
      .Qn = 24,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_188_off_bias_248",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 158128,
      .offset_end = 158320,
      .offset_limit = 158384,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 8,
      .Qn = 7,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_191_mul_scale_252",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 159472,
      .offset_end = 159664,
      .offset_limit = 159728,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -10,
      .Qn = 25,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_191_off_bias_257",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 154176,
      .offset_end = 154560,
      .offset_limit = 154624,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_199_zero_off_260",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 166064,
      .offset_end = 166065,
      .offset_limit = 166136,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_199_zero_off_260_quant_scale,
      .offset = buff_info_Conv2D_199_zero_off_260_quant_offset,
    },
    {
      .name = "Conv2D_199_mul_scale_261",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 159664,
      .offset_end = 159856,
      .offset_limit = 159920,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -9,
      .Qn = 24,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_199_off_bias_266",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 158320,
      .offset_end = 158512,
      .offset_limit = 158576,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 8,
      .Qn = 7,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_202_mul_scale_270",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 159856,
      .offset_end = 160048,
      .offset_limit = 160112,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -10,
      .Qn = 25,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_202_off_bias_275",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 154560,
      .offset_end = 154944,
      .offset_limit = 155008,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_210_zero_off_278",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 166080,
      .offset_end = 166081,
      .offset_limit = 166152,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_210_zero_off_278_quant_scale,
      .offset = buff_info_Conv2D_210_zero_off_278_quant_offset,
    },
    {
      .name = "Conv2D_210_mul_scale_279",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 160048,
      .offset_end = 160240,
      .offset_limit = 160304,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -8,
      .Qn = 23,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_210_off_bias_284",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 158512,
      .offset_end = 158704,
      .offset_limit = 158768,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M8_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 10,
      .Qn = 5,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_213_mul_scale_288",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 160240,
      .offset_end = 160432,
      .offset_limit = 160496,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -7,
      .Qn = 22,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_213_off_bias_293",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 154944,
      .offset_end = 155328,
      .offset_limit = 155392,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_220_zero_off_296",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 166112,
      .offset_end = 166113,
      .offset_limit = 166184,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_220_zero_off_296_quant_scale,
      .offset = buff_info_Conv2D_220_zero_off_296_quant_offset,
    },
    {
      .name = "Conv2D_220_mul_scale_297",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 160432,
      .offset_end = 160624,
      .offset_limit = 160688,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -8,
      .Qn = 23,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_220_off_bias_302",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 153024,
      .offset_end = 153408,
      .offset_limit = 153472,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 24,
      .mem_shape = buff_info__mem_shape_M24_96_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_96_1_1,
    },
    {
      .name = "Conv2D_229_zero_off_305",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 166096,
      .offset_end = 166097,
      .offset_limit = 166168,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_229_zero_off_305_quant_scale,
      .offset = buff_info_Conv2D_229_zero_off_305_quant_offset,
    },
    {
      .name = "Conv2D_229_mul_scale_306",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165680,
      .offset_end = 165692,
      .offset_limit = 165760,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 6,
      .mem_shape = buff_info__mem_shape_F_6_1_1,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = -7,
      .Qn = 22,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_6_1_1,
    },
    {
      .name = "Conv2D_229_off_bias_311",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165552,
      .offset_end = 165576,
      .offset_limit = 165640,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 6,
      .mem_shape = buff_info__mem_shape_F_6_1_1,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_6_1_1,
    },
    {
      .name = "Conv2D_238_zero_off_314",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165920,
      .offset_end = 165921,
      .offset_limit = 165992,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_238_zero_off_314_quant_scale,
      .offset = buff_info_Conv2D_238_zero_off_314_quant_offset,
    },
    {
      .name = "Conv2D_238_mul_scale_315",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 164848,
      .offset_end = 164912,
      .offset_limit = 164976,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M16_32_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -9,
      .Qn = 24,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_32_1_1,
    },
    {
      .name = "Conv2D_238_off_bias_320",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 162816,
      .offset_end = 162944,
      .offset_limit = 163008,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M16_32_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_32_1_1,
    },
    {
      .name = "Conv2D_247_zero_off_323",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165936,
      .offset_end = 165937,
      .offset_limit = 166008,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_247_zero_off_323_quant_scale,
      .offset = buff_info_Conv2D_247_zero_off_323_quant_offset,
    },
    {
      .name = "Conv2D_247_mul_scale_324",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165728,
      .offset_end = 165732,
      .offset_limit = 165800,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 2,
      .mem_shape = buff_info__mem_shape_F_2_1_1,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = -11,
      .Qn = 26,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_2_1_1,
    },
    {
      .name = "Conv2D_247_off_bias_329",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165696,
      .offset_end = 165704,
      .offset_limit = 165768,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 2,
      .mem_shape = buff_info__mem_shape_F_2_1_1,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_2_1_1,
    },
    {
      .name = "Conv2D_9_weights_inflated_331",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 142368,
      .offset_end = 144096,
      .offset_limit = 144160,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_24_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_24_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_9_weights_inflated_331_quant_scale,
      .offset = buff_info_Conv2D_9_weights_inflated_331_quant_offset,
    },
    {
      .name = "Conv2D_23_weights_inflated_333",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 144096,
      .offset_end = 145824,
      .offset_limit = 145888,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_24_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_24_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_23_weights_inflated_333_quant_scale,
      .offset = buff_info_Conv2D_23_weights_inflated_333_quant_offset,
    },
    {
      .name = "Conv2D_52_weights_inflated_336",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 138048,
      .offset_end = 140352,
      .offset_limit = 140416,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_32_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_32_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_52_weights_inflated_336_quant_scale,
      .offset = buff_info_Conv2D_52_weights_inflated_336_quant_offset,
    },
    {
      .name = "Conv2D_95_weights_inflated_340",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 129088,
      .offset_end = 132544,
      .offset_limit = 132608,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_48_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_48_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_95_weights_inflated_340_quant_scale,
      .offset = buff_info_Conv2D_95_weights_inflated_340_quant_offset,
    },
    {
      .name = "Conv2D_109_weights_inflated_342",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 121472,
      .offset_end = 125504,
      .offset_limit = 125568,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_56_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_56_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_109_weights_inflated_342_quant_scale,
      .offset = buff_info_Conv2D_109_weights_inflated_342_quant_offset,
    },
    {
      .name = "Conv2D_123_weights_inflated_344",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 112256,
      .offset_end = 116864,
      .offset_limit = 116928,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_64_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_64_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_123_weights_inflated_344_quant_scale,
      .offset = buff_info_Conv2D_123_weights_inflated_344_quant_offset,
    },
    {
      .name = "Conv2D_137_weights_inflated_346",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 107072,
      .offset_end = 112256,
      .offset_limit = 112320,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_72_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_72_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_137_weights_inflated_346_quant_scale,
      .offset = buff_info_Conv2D_137_weights_inflated_346_quant_offset,
    },
    {
      .name = "Conv2D_151_weights_inflated_348",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 101312,
      .offset_end = 107072,
      .offset_limit = 107136,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_80_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_80_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_151_weights_inflated_348_quant_scale,
      .offset = buff_info_Conv2D_151_weights_inflated_348_quant_offset,
    },
    {
      .name = "Conv2D_162_weights_inflated_350",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 89216,
      .offset_end = 95552,
      .offset_limit = 95616,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_88_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_88_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_162_weights_inflated_350_quant_scale,
      .offset = buff_info_Conv2D_162_weights_inflated_350_quant_offset,
    },
    {
      .name = "Conv2D_177_weights_inflated_352",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 61568,
      .offset_end = 68480,
      .offset_limit = 68544,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_96_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_96_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_177_weights_inflated_352_quant_scale,
      .offset = buff_info_Conv2D_177_weights_inflated_352_quant_offset,
    },
    {
      .name = "Conv2D_188_weights_inflated_354",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 68480,
      .offset_end = 75392,
      .offset_limit = 75456,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_96_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_96_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_188_weights_inflated_354_quant_scale,
      .offset = buff_info_Conv2D_188_weights_inflated_354_quant_offset,
    },
    {
      .name = "Conv2D_199_weights_inflated_356",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 75392,
      .offset_end = 82304,
      .offset_limit = 82368,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_96_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_96_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_199_weights_inflated_356_quant_scale,
      .offset = buff_info_Conv2D_199_weights_inflated_356_quant_offset,
    },
    {
      .name = "Conv2D_210_weights_inflated_358",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 82304,
      .offset_end = 89216,
      .offset_limit = 89280,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_96_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_96_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_210_weights_inflated_358_quant_scale,
      .offset = buff_info_Conv2D_210_weights_inflated_358_quant_offset,
    },
    {
      .name = "Conv2D_4_weights_submask_0_0_0_0_24_3_3_5_359",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 148496,
      .offset_end = 149576,
      .offset_limit = 149640,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 3,
      .mem_shape = buff_info__mem_shape_L_24_3_3_5,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_24_3_3_5,
      .per_channel = 1,
      .scale = buff_info_Conv2D_4_weights_submask_0_0_0_0_24_3_3_5_359_quant_scale,
      .offset = buff_info_Conv2D_4_weights_submask_0_0_0_0_24_3_3_5_359_quant_offset,
    },
    {
      .name = "Conv2D_4_weights_submask_0_0_3_0_24_3_2_5_360",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 150480,
      .offset_end = 151200,
      .offset_limit = 151264,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 3,
      .mem_shape = buff_info__mem_shape_L_24_3_2_5,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_24_3_2_5,
      .per_channel = 1,
      .scale = buff_info_Conv2D_4_weights_submask_0_0_3_0_24_3_2_5_360_quant_scale,
      .offset = buff_info_Conv2D_4_weights_submask_0_0_3_0_24_3_2_5_360_quant_offset,
    },
    {
      .name = "Pad_20_pad_kern_67",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 164912,
      .offset_end = 164976,
      .offset_limit = 165040,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_64_1_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_64_1_1_1,
    },
    {
      .name = "Pad_42_pad_kern_137",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165520,
      .offset_end = 165552,
      .offset_limit = 165616,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_32_1_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_32_1_1_1,
    },
    {
      .name = "Pad_49_pad_kern_150",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165488,
      .offset_end = 165520,
      .offset_limit = 165584,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_32_1_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_32_1_1_1,
    },
    {
      .name = "Pad_63_pad_kern_191",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165456,
      .offset_end = 165488,
      .offset_limit = 165552,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_32_1_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_32_1_1_1,
    },
    {
      .name = "Pad_85_pad_kern_261",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165664,
      .offset_end = 165680,
      .offset_limit = 165744,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_16_1_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_16_1_1_1,
    },
    {
      .name = "Pad_92_pad_kern_274",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165648,
      .offset_end = 165664,
      .offset_limit = 165728,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_16_1_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_16_1_1_1,
    },
    {
      .name = "Pad_106_pad_kern_313",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165632,
      .offset_end = 165648,
      .offset_limit = 165712,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_16_1_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_16_1_1_1,
    },
    {
      .name = "Pad_120_pad_kern_354",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165616,
      .offset_end = 165632,
      .offset_limit = 165696,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_16_1_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_16_1_1_1,
    },
    {
      .name = "Pad_134_pad_kern_395",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165600,
      .offset_end = 165616,
      .offset_limit = 165680,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_16_1_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_16_1_1_1,
    },
    {
      .name = "Pad_148_pad_kern_436",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165584,
      .offset_end = 165600,
      .offset_limit = 165664,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_16_1_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_16_1_1_1,
    },
    {
      .name = "Pad_170_pad_kern_506",
      .addr_base = {(unsigned char *)(0x71000000UL) /* Equivalent hex address = 0x71000000UL */},
      .offset_start = 165712,
      .offset_end = 165720,
      .offset_limit = 165784,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_8_1_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_8_1_1_1,
    },
#endif // LL_ATON_DBG_BUFFER_INFO_EXCLUDED == 0
    {
      .name = NULL,
    }
  };

  return buff_info;
}

const LL_Buffer_InfoTypeDef *LL_ATON_Output_Buffers_Info_Default(void)
{
  static const uint32_t buff_info__shape_1_512_16[] = { 1, 512, 16, 1 };
  static const uint32_t buff_info__mem_shape_F_1_512_16[] = { 1, 512, 16 };
  static const uint32_t buff_info__shape_1_512_1[] = { 1, 512, 1, 1 };
  static const uint32_t buff_info__mem_shape_F_1_512_1[] = { 1, 512, 1 };
  static const uint32_t buff_info__shape_1_384_1[] = { 1, 384, 1, 1 };
  static const uint32_t buff_info__mem_shape_F_1_384_1[] = { 1, 384, 1 };
  static const uint32_t buff_info__shape_1_384_16[] = { 1, 384, 16, 1 };
  static const uint32_t buff_info__mem_shape_F_1_384_16[] = { 1, 384, 16 };
  static const LL_Buffer_InfoTypeDef buff_info[] = {
    {
      .name = "Transpose_246_out_0",
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 32768,
      .offset_end = 65536,
      .offset_limit = 65600,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 70,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_1_512_16,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = 0,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FLOAT,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_1_512_16,
    },
    {
      .name = "Transpose_255_out_0",
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 90112,
      .offset_end = 92160,
      .offset_limit = 92224,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 66,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_1_512_1,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = 0,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FLOAT,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_1_512_1,
    },
    {
      .name = "Transpose_237_out_0",
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 30720,
      .offset_end = 32256,
      .offset_limit = 32320,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 81,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_1_384_1,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = 0,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FLOAT,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_1_384_1,
    },
    {
      .name = "Transpose_228_out_0",
      .addr_base = {(unsigned char *)(0x342e0000UL) /* Equivalent hex address = 0x342e0000UL */},
      .offset_start = 65536,
      .offset_end = 90112,
      .offset_limit = 90176,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 85,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_1_384_16,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = 0,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FLOAT,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_1_384_16,
    },
    {
      .name = NULL,
    }
  };

  return buff_info;
}

const LL_Buffer_InfoTypeDef *LL_ATON_Internal_Buffers_Info_Default(void)
{
  return NULL;
}

